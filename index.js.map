{"version":3,"file":"index.js","mappings":"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","sources":["webpack://friendlyfiregame/./node_modules/@kayahr/aseprite/lib/main/BlendMode.js","webpack://friendlyfiregame/./node_modules/@kayahr/aseprite/lib/main/Direction.js","webpack://friendlyfiregame/./node_modules/@kayahr/aseprite/lib/main/Format.js","webpack://friendlyfiregame/./node_modules/@kayahr/aseprite/lib/main/index.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/grid/GridOrientation.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/index.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/layer/AnyLayer.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/layer/Compression.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/layer/DrawOrder.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/layer/Encoding.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/layer/decodeTileLayer.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/map/MapOrientation.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/map/MapRenderOrder.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/map/StaggerAxis.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/map/StaggerIndex.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/property/PropertyType.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/text/HorizontalAlign.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/text/VerticalAlign.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/tileset/AnyTileset.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/tileset/FillMode.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/tileset/ObjectAlignment.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/tileset/TileRenderSize.js","webpack://friendlyfiregame/./node_modules/@kayahr/tiled/lib/main/wangset/WangSetType.js","webpack://friendlyfiregame/./node_modules/base64-js/index.js","webpack://friendlyfiregame/./node_modules/fzstd/lib/index.js","webpack://friendlyfiregame/./node_modules/pako/index.js","webpack://friendlyfiregame/./node_modules/pako/lib/deflate.js","webpack://friendlyfiregame/./node_modules/pako/lib/inflate.js","webpack://friendlyfiregame/./node_modules/pako/lib/utils/common.js","webpack://friendlyfiregame/./node_modules/pako/lib/utils/strings.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/adler32.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/constants.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/crc32.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/deflate.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/gzheader.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/inffast.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/inflate.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/inftrees.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/messages.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/trees.js","webpack://friendlyfiregame/./node_modules/pako/lib/zlib/zstream.js","webpack://friendlyfiregame/./src/shared/constants.ts","webpack://friendlyfiregame/./src/web/Animator.ts","webpack://friendlyfiregame/./src/web/Aseprite.ts","webpack://friendlyfiregame/./src/web/Assets.ts","webpack://friendlyfiregame/./src/web/BitmapFont.ts","webpack://friendlyfiregame/./src/web/Camera.ts","webpack://friendlyfiregame/./src/web/Campaign.ts","webpack://friendlyfiregame/./src/web/CharacterSounds.ts","webpack://friendlyfiregame/./src/web/ColorGradient.ts","webpack://friendlyfiregame/./src/web/Conversation.ts","webpack://friendlyfiregame/./src/web/Dance.ts","webpack://friendlyfiregame/./src/web/DialoguePrompt.ts","webpack://friendlyfiregame/./src/web/DisplayManager.ts","webpack://friendlyfiregame/./src/web/Entity.ts","webpack://friendlyfiregame/./src/web/Face.ts","webpack://friendlyfiregame/./src/web/FireGfx.ts","webpack://friendlyfiregame/./src/web/Game.ts","webpack://friendlyfiregame/./src/web/GlobalState.ts","webpack://friendlyfiregame/./src/web/MapInfo.ts","webpack://friendlyfiregame/./src/web/Menu.ts","webpack://friendlyfiregame/./src/web/MountainRiddle.ts","webpack://friendlyfiregame/./src/web/Particles.ts","webpack://friendlyfiregame/./src/web/PlayerConversation.ts","webpack://friendlyfiregame/./src/web/Quests.ts","webpack://friendlyfiregame/./src/web/Renderer.ts","webpack://friendlyfiregame/./src/web/Scene.ts","webpack://friendlyfiregame/./src/web/Scenes.ts","webpack://friendlyfiregame/./src/web/Signal.ts","webpack://friendlyfiregame/./src/web/SpeechBubble.ts","webpack://friendlyfiregame/./src/web/Transition.ts","webpack://friendlyfiregame/./src/web/World.ts","webpack://friendlyfiregame/./src/web/audio/AudioContext.ts","webpack://friendlyfiregame/./src/web/audio/AudioManager.ts","webpack://friendlyfiregame/./src/web/audio/AudioPreferencesStore.ts","webpack://friendlyfiregame/./src/web/audio/Sound.ts","webpack://friendlyfiregame/./src/web/audio/SoundChannel.ts","webpack://friendlyfiregame/./src/web/audio/SoundEmitter.ts","webpack://friendlyfiregame/./src/web/audio/constants.ts","webpack://friendlyfiregame/./src/web/display/FullscreenManager.ts","webpack://friendlyfiregame/./src/web/display/WebFullscreenManager.ts","webpack://friendlyfiregame/./src/web/easings.ts","webpack://friendlyfiregame/./src/web/entities/Bird.ts","webpack://friendlyfiregame/./src/web/entities/Bone.ts","webpack://friendlyfiregame/./src/web/entities/Campfire.ts","webpack://friendlyfiregame/./src/web/entities/Caveman.ts","webpack://friendlyfiregame/./src/web/entities/Chicken.ts","webpack://friendlyfiregame/./src/web/entities/Cloud.ts","webpack://friendlyfiregame/./src/web/entities/ConversationProxy.ts","webpack://friendlyfiregame/./src/web/entities/ExitPortal.ts","webpack://friendlyfiregame/./src/web/entities/Fire.ts","webpack://friendlyfiregame/./src/web/entities/FireState.ts","webpack://friendlyfiregame/./src/web/entities/FlameBoy.ts","webpack://friendlyfiregame/./src/web/entities/Mimic.ts","webpack://friendlyfiregame/./src/web/entities/MovingPlatform.ts","webpack://friendlyfiregame/./src/web/entities/NPC.ts","webpack://friendlyfiregame/./src/web/entities/PhysicsEntity.ts","webpack://friendlyfiregame/./src/web/entities/Player.ts","webpack://friendlyfiregame/./src/web/entities/Portal.ts","webpack://friendlyfiregame/./src/web/entities/PowerShiba.ts","webpack://friendlyfiregame/./src/web/entities/Radio.ts","webpack://friendlyfiregame/./src/web/entities/RiddleStone.ts","webpack://friendlyfiregame/./src/web/entities/ScriptableNPC.ts","webpack://friendlyfiregame/./src/web/entities/Seed.ts","webpack://friendlyfiregame/./src/web/entities/ShadowPresence.ts","webpack://friendlyfiregame/./src/web/entities/Shiba.ts","webpack://friendlyfiregame/./src/web/entities/ShibaState.ts","webpack://friendlyfiregame/./src/web/entities/Sign.ts","webpack://friendlyfiregame/./src/web/entities/Skull.ts","webpack://friendlyfiregame/./src/web/entities/Snowball.ts","webpack://friendlyfiregame/./src/web/entities/Stone.ts","webpack://friendlyfiregame/./src/web/entities/StoneDisciple.ts","webpack://friendlyfiregame/./src/web/entities/SuperThrow.ts","webpack://friendlyfiregame/./src/web/entities/Tree.ts","webpack://friendlyfiregame/./src/web/entities/Wall.ts","webpack://friendlyfiregame/./src/web/entities/Window.ts","webpack://friendlyfiregame/./src/web/entities/Wing.ts","webpack://friendlyfiregame/./src/web/entities/Wood.ts","webpack://friendlyfiregame/./src/web/geom/Direction.ts","webpack://friendlyfiregame/./src/web/graphics.ts","webpack://friendlyfiregame/./src/web/graphics/AffineTransform.ts","webpack://friendlyfiregame/./src/web/graphics/Line2.ts","webpack://friendlyfiregame/./src/web/graphics/Polygon2.ts","webpack://friendlyfiregame/./src/web/graphics/Vector2.ts","webpack://friendlyfiregame/./src/web/input/ControllerEvent.ts","webpack://friendlyfiregame/./src/web/input/ControllerEventType.ts","webpack://friendlyfiregame/./src/web/input/ControllerFamily.ts","webpack://friendlyfiregame/./src/web/input/ControllerIntent.ts","webpack://friendlyfiregame/./src/web/input/ControllerManager.ts","webpack://friendlyfiregame/./src/web/input/GamepadInput.ts","webpack://friendlyfiregame/./src/web/input/GamepadModel.ts","webpack://friendlyfiregame/./src/web/input/GamepadStyle.ts","webpack://friendlyfiregame/./src/web/input/Keyboard.ts","webpack://friendlyfiregame/./src/web/preferences/Preferences.ts","webpack://friendlyfiregame/./src/web/scene/AsepriteNode.ts","webpack://friendlyfiregame/./src/web/scene/ControlTooltipNode.ts","webpack://friendlyfiregame/./src/web/scene/ImageNode.ts","webpack://friendlyfiregame/./src/web/scene/ProgressBarNode.ts","webpack://friendlyfiregame/./src/web/scene/RootNode.ts","webpack://friendlyfiregame/./src/web/scene/SceneNode.ts","webpack://friendlyfiregame/./src/web/scene/SceneNodeAnimation.ts","webpack://friendlyfiregame/./src/web/scene/TextNode.ts","webpack://friendlyfiregame/./src/web/scenes/AmbientSoundId.ts","webpack://friendlyfiregame/./src/web/scenes/BgmId.ts","webpack://friendlyfiregame/./src/web/scenes/CharacterSelectionScene.ts","webpack://friendlyfiregame/./src/web/scenes/ControlsScene.ts","webpack://friendlyfiregame/./src/web/scenes/CreditsScene.ts","webpack://friendlyfiregame/./src/web/scenes/EndScene.ts","webpack://friendlyfiregame/./src/web/scenes/FadeDirection.ts","webpack://friendlyfiregame/./src/web/scenes/GameObject.ts","webpack://friendlyfiregame/./src/web/scenes/GameScene.ts","webpack://friendlyfiregame/./src/web/scenes/GotItemScene.ts","webpack://friendlyfiregame/./src/web/scenes/LoadingScene.ts","webpack://friendlyfiregame/./src/web/scenes/OptionsScene.ts","webpack://friendlyfiregame/./src/web/scenes/PauseScene.ts","webpack://friendlyfiregame/./src/web/scenes/TitleScene.ts","webpack://friendlyfiregame/./src/web/steamworks/SteamworksApi.ts","webpack://friendlyfiregame/./src/web/transitions/CurtainTransition.ts","webpack://friendlyfiregame/./src/web/transitions/FadeTransition.ts","webpack://friendlyfiregame/./src/web/transitions/SlideTransition.ts","webpack://friendlyfiregame/./src/web/util.ts","webpack://friendlyfiregame/./node_modules/tslib/tslib.es6.mjs","webpack://friendlyfiregame/webpack/bootstrap","webpack://friendlyfiregame/webpack/runtime/define property getters","webpack://friendlyfiregame/webpack/runtime/hasOwnProperty shorthand","webpack://friendlyfiregame/webpack/runtime/make namespace object","webpack://friendlyfiregame/./src/web/FriendlyFire.ts"],"sourcesContent":["\"use strict\";\n/*\n * Copyright (C) 2023 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlendMode = void 0;\n/** Layer blend modes. */\nvar BlendMode;\n(function (BlendMode) {\n    BlendMode[\"Normal\"] = \"normal\";\n    BlendMode[\"Darken\"] = \"darken\";\n    BlendMode[\"Multiply\"] = \"multiply\";\n    BlendMode[\"ColorBurn\"] = \"color_burn\";\n    BlendMode[\"Lighten\"] = \"lighten\";\n    BlendMode[\"Screen\"] = \"screen\";\n    BlendMode[\"ColorDodge\"] = \"color_dodge\";\n    BlendMode[\"Addition\"] = \"addition\";\n    BlendMode[\"Overlay\"] = \"overlay\";\n    BlendMode[\"SoftLight\"] = \"soft_light\";\n    BlendMode[\"HardLight\"] = \"hard_light\";\n    BlendMode[\"Difference\"] = \"difference\";\n    BlendMode[\"Exclusion\"] = \"exclusion\";\n    BlendMode[\"Subtract\"] = \"subtract\";\n    BlendMode[\"Divide\"] = \"divide\";\n    BlendMode[\"Hue\"] = \"hsl_hue\";\n    BlendMode[\"Saturation\"] = \"hsl_saturation\";\n    BlendMode[\"Color\"] = \"hsl_color\";\n    BlendMode[\"Luminosity\"] = \"hsl_luminosity\";\n})(BlendMode || (exports.BlendMode = BlendMode = {}));\n//# sourceMappingURL=BlendMode.js.map","\"use strict\";\n/*\n * Copyright (C) 2023 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Direction = void 0;\n/** Frame animation direction. */\nvar Direction;\n(function (Direction) {\n    /** Normal animation direction. */\n    Direction[\"Forward\"] = \"forward\";\n    /** Reversed animation direction. */\n    Direction[\"Reverse\"] = \"reverse\";\n    /** Animation is played forward and then backward and so on. */\n    Direction[\"PingPong\"] = \"pingpong\";\n})(Direction || (exports.Direction = Direction = {}));\n//# sourceMappingURL=Direction.js.map","\"use strict\";\n/*\n * Copyright (C) 2023 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Format = void 0;\n/** Sprite image format. */\nvar Format;\n(function (Format) {\n    /** 32 bit RGBA color format. */\n    Format[\"RGBA8888\"] = \"RGBA8888\";\n    /** 256 color palette format. */\n    Format[\"I8\"] = \"I8\";\n})(Format || (exports.Format = Format = {}));\n//# sourceMappingURL=Format.js.map","\"use strict\";\n/*\n * Copyright (C) 2023 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Format = exports.Direction = exports.BlendMode = void 0;\nrequire(\"./json\");\nvar BlendMode_1 = require(\"./BlendMode\");\nObject.defineProperty(exports, \"BlendMode\", { enumerable: true, get: function () { return BlendMode_1.BlendMode; } });\nvar Direction_1 = require(\"./Direction\");\nObject.defineProperty(exports, \"Direction\", { enumerable: true, get: function () { return Direction_1.Direction; } });\nvar Format_1 = require(\"./Format\");\nObject.defineProperty(exports, \"Format\", { enumerable: true, get: function () { return Format_1.Format; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GridOrientation = void 0;\n/** Grid orientations. */\nvar GridOrientation;\n(function (GridOrientation) {\n    GridOrientation[\"ORTHOGONAL\"] = \"orthogonal\";\n    GridOrientation[\"ISOMETRIC\"] = \"isometric\";\n})(GridOrientation || (exports.GridOrientation = GridOrientation = {}));\n//# sourceMappingURL=GridOrientation.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WangSetType = exports.TileRenderSize = exports.ObjectAlignment = exports.FillMode = exports.isTilesetRef = exports.isEmbeddedTileset = exports.VerticalAlign = exports.HorizontalAlign = exports.PropertyType = exports.StaggerIndex = exports.StaggerAxis = exports.RenderOrder = exports.MapOrientation = exports.Encoding = exports.DrawOrder = exports.decodeTileLayer = exports.Compression = exports.isUnencodedTileLayer = exports.isTileLayer = exports.isObjectGroup = exports.isImageLayer = exports.isGroup = exports.isEncodedTileLayer = exports.GridOrientation = void 0;\nrequire(\"./json\");\nvar GridOrientation_1 = require(\"./grid/GridOrientation\");\nObject.defineProperty(exports, \"GridOrientation\", { enumerable: true, get: function () { return GridOrientation_1.GridOrientation; } });\nvar AnyLayer_1 = require(\"./layer/AnyLayer\");\nObject.defineProperty(exports, \"isEncodedTileLayer\", { enumerable: true, get: function () { return AnyLayer_1.isEncodedTileLayer; } });\nObject.defineProperty(exports, \"isGroup\", { enumerable: true, get: function () { return AnyLayer_1.isGroup; } });\nObject.defineProperty(exports, \"isImageLayer\", { enumerable: true, get: function () { return AnyLayer_1.isImageLayer; } });\nObject.defineProperty(exports, \"isObjectGroup\", { enumerable: true, get: function () { return AnyLayer_1.isObjectGroup; } });\nObject.defineProperty(exports, \"isTileLayer\", { enumerable: true, get: function () { return AnyLayer_1.isTileLayer; } });\nObject.defineProperty(exports, \"isUnencodedTileLayer\", { enumerable: true, get: function () { return AnyLayer_1.isUnencodedTileLayer; } });\nvar Compression_1 = require(\"./layer/Compression\");\nObject.defineProperty(exports, \"Compression\", { enumerable: true, get: function () { return Compression_1.Compression; } });\nvar decodeTileLayer_1 = require(\"./layer/decodeTileLayer\");\nObject.defineProperty(exports, \"decodeTileLayer\", { enumerable: true, get: function () { return decodeTileLayer_1.decodeTileLayer; } });\nvar DrawOrder_1 = require(\"./layer/DrawOrder\");\nObject.defineProperty(exports, \"DrawOrder\", { enumerable: true, get: function () { return DrawOrder_1.DrawOrder; } });\nvar Encoding_1 = require(\"./layer/Encoding\");\nObject.defineProperty(exports, \"Encoding\", { enumerable: true, get: function () { return Encoding_1.Encoding; } });\nvar MapOrientation_1 = require(\"./map/MapOrientation\");\nObject.defineProperty(exports, \"MapOrientation\", { enumerable: true, get: function () { return MapOrientation_1.MapOrientation; } });\nvar MapRenderOrder_1 = require(\"./map/MapRenderOrder\");\nObject.defineProperty(exports, \"RenderOrder\", { enumerable: true, get: function () { return MapRenderOrder_1.MapRenderOrder; } });\nvar StaggerAxis_1 = require(\"./map/StaggerAxis\");\nObject.defineProperty(exports, \"StaggerAxis\", { enumerable: true, get: function () { return StaggerAxis_1.StaggerAxis; } });\nvar StaggerIndex_1 = require(\"./map/StaggerIndex\");\nObject.defineProperty(exports, \"StaggerIndex\", { enumerable: true, get: function () { return StaggerIndex_1.StaggerIndex; } });\nvar PropertyType_1 = require(\"./property/PropertyType\");\nObject.defineProperty(exports, \"PropertyType\", { enumerable: true, get: function () { return PropertyType_1.PropertyType; } });\nvar HorizontalAlign_1 = require(\"./text/HorizontalAlign\");\nObject.defineProperty(exports, \"HorizontalAlign\", { enumerable: true, get: function () { return HorizontalAlign_1.HorizontalAlign; } });\nvar VerticalAlign_1 = require(\"./text/VerticalAlign\");\nObject.defineProperty(exports, \"VerticalAlign\", { enumerable: true, get: function () { return VerticalAlign_1.VerticalAlign; } });\nvar AnyTileset_1 = require(\"./tileset/AnyTileset\");\nObject.defineProperty(exports, \"isEmbeddedTileset\", { enumerable: true, get: function () { return AnyTileset_1.isEmbeddedTileset; } });\nObject.defineProperty(exports, \"isTilesetRef\", { enumerable: true, get: function () { return AnyTileset_1.isTilesetRef; } });\nvar FillMode_1 = require(\"./tileset/FillMode\");\nObject.defineProperty(exports, \"FillMode\", { enumerable: true, get: function () { return FillMode_1.FillMode; } });\nvar ObjectAlignment_1 = require(\"./tileset/ObjectAlignment\");\nObject.defineProperty(exports, \"ObjectAlignment\", { enumerable: true, get: function () { return ObjectAlignment_1.ObjectAlignment; } });\nvar TileRenderSize_1 = require(\"./tileset/TileRenderSize\");\nObject.defineProperty(exports, \"TileRenderSize\", { enumerable: true, get: function () { return TileRenderSize_1.TileRenderSize; } });\nvar WangSetType_1 = require(\"./wangset/WangSetType\");\nObject.defineProperty(exports, \"WangSetType\", { enumerable: true, get: function () { return WangSetType_1.WangSetType; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isGroup = exports.isImageLayer = exports.isObjectGroup = exports.isUnencodedTileLayer = exports.isEncodedTileLayer = exports.isTileLayer = void 0;\nconst Encoding_1 = require(\"./Encoding\");\n/**\n * Checks if given layer is a tile layer.\n *\n * @param layer - The layer to check.\n * @returns True if layer is a tile layer, false if not.\n */\nfunction isTileLayer(layer) {\n    return layer.type === \"tilelayer\";\n}\nexports.isTileLayer = isTileLayer;\n/**\n * Checks if given layer is an encoded tile layer.\n *\n * @param layer - The layer to check.\n * @returns True if layer is an encoded tile layer, false if not.\n */\nfunction isEncodedTileLayer(layer) {\n    return layer.type === \"tilelayer\" && layer.encoding !== Encoding_1.Encoding.CSV;\n}\nexports.isEncodedTileLayer = isEncodedTileLayer;\n/**\n * Checks if given layer is an encoded tile layer.\n *\n * @param layer - The layer to check.\n * @returns True if layer is an unencoded tile layer, false if not.\n */\nfunction isUnencodedTileLayer(layer) {\n    return layer.type === \"tilelayer\" && (layer.encoding == null || layer.encoding === Encoding_1.Encoding.CSV);\n}\nexports.isUnencodedTileLayer = isUnencodedTileLayer;\n/**\n * Checks if given layer is an object group.\n *\n * @param layer - The layer to check.\n * @returns True if layer is an object group, false if not.\n */\nfunction isObjectGroup(layer) {\n    return layer.type === \"objectgroup\";\n}\nexports.isObjectGroup = isObjectGroup;\n/**\n * Checks if given layer is an image layer.\n *\n * @param layer - The layer to check.\n * @returns True if layer is an image layer, false if not.\n */\nfunction isImageLayer(layer) {\n    return layer.type === \"imagelayer\";\n}\nexports.isImageLayer = isImageLayer;\n/**\n * Checks if given layer is a group.\n *\n * @param layer - The layer to check.\n * @returns True if layer is a group, false if not.\n */\nfunction isGroup(layer) {\n    return layer.type === \"group\";\n}\nexports.isGroup = isGroup;\n//# sourceMappingURL=AnyLayer.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Compression = void 0;\n/** Data compression. */\nvar Compression;\n(function (Compression) {\n    Compression[\"NONE\"] = \"\";\n    Compression[\"GZIP\"] = \"gzip\";\n    Compression[\"ZLIB\"] = \"zlib\";\n    Compression[\"ZSTD\"] = \"zstd\";\n})(Compression || (exports.Compression = Compression = {}));\n//# sourceMappingURL=Compression.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DrawOrder = void 0;\n/** Object group draw order. */\nvar DrawOrder;\n(function (DrawOrder) {\n    DrawOrder[\"TOPDOWN\"] = \"topdown\";\n    DrawOrder[\"INDEX\"] = \"index\";\n})(DrawOrder || (exports.DrawOrder = DrawOrder = {}));\n//# sourceMappingURL=DrawOrder.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Encoding = void 0;\n/** Tile layer encoding. */\nvar Encoding;\n(function (Encoding) {\n    Encoding[\"CSV\"] = \"csv\";\n    Encoding[\"BASE64\"] = \"base64\";\n})(Encoding || (exports.Encoding = Encoding = {}));\n//# sourceMappingURL=Encoding.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeTileLayer = void 0;\nconst base64_js_1 = require(\"base64-js\");\nconst fzstd_1 = require(\"fzstd\");\nconst pako_1 = require(\"pako\");\nconst AnyLayer_1 = require(\"./AnyLayer\");\nconst Compression_1 = require(\"./Compression\");\nconst Encoding_1 = require(\"./Encoding\");\n// Decoder implementations\nconst decoders = {\n    [Encoding_1.Encoding.BASE64]: base64_js_1.toByteArray\n};\n// Decompressor implementations\nconst decompressors = {\n    [Compression_1.Compression.NONE]: (data) => data,\n    [Compression_1.Compression.ZLIB]: pako_1.inflate,\n    [Compression_1.Compression.GZIP]: pako_1.ungzip,\n    [Compression_1.Compression.ZSTD]: fzstd_1.decompress\n};\n/**\n * Decodes the given tile layer (if necessary) and returns the decoded tile layer.\n *\n * @param layer - The tile layer to decode.\n * @returns The decoded tile layer or the original layer if it was not encoded.\n */\nfunction decodeTileLayer(layer) {\n    if ((0, AnyLayer_1.isUnencodedTileLayer)(layer)) {\n        // Nothing to decode\n        return layer;\n    }\n    const decode = decoders[layer.encoding];\n    const decompress = decompressors[layer.compression ?? Compression_1.Compression.NONE];\n    const toArray = (data) => Array.from(new Uint32Array(data.buffer, data.byteOffset));\n    return {\n        ...layer,\n        compression: Compression_1.Compression.NONE,\n        encoding: Encoding_1.Encoding.CSV,\n        data: layer.data != null ? toArray(decompress(decode(layer.data))) : undefined,\n        chunks: layer.chunks?.map(chunk => ({ ...chunk, data: toArray(decompress(decode(chunk.data))) }))\n    };\n}\nexports.decodeTileLayer = decodeTileLayer;\n//# sourceMappingURL=decodeTileLayer.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapOrientation = void 0;\n/** Map orientations. */\nvar MapOrientation;\n(function (MapOrientation) {\n    MapOrientation[\"ORTHOGONAL\"] = \"orthogonal\";\n    MapOrientation[\"ISOMETRIC\"] = \"isometric\";\n    MapOrientation[\"STAGGERED\"] = \"staggered\";\n    MapOrientation[\"HEXAGONAL\"] = \"hexagonal\";\n})(MapOrientation || (exports.MapOrientation = MapOrientation = {}));\n//# sourceMappingURL=MapOrientation.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapRenderOrder = void 0;\n/** Map render order. */\nvar MapRenderOrder;\n(function (MapRenderOrder) {\n    /** Default right-down render order. */\n    MapRenderOrder[\"RIGHT_DOWN\"] = \"right-down\";\n    /** Right-up render order. */\n    MapRenderOrder[\"RIGHT_UP\"] = \"right-up\";\n    /** Left-down render order. */\n    MapRenderOrder[\"LEFT_DOWN\"] = \"left-down\";\n    /** Left-up render order. Currently only supported for orthogonal maps. */\n    MapRenderOrder[\"LEFT_UP\"] = \"left-up\";\n})(MapRenderOrder || (exports.MapRenderOrder = MapRenderOrder = {}));\n//# sourceMappingURL=MapRenderOrder.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StaggerAxis = void 0;\n/** Stagger axis. */\nvar StaggerAxis;\n(function (StaggerAxis) {\n    StaggerAxis[\"X\"] = \"x\";\n    StaggerAxis[\"Y\"] = \"y\";\n})(StaggerAxis || (exports.StaggerAxis = StaggerAxis = {}));\n//# sourceMappingURL=StaggerAxis.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StaggerIndex = void 0;\n/** Stagger axis. */\nvar StaggerIndex;\n(function (StaggerIndex) {\n    StaggerIndex[\"ODD\"] = \"odd\";\n    StaggerIndex[\"EVEN\"] = \"even\";\n})(StaggerIndex || (exports.StaggerIndex = StaggerIndex = {}));\n//# sourceMappingURL=StaggerIndex.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PropertyType = void 0;\n/** Property type. */\nvar PropertyType;\n(function (PropertyType) {\n    PropertyType[\"STRING\"] = \"string\";\n    PropertyType[\"INT\"] = \"int\";\n    PropertyType[\"FLOAT\"] = \"float\";\n    PropertyType[\"BOOL\"] = \"bool\";\n    PropertyType[\"COLOR\"] = \"color\";\n    PropertyType[\"FILE\"] = \"file\";\n    PropertyType[\"OBJECT\"] = \"object\";\n    PropertyType[\"CLASS\"] = \"class\";\n})(PropertyType || (exports.PropertyType = PropertyType = {}));\n//# sourceMappingURL=PropertyType.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HorizontalAlign = void 0;\n/** Horizontal alignment. */\nvar HorizontalAlign;\n(function (HorizontalAlign) {\n    HorizontalAlign[\"CENTER\"] = \"center\";\n    HorizontalAlign[\"RIGHT\"] = \"right\";\n    HorizontalAlign[\"JUSTIFY\"] = \"justify\";\n    HorizontalAlign[\"LEFT\"] = \"left\";\n})(HorizontalAlign || (exports.HorizontalAlign = HorizontalAlign = {}));\n//# sourceMappingURL=HorizontalAlign.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VerticalAlign = void 0;\n/** Vertical alignment. */\nvar VerticalAlign;\n(function (VerticalAlign) {\n    VerticalAlign[\"CENTER\"] = \"center\";\n    VerticalAlign[\"BOTTOM\"] = \"bottom\";\n    VerticalAlign[\"TOP\"] = \"top\";\n})(VerticalAlign || (exports.VerticalAlign = VerticalAlign = {}));\n//# sourceMappingURL=VerticalAlign.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTilesetRef = exports.isEmbeddedTileset = void 0;\n/**\n * Checks if given tileset is an embedded tileset.\n *\n * @params tileset - The tileset to check.\n * @returns True if tileset is an embedded tileset, false if not.\n */\nfunction isEmbeddedTileset(tileset) {\n    return tileset.source == null;\n}\nexports.isEmbeddedTileset = isEmbeddedTileset;\n/**\n * Checks if given tileset is a external tileset reference.\n *\n * @params tileset - The tileset to check.\n * @returns True if tileset is an external tileset reference, false if not.\n */\nfunction isTilesetRef(tileset) {\n    return tileset.source != null;\n}\nexports.isTilesetRef = isTilesetRef;\n//# sourceMappingURL=AnyTileset.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FillMode = void 0;\n/** Tile fill mode. */\nvar FillMode;\n(function (FillMode) {\n    FillMode[\"STRETCH\"] = \"stretch\";\n    FillMode[\"PRESERVE_ASPECT_FIT\"] = \"preserve-aspect-fit\";\n})(FillMode || (exports.FillMode = FillMode = {}));\n//# sourceMappingURL=FillMode.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectAlignment = void 0;\n/** Alignment to use for tile objects. */\nvar ObjectAlignment;\n(function (ObjectAlignment) {\n    ObjectAlignment[\"UNSPECIFIED\"] = \"unspecified\";\n    ObjectAlignment[\"TOPLEFT\"] = \"topleft\";\n    ObjectAlignment[\"TOP\"] = \"top\";\n    ObjectAlignment[\"TOPRIGHT\"] = \"topright\";\n    ObjectAlignment[\"LEFT\"] = \"left\";\n    ObjectAlignment[\"CENTER\"] = \"center\";\n    ObjectAlignment[\"RIGHT\"] = \"right\";\n    ObjectAlignment[\"BOTTOMLEFT\"] = \"bottomleft\";\n    ObjectAlignment[\"BOTTOM\"] = \"bottom\";\n    ObjectAlignment[\"BOTTOMRIGHT\"] = \"bottomright\";\n})(ObjectAlignment || (exports.ObjectAlignment = ObjectAlignment = {}));\n//# sourceMappingURL=ObjectAlignment.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TileRenderSize = void 0;\n/** Tile render size. */\nvar TileRenderSize;\n(function (TileRenderSize) {\n    TileRenderSize[\"TILE\"] = \"tile\";\n    TileRenderSize[\"GRID\"] = \"grid\";\n})(TileRenderSize || (exports.TileRenderSize = TileRenderSize = {}));\n//# sourceMappingURL=TileRenderSize.js.map","\"use strict\";\n/*\n * Copyright (C) 2024 Klaus Reimer <k@ailis.de>\n * See LICENSE.md for licensing information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WangSetType = void 0;\n/** Wang set type. */\nvar WangSetType;\n(function (WangSetType) {\n    WangSetType[\"CORNER\"] = \"corner\";\n    WangSetType[\"EDGE\"] = \"edge\";\n    WangSetType[\"MIXED\"] = \"mixed\";\n})(WangSetType || (exports.WangSetType = WangSetType = {}));\n//# sourceMappingURL=WangSetType.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","\"use strict\";\n// Some numerical data is initialized as -1 even when it doesn't need initialization to help the JIT infer types\n// aliases for shorter compressed code (most minifers don't do this)\nvar ab = ArrayBuffer, u8 = Uint8Array, u16 = Uint16Array, i16 = Int16Array, u32 = Uint32Array, i32 = Int32Array;\nvar slc = function (v, s, e) {\n    if (u8.prototype.slice)\n        return u8.prototype.slice.call(v, s, e);\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    var n = new u8(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\nvar fill = function (v, n, s, e) {\n    if (u8.prototype.fill)\n        return u8.prototype.fill.call(v, n, s, e);\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    for (; s < e; ++s)\n        v[s] = n;\n    return v;\n};\nvar cpw = function (v, t, s, e) {\n    if (u8.prototype.copyWithin)\n        return u8.prototype.copyWithin.call(v, t, s, e);\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    while (s < e) {\n        v[t++] = v[s++];\n    }\n};\n/**\n * Codes for errors generated within this library\n */\nexports.ZstdErrorCode = {\n    InvalidData: 0,\n    WindowSizeTooLarge: 1,\n    InvalidBlockType: 2,\n    FSEAccuracyTooHigh: 3,\n    DistanceTooFarBack: 4,\n    UnexpectedEOF: 5\n};\n// error codes\nvar ec = [\n    'invalid zstd data',\n    'window size too large (>2046MB)',\n    'invalid block type',\n    'FSE accuracy too high',\n    'match distance too far back',\n    'unexpected EOF'\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\nvar rb = function (d, b, n) {\n    var i = 0, o = 0;\n    for (; i < n; ++i)\n        o |= d[b++] << (i << 3);\n    return o;\n};\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\n// read Zstandard frame header\nvar rzfh = function (dat, w) {\n    var n3 = dat[0] | (dat[1] << 8) | (dat[2] << 16);\n    if (n3 == 0x2FB528 && dat[3] == 253) {\n        // Zstandard\n        var flg = dat[4];\n        //    single segment       checksum             dict flag     frame content flag\n        var ss = (flg >> 5) & 1, cc = (flg >> 2) & 1, df = flg & 3, fcf = flg >> 6;\n        if (flg & 8)\n            err(0);\n        // byte\n        var bt = 6 - ss;\n        // dict bytes\n        var db = df == 3 ? 4 : df;\n        // dictionary id\n        var di = rb(dat, bt, db);\n        bt += db;\n        // frame size bytes\n        var fsb = fcf ? (1 << fcf) : ss;\n        // frame source size\n        var fss = rb(dat, bt, fsb) + ((fcf == 1) && 256);\n        // window size\n        var ws = fss;\n        if (!ss) {\n            // window descriptor\n            var wb = 1 << (10 + (dat[5] >> 3));\n            ws = wb + (wb >> 3) * (dat[5] & 7);\n        }\n        if (ws > 2145386496)\n            err(1);\n        var buf = new u8((w == 1 ? (fss || ws) : w ? 0 : ws) + 12);\n        buf[0] = 1, buf[4] = 4, buf[8] = 8;\n        return {\n            b: bt + fsb,\n            y: 0,\n            l: 0,\n            d: di,\n            w: (w && w != 1) ? w : buf.subarray(12),\n            e: ws,\n            o: new i32(buf.buffer, 0, 3),\n            u: fss,\n            c: cc,\n            m: Math.min(131072, ws)\n        };\n    }\n    else if (((n3 >> 4) | (dat[3] << 20)) == 0x184D2A5) {\n        // skippable\n        return b4(dat, 4) + 8;\n    }\n    err(0);\n};\n// most significant bit for nonzero\nvar msb = function (val) {\n    var bits = 0;\n    for (; (1 << bits) <= val; ++bits)\n        ;\n    return bits - 1;\n};\n// read finite state entropy\nvar rfse = function (dat, bt, mal) {\n    // table pos\n    var tpos = (bt << 3) + 4;\n    // accuracy log\n    var al = (dat[bt] & 15) + 5;\n    if (al > mal)\n        err(3);\n    // size\n    var sz = 1 << al;\n    // probabilities symbols  repeat   index   high threshold\n    var probs = sz, sym = -1, re = -1, i = -1, ht = sz;\n    // optimization: single allocation is much faster\n    var buf = new ab(512 + (sz << 2));\n    var freq = new i16(buf, 0, 256);\n    // same view as freq\n    var dstate = new u16(buf, 0, 256);\n    var nstate = new u16(buf, 512, sz);\n    var bb1 = 512 + (sz << 1);\n    var syms = new u8(buf, bb1, sz);\n    var nbits = new u8(buf, bb1 + sz);\n    while (sym < 255 && probs > 0) {\n        var bits = msb(probs + 1);\n        var cbt = tpos >> 3;\n        // mask\n        var msk = (1 << (bits + 1)) - 1;\n        var val = ((dat[cbt] | (dat[cbt + 1] << 8) | (dat[cbt + 2] << 16)) >> (tpos & 7)) & msk;\n        // mask (1 fewer bit)\n        var msk1fb = (1 << bits) - 1;\n        // max small value\n        var msv = msk - probs - 1;\n        // small value\n        var sval = val & msk1fb;\n        if (sval < msv)\n            tpos += bits, val = sval;\n        else {\n            tpos += bits + 1;\n            if (val > msk1fb)\n                val -= msv;\n        }\n        freq[++sym] = --val;\n        if (val == -1) {\n            probs += val;\n            syms[--ht] = sym;\n        }\n        else\n            probs -= val;\n        if (!val) {\n            do {\n                // repeat byte\n                var rbt = tpos >> 3;\n                re = ((dat[rbt] | (dat[rbt + 1] << 8)) >> (tpos & 7)) & 3;\n                tpos += 2;\n                sym += re;\n            } while (re == 3);\n        }\n    }\n    if (sym > 255 || probs)\n        err(0);\n    var sympos = 0;\n    // sym step (coprime with sz - formula from zstd source)\n    var sstep = (sz >> 1) + (sz >> 3) + 3;\n    // sym mask\n    var smask = sz - 1;\n    for (var s = 0; s <= sym; ++s) {\n        var sf = freq[s];\n        if (sf < 1) {\n            dstate[s] = -sf;\n            continue;\n        }\n        // This is split into two loops in zstd to avoid branching, but as JS is higher-level that is unnecessary\n        for (i = 0; i < sf; ++i) {\n            syms[sympos] = s;\n            do {\n                sympos = (sympos + sstep) & smask;\n            } while (sympos >= ht);\n        }\n    }\n    // After spreading symbols, should be zero again\n    if (sympos)\n        err(0);\n    for (i = 0; i < sz; ++i) {\n        // next state\n        var ns = dstate[syms[i]]++;\n        // num bits\n        var nb = nbits[i] = al - msb(ns);\n        nstate[i] = (ns << nb) - sz;\n    }\n    return [(tpos + 7) >> 3, {\n            b: al,\n            s: syms,\n            n: nbits,\n            t: nstate\n        }];\n};\n// read huffman\nvar rhu = function (dat, bt) {\n    //  index  weight count\n    var i = 0, wc = -1;\n    //    buffer             header byte\n    var buf = new u8(292), hb = dat[bt];\n    // huffman weights\n    var hw = buf.subarray(0, 256);\n    // rank count\n    var rc = buf.subarray(256, 268);\n    // rank index\n    var ri = new u16(buf.buffer, 268);\n    // NOTE: at this point bt is 1 less than expected\n    if (hb < 128) {\n        // end byte, fse decode table\n        var _a = rfse(dat, bt + 1, 6), ebt = _a[0], fdt = _a[1];\n        bt += hb;\n        var epos = ebt << 3;\n        // last byte\n        var lb = dat[bt];\n        if (!lb)\n            err(0);\n        //  state1   state2   state1 bits   state2 bits\n        var st1 = 0, st2 = 0, btr1 = fdt.b, btr2 = btr1;\n        // fse pos\n        // pre-increment to account for original deficit of 1\n        var fpos = (++bt << 3) - 8 + msb(lb);\n        for (;;) {\n            fpos -= btr1;\n            if (fpos < epos)\n                break;\n            var cbt = fpos >> 3;\n            st1 += ((dat[cbt] | (dat[cbt + 1] << 8)) >> (fpos & 7)) & ((1 << btr1) - 1);\n            hw[++wc] = fdt.s[st1];\n            fpos -= btr2;\n            if (fpos < epos)\n                break;\n            cbt = fpos >> 3;\n            st2 += ((dat[cbt] | (dat[cbt + 1] << 8)) >> (fpos & 7)) & ((1 << btr2) - 1);\n            hw[++wc] = fdt.s[st2];\n            btr1 = fdt.n[st1];\n            st1 = fdt.t[st1];\n            btr2 = fdt.n[st2];\n            st2 = fdt.t[st2];\n        }\n        if (++wc > 255)\n            err(0);\n    }\n    else {\n        wc = hb - 127;\n        for (; i < wc; i += 2) {\n            var byte = dat[++bt];\n            hw[i] = byte >> 4;\n            hw[i + 1] = byte & 15;\n        }\n        ++bt;\n    }\n    // weight exponential sum\n    var wes = 0;\n    for (i = 0; i < wc; ++i) {\n        var wt = hw[i];\n        // bits must be at most 11, same as weight\n        if (wt > 11)\n            err(0);\n        wes += wt && (1 << (wt - 1));\n    }\n    // max bits\n    var mb = msb(wes) + 1;\n    // table size\n    var ts = 1 << mb;\n    // remaining sum\n    var rem = ts - wes;\n    // must be power of 2\n    if (rem & (rem - 1))\n        err(0);\n    hw[wc++] = msb(rem) + 1;\n    for (i = 0; i < wc; ++i) {\n        var wt = hw[i];\n        ++rc[hw[i] = wt && (mb + 1 - wt)];\n    }\n    // huf buf\n    var hbuf = new u8(ts << 1);\n    //    symbols                      num bits\n    var syms = hbuf.subarray(0, ts), nb = hbuf.subarray(ts);\n    ri[mb] = 0;\n    for (i = mb; i > 0; --i) {\n        var pv = ri[i];\n        fill(nb, i, pv, ri[i - 1] = pv + rc[i] * (1 << (mb - i)));\n    }\n    if (ri[0] != ts)\n        err(0);\n    for (i = 0; i < wc; ++i) {\n        var bits = hw[i];\n        if (bits) {\n            var code = ri[bits];\n            fill(syms, i, code, ri[bits] = code + (1 << (mb - bits)));\n        }\n    }\n    return [bt, {\n            n: nb,\n            b: mb,\n            s: syms\n        }];\n};\n// Tables generated using this:\n// https://gist.github.com/101arrowz/a979452d4355992cbf8f257cbffc9edd\n// default literal length table\nvar dllt = /*#__PURE__*/ rfse(/*#__PURE__*/ new u8([\n    81, 16, 99, 140, 49, 198, 24, 99, 12, 33, 196, 24, 99, 102, 102, 134, 70, 146, 4\n]), 0, 6)[1];\n// default match length table\nvar dmlt = /*#__PURE__*/ rfse(/*#__PURE__*/ new u8([\n    33, 20, 196, 24, 99, 140, 33, 132, 16, 66, 8, 33, 132, 16, 66, 8, 33, 68, 68, 68, 68, 68, 68, 68, 68, 36, 9\n]), 0, 6)[1];\n// default offset code table\nvar doct = /*#__PURE__ */ rfse(/*#__PURE__*/ new u8([\n    32, 132, 16, 66, 102, 70, 68, 68, 68, 68, 36, 73, 2\n]), 0, 5)[1];\n// bits to baseline\nvar b2bl = function (b, s) {\n    var len = b.length, bl = new i32(len);\n    for (var i = 0; i < len; ++i) {\n        bl[i] = s;\n        s += 1 << b[i];\n    }\n    return bl;\n};\n// literal length bits\nvar llb = /*#__PURE__ */ new u8(( /*#__PURE__ */new i32([\n    0, 0, 0, 0, 16843009, 50528770, 134678020, 202050057, 269422093\n])).buffer, 0, 36);\n// literal length baseline\nvar llbl = /*#__PURE__ */ b2bl(llb, 0);\n// match length bits\nvar mlb = /*#__PURE__ */ new u8(( /*#__PURE__ */new i32([\n    0, 0, 0, 0, 0, 0, 0, 0, 16843009, 50528770, 117769220, 185207048, 252579084, 16\n])).buffer, 0, 53);\n// match length baseline\nvar mlbl = /*#__PURE__ */ b2bl(mlb, 3);\n// decode huffman stream\nvar dhu = function (dat, out, hu) {\n    var len = dat.length, ss = out.length, lb = dat[len - 1], msk = (1 << hu.b) - 1, eb = -hu.b;\n    if (!lb)\n        err(0);\n    var st = 0, btr = hu.b, pos = (len << 3) - 8 + msb(lb) - btr, i = -1;\n    for (; pos > eb && i < ss;) {\n        var cbt = pos >> 3;\n        var val = (dat[cbt] | (dat[cbt + 1] << 8) | (dat[cbt + 2] << 16)) >> (pos & 7);\n        st = ((st << btr) | val) & msk;\n        out[++i] = hu.s[st];\n        pos -= (btr = hu.n[st]);\n    }\n    if (pos != eb || i + 1 != ss)\n        err(0);\n};\n// decode huffman stream 4x\n// TODO: use workers to parallelize\nvar dhu4 = function (dat, out, hu) {\n    var bt = 6;\n    var ss = out.length, sz1 = (ss + 3) >> 2, sz2 = sz1 << 1, sz3 = sz1 + sz2;\n    dhu(dat.subarray(bt, bt += dat[0] | (dat[1] << 8)), out.subarray(0, sz1), hu);\n    dhu(dat.subarray(bt, bt += dat[2] | (dat[3] << 8)), out.subarray(sz1, sz2), hu);\n    dhu(dat.subarray(bt, bt += dat[4] | (dat[5] << 8)), out.subarray(sz2, sz3), hu);\n    dhu(dat.subarray(bt), out.subarray(sz3), hu);\n};\n// read Zstandard block\nvar rzb = function (dat, st, out) {\n    var _a;\n    var bt = st.b;\n    //    byte 0        block type\n    var b0 = dat[bt], btype = (b0 >> 1) & 3;\n    st.l = b0 & 1;\n    var sz = (b0 >> 3) | (dat[bt + 1] << 5) | (dat[bt + 2] << 13);\n    // end byte for block\n    var ebt = (bt += 3) + sz;\n    if (btype == 1) {\n        if (bt >= dat.length)\n            return;\n        st.b = bt + 1;\n        if (out) {\n            fill(out, dat[bt], st.y, st.y += sz);\n            return out;\n        }\n        return fill(new u8(sz), dat[bt]);\n    }\n    if (ebt > dat.length)\n        return;\n    if (btype == 0) {\n        st.b = ebt;\n        if (out) {\n            out.set(dat.subarray(bt, ebt), st.y);\n            st.y += sz;\n            return out;\n        }\n        return slc(dat, bt, ebt);\n    }\n    if (btype == 2) {\n        //    byte 3        lit btype     size format\n        var b3 = dat[bt], lbt = b3 & 3, sf = (b3 >> 2) & 3;\n        // lit src size  lit cmp sz 4 streams\n        var lss = b3 >> 4, lcs = 0, s4 = 0;\n        if (lbt < 2) {\n            if (sf & 1)\n                lss |= (dat[++bt] << 4) | ((sf & 2) && (dat[++bt] << 12));\n            else\n                lss = b3 >> 3;\n        }\n        else {\n            s4 = sf;\n            if (sf < 2)\n                lss |= ((dat[++bt] & 63) << 4), lcs = (dat[bt] >> 6) | (dat[++bt] << 2);\n            else if (sf == 2)\n                lss |= (dat[++bt] << 4) | ((dat[++bt] & 3) << 12), lcs = (dat[bt] >> 2) | (dat[++bt] << 6);\n            else\n                lss |= (dat[++bt] << 4) | ((dat[++bt] & 63) << 12), lcs = (dat[bt] >> 6) | (dat[++bt] << 2) | (dat[++bt] << 10);\n        }\n        ++bt;\n        // add literals to end - can never overlap with backreferences because unused literals always appended\n        var buf = out ? out.subarray(st.y, st.y + st.m) : new u8(st.m);\n        // starting point for literals\n        var spl = buf.length - lss;\n        if (lbt == 0)\n            buf.set(dat.subarray(bt, bt += lss), spl);\n        else if (lbt == 1)\n            fill(buf, dat[bt++], spl);\n        else {\n            // huffman table\n            var hu = st.h;\n            if (lbt == 2) {\n                var hud = rhu(dat, bt);\n                // subtract description length\n                lcs += bt - (bt = hud[0]);\n                st.h = hu = hud[1];\n            }\n            else if (!hu)\n                err(0);\n            (s4 ? dhu4 : dhu)(dat.subarray(bt, bt += lcs), buf.subarray(spl), hu);\n        }\n        // num sequences\n        var ns = dat[bt++];\n        if (ns) {\n            if (ns == 255)\n                ns = (dat[bt++] | (dat[bt++] << 8)) + 0x7F00;\n            else if (ns > 127)\n                ns = ((ns - 128) << 8) | dat[bt++];\n            // symbol compression modes\n            var scm = dat[bt++];\n            if (scm & 3)\n                err(0);\n            var dts = [dmlt, doct, dllt];\n            for (var i = 2; i > -1; --i) {\n                var md = (scm >> ((i << 1) + 2)) & 3;\n                if (md == 1) {\n                    // rle buf\n                    var rbuf = new u8([0, 0, dat[bt++]]);\n                    dts[i] = {\n                        s: rbuf.subarray(2, 3),\n                        n: rbuf.subarray(0, 1),\n                        t: new u16(rbuf.buffer, 0, 1),\n                        b: 0\n                    };\n                }\n                else if (md == 2) {\n                    // accuracy log 8 for offsets, 9 for others\n                    _a = rfse(dat, bt, 9 - (i & 1)), bt = _a[0], dts[i] = _a[1];\n                }\n                else if (md == 3) {\n                    if (!st.t)\n                        err(0);\n                    dts[i] = st.t[i];\n                }\n            }\n            var _b = st.t = dts, mlt = _b[0], oct = _b[1], llt = _b[2];\n            var lb = dat[ebt - 1];\n            if (!lb)\n                err(0);\n            var spos = (ebt << 3) - 8 + msb(lb) - llt.b, cbt = spos >> 3, oubt = 0;\n            var lst = ((dat[cbt] | (dat[cbt + 1] << 8)) >> (spos & 7)) & ((1 << llt.b) - 1);\n            cbt = (spos -= oct.b) >> 3;\n            var ost = ((dat[cbt] | (dat[cbt + 1] << 8)) >> (spos & 7)) & ((1 << oct.b) - 1);\n            cbt = (spos -= mlt.b) >> 3;\n            var mst = ((dat[cbt] | (dat[cbt + 1] << 8)) >> (spos & 7)) & ((1 << mlt.b) - 1);\n            for (++ns; --ns;) {\n                var llc = llt.s[lst];\n                var lbtr = llt.n[lst];\n                var mlc = mlt.s[mst];\n                var mbtr = mlt.n[mst];\n                var ofc = oct.s[ost];\n                var obtr = oct.n[ost];\n                cbt = (spos -= ofc) >> 3;\n                var ofp = 1 << ofc;\n                var off = ofp + (((dat[cbt] | (dat[cbt + 1] << 8) | (dat[cbt + 2] << 16) | (dat[cbt + 3] << 24)) >>> (spos & 7)) & (ofp - 1));\n                cbt = (spos -= mlb[mlc]) >> 3;\n                var ml = mlbl[mlc] + (((dat[cbt] | (dat[cbt + 1] << 8) | (dat[cbt + 2] << 16)) >> (spos & 7)) & ((1 << mlb[mlc]) - 1));\n                cbt = (spos -= llb[llc]) >> 3;\n                var ll = llbl[llc] + (((dat[cbt] | (dat[cbt + 1] << 8) | (dat[cbt + 2] << 16)) >> (spos & 7)) & ((1 << llb[llc]) - 1));\n                cbt = (spos -= lbtr) >> 3;\n                lst = llt.t[lst] + (((dat[cbt] | (dat[cbt + 1] << 8)) >> (spos & 7)) & ((1 << lbtr) - 1));\n                cbt = (spos -= mbtr) >> 3;\n                mst = mlt.t[mst] + (((dat[cbt] | (dat[cbt + 1] << 8)) >> (spos & 7)) & ((1 << mbtr) - 1));\n                cbt = (spos -= obtr) >> 3;\n                ost = oct.t[ost] + (((dat[cbt] | (dat[cbt + 1] << 8)) >> (spos & 7)) & ((1 << obtr) - 1));\n                if (off > 3) {\n                    st.o[2] = st.o[1];\n                    st.o[1] = st.o[0];\n                    st.o[0] = off -= 3;\n                }\n                else {\n                    var idx = off - (ll != 0);\n                    if (idx) {\n                        off = idx == 3 ? st.o[0] - 1 : st.o[idx];\n                        if (idx > 1)\n                            st.o[2] = st.o[1];\n                        st.o[1] = st.o[0];\n                        st.o[0] = off;\n                    }\n                    else\n                        off = st.o[0];\n                }\n                for (var i = 0; i < ll; ++i) {\n                    buf[oubt + i] = buf[spl + i];\n                }\n                oubt += ll, spl += ll;\n                var stin = oubt - off;\n                if (stin < 0) {\n                    var len = -stin;\n                    var bs = st.e + stin;\n                    if (len > ml)\n                        len = ml;\n                    for (var i = 0; i < len; ++i) {\n                        buf[oubt + i] = st.w[bs + i];\n                    }\n                    oubt += len, ml -= len, stin = 0;\n                }\n                for (var i = 0; i < ml; ++i) {\n                    buf[oubt + i] = buf[stin + i];\n                }\n                oubt += ml;\n            }\n            if (oubt != spl) {\n                while (spl < buf.length) {\n                    buf[oubt++] = buf[spl++];\n                }\n            }\n            else\n                oubt = buf.length;\n            if (out)\n                st.y += oubt;\n            else\n                buf = slc(buf, 0, oubt);\n        }\n        else {\n            if (out) {\n                st.y += lss;\n                if (spl) {\n                    for (var i = 0; i < lss; ++i) {\n                        buf[i] = buf[spl + i];\n                    }\n                }\n            }\n            else if (spl)\n                buf = slc(buf, spl);\n        }\n        st.b = ebt;\n        return buf;\n    }\n    err(2);\n};\n// concat\nvar cct = function (bufs, ol) {\n    if (bufs.length == 1)\n        return bufs[0];\n    var buf = new u8(ol);\n    for (var i = 0, b = 0; i < bufs.length; ++i) {\n        var chk = bufs[i];\n        buf.set(chk, b);\n        b += chk.length;\n    }\n    return buf;\n};\n/**\n * Decompresses Zstandard data\n * @param dat The input data\n * @param buf The output buffer. If unspecified, the function will allocate\n *            exactly enough memory to fit the decompressed data. If your\n *            data has multiple frames and you know the output size, specifying\n *            it will yield better performance.\n * @returns The decompressed data\n */\nfunction decompress(dat, buf) {\n    var bt = 0, bufs = [], nb = +!buf, ol = 0;\n    for (; dat.length;) {\n        var st = rzfh(dat, nb || buf);\n        if (typeof st == 'object') {\n            if (nb) {\n                buf = null;\n                if (st.w.length == st.u) {\n                    bufs.push(buf = st.w);\n                    ol += st.u;\n                }\n            }\n            else {\n                bufs.push(buf);\n                st.e = 0;\n            }\n            for (; !st.l;) {\n                var blk = rzb(dat, st, buf);\n                if (!blk)\n                    err(5);\n                if (buf)\n                    st.e = st.y;\n                else {\n                    bufs.push(blk);\n                    ol += blk.length;\n                    cpw(st.w, 0, blk.length);\n                    st.w.set(blk, st.w.length - blk.length);\n                }\n            }\n            bt = st.b + (st.c * 4);\n        }\n        else\n            bt = st;\n        dat = dat.subarray(bt);\n    }\n    return cct(bufs, ol);\n}\nexports.decompress = decompress;\n/**\n * Decompressor for Zstandard streamed data\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zstandard decompressor\n     * @param ondata The handler for stream data\n     */\n    function Decompress(ondata) {\n        this.ondata = ondata;\n        this.c = [];\n        this.l = 0;\n        this.z = 0;\n    }\n    /**\n     * Pushes data to be decompressed\n     * @param chunk The chunk of data to push\n     * @param final Whether or not this is the last chunk in the stream\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (typeof this.s == 'number') {\n            var sub = Math.min(chunk.length, this.s);\n            chunk = chunk.subarray(sub);\n            this.s -= sub;\n        }\n        var sl = chunk.length;\n        var ncs = sl + this.l;\n        if (!this.s) {\n            if (final) {\n                if (!ncs)\n                    return;\n                // min for frame + one block\n                if (ncs < 5)\n                    err(5);\n            }\n            else if (ncs < 18) {\n                this.c.push(chunk);\n                this.l = ncs;\n                return;\n            }\n            if (this.l) {\n                this.c.push(chunk);\n                chunk = cct(this.c, ncs);\n                this.c = [];\n                this.l = 0;\n            }\n            if (typeof (this.s = rzfh(chunk)) == 'number')\n                return this.push(chunk, final);\n        }\n        if (typeof this.s != 'number') {\n            if (ncs < (this.z || 4)) {\n                if (final)\n                    err(5);\n                this.c.push(chunk);\n                this.l = ncs;\n                return;\n            }\n            if (this.l) {\n                this.c.push(chunk);\n                chunk = cct(this.c, ncs);\n                this.c = [];\n                this.l = 0;\n            }\n            if (!this.z && ncs < (this.z = (chunk[this.s.b] & 2) ? 5 : 4 + ((chunk[this.s.b] >> 3) | (chunk[this.s.b + 1] << 5) | (chunk[this.s.b + 2] << 13)))) {\n                if (final)\n                    err(5);\n                this.c.push(chunk);\n                this.l = ncs;\n                return;\n            }\n            else\n                this.z = 0;\n            for (;;) {\n                var blk = rzb(chunk, this.s);\n                if (!blk) {\n                    if (final)\n                        err(5);\n                    var adc = chunk.subarray(this.s.b);\n                    this.s.b = 0;\n                    this.c.push(adc), this.l += adc.length;\n                    return;\n                }\n                else {\n                    this.ondata(blk, false);\n                    cpw(this.s.w, 0, blk.length);\n                    this.s.w.set(blk, this.s.w.length - blk.length);\n                }\n                if (this.s.l) {\n                    var rest = chunk.subarray(this.s.b);\n                    this.s = this.s.c * 4;\n                    this.push(rest, final);\n                    return;\n                }\n            }\n        }\n    };\n    return Decompress;\n}());\nexports.Decompress = Decompress;\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nconst { Deflate, deflate, deflateRaw, gzip } = require('./lib/deflate');\n\nconst { Inflate, inflate, inflateRaw, ungzip } = require('./lib/inflate');\n\nconst constants = require('./lib/zlib/constants');\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = ungzip;\nmodule.exports.constants = constants;\n","'use strict';\n\n\nconst zlib_deflate = require('./zlib/deflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = zlib_deflate.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = zlib_deflate.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    this.result = utils.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst zlib_inflate = require('./zlib/inflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\nconst GZheader     = require('./zlib/gzheader');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = inflate;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n","// String encode/decode helpers\n'use strict';\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nmodule.exports.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nmodule.exports.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nmodule.exports.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = require('./trees');\nconst adler32 = require('./adler32');\nconst crc32   = require('./crc32');\nconst msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,\n  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN,\n  Z_DEFLATED\n} = require('./constants');\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = msg[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH) ||\n                        flush === Z_NO_FLUSH ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH && flush !== Z_FINISH &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH) && flush !== Z_NO_FLUSH &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n  strm.state.gzhead = head;\n  return Z_OK;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n};\n\n\n/* ========================================================================= */\nconst deflate = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n};\n\n\nmodule.exports.deflateInit = deflateInit;\nmodule.exports.deflateInit2 = deflateInit2;\nmodule.exports.deflateReset = deflateReset;\nmodule.exports.deflateResetKeep = deflateResetKeep;\nmodule.exports.deflateSetHeader = deflateSetHeader;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateEnd = deflateEnd;\nmodule.exports.deflateSetDictionary = deflateSetDictionary;\nmodule.exports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 16209;       /* got a data error -- remain here until reset */\nconst TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = require('./adler32');\nconst crc32         = require('./crc32');\nconst inflate_fast  = require('./inffast');\nconst inflate_table = require('./inftrees');\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH, Z_BLOCK, Z_TREES,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,\n  Z_DEFLATED\n} = require('./constants');\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n};\n\n\nmodule.exports.inflateReset = inflateReset;\nmodule.exports.inflateReset2 = inflateReset2;\nmodule.exports.inflateResetKeep = inflateResetKeep;\nmodule.exports.inflateInit = inflateInit;\nmodule.exports.inflateInit2 = inflateInit2;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateEnd = inflateEnd;\nmodule.exports.inflateGetHeader = inflateGetHeader;\nmodule.exports.inflateSetDictionary = inflateSetDictionary;\nmodule.exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nmodule.exports = inflate_table;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nmodule.exports._tr_init  = _tr_init;\nmodule.exports._tr_stored_block = _tr_stored_block;\nmodule.exports._tr_flush_block  = _tr_flush_block;\nmodule.exports._tr_tally = _tr_tally;\nmodule.exports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","/**\n * Name of the app/game to be displayed basically everywhere.\n */\nexport const APP_NAME = \"Friendly Fire\";\n\n/**\n * Name of the cache to use to store stuff for offline use.\n */\nexport const CACHE_NAME = \"v1\";\n\n/**\n * Width of the game canvas in pixels.\n */\nexport const GAME_CANVAS_WIDTH = 480;\n\n/**\n * Height of the game canvas in pixels.\n */\nexport const GAME_CANVAS_HEIGHT = 270;\n\n/**\n * Amount of pixels per meter on the world map. Used to convert from pixel coordinates to meters (for size and\n * physics calculations).\n */\nexport const PIXEL_PER_METER = 18;\n\n/**\n * Amount of meters that are represented by a single pixel on the screen.\n */\nexport const METER_PER_PIXEL = 1 / PIXEL_PER_METER;\n\nexport const SOUND_INTENSITY_MULTIPLIER = 50;\n\n/** Gravity in m/s² */\nexport const GRAVITY = 35;\n\n/** Gravity for short jumps (while flying upwards, after player releases jump key) in m/s² */\nexport const SHORT_JUMP_GRAVITY = 70;\n\n/** Drowning velocity in meters per second. */\nexport const DROWNING_VELOCITY = -1;\n\n/** Maximum movement speed of the player in m/s */\nexport const MAX_PLAYER_SPEED = 5;\n\n/** Maximum movement speed of the player in m/s */\nexport const MAX_PLAYER_RUNNING_SPEED = 7;\n\n/** Player movement acceleration on ground in m/s² */\nexport const PLAYER_ACCELERATION = 30;\n\n/** Player movement acceleration in air in m/s² */\nexport const PLAYER_ACCELERATION_AIR = 12;\n\n/** Player jump height in meters. */\nexport const PLAYER_JUMP_HEIGHT = 3.75;\n\n/** Player jump height in meters. */\nexport const PLAYER_BOUNCE_HEIGHT = 10;\n\n/** Terminal velocity in m/s */\nexport const TERMINAL_VELOCITY = -30;\n\n/** Threshold in seconds for allowing a jump after entering falling state */\nexport const PLAYER_JUMP_TIMING_THRESHOLD = 0.1;\n\n/** Color array containing all double jump particle colors */\nexport const DOUBLE_JUMP_COLORS = [ \"#ffffff\", \"#cccccc\", \"#aaaaaa\" ];\n\n/** Player dimensions */\nexport const PLAYER_HEIGHT = 1.60 * PIXEL_PER_METER;\nexport const PLAYER_WIDTH = 0.5 * PIXEL_PER_METER;\nexport const PLAYER_CARRY_HEIGHT = 4;\n\n/** Fonts */\nexport const DIALOG_FONT = \"fonts/pixcelsior.font.json\";\n\n/** Total duration in seconds until dog petting ending occurs */\nexport const PETTING_ENDING_CUTSCENE_DURATION = 135;\nexport const PETTING_ENDING_FADE_DURATION = 5;\n\n/** Total duration in seconds of ending d cutscene */\nexport const WINDOW_ENDING_CUTSCENE_DURATION = 50;\nexport const WINDOW_ENDING_FADE_DURATION = 3;\n\n/**\n * Steam app ID under which the game has been registered.\n * Usually only used, if launched from within Steam as standalone app.\n */\nexport const STEAM_APP_ID = 1311660;\n","import { type Aseprite } from \"./Aseprite\";\nimport { type Entity } from \"./Entity\";\nimport { RenderingLayer } from \"./Renderer\";\n\nexport type AnimationConfig = {\n    loop?: boolean;\n    callback?: Function;\n};\n\nexport type CurrentAnimationState = {\n    tag: string;\n    start: number;\n    finished: boolean;\n    duration: number;\n    config?: AnimationConfig;\n    direction?: number;\n};\n\n/**\n * The Animator class can be used to orchestrate and draw aseprite animations of an entity\n */\nexport class Animator {\n    private readonly entity: Entity;\n    private sprite?: Aseprite;\n\n    private readonly currentAnimation: CurrentAnimationState = {\n        tag: \"\",\n        start: 0,\n        duration: 0,\n        finished: false,\n    };\n\n    public constructor(entity: Entity) {\n        this.entity = entity;\n    }\n\n    public assignSprite(sprite: Aseprite): void {\n        this.sprite = sprite;\n    }\n\n    /**\n     * Updates the animation if all conditions are met regarding the currently playing animation.\n     *\n     * @param tag    - The animation tag to draw.\n     * @param config - Optional animation configuration.\n     */\n    private updateAnimation(tag: string, config?: AnimationConfig): void {\n        // Early out if animation tag is already set as current animation\n        if (!this.sprite) return;\n\n        // Animation Update Logic\n        // If current animation has a fixed duration, check if it was reached.\n        // If so, the animation is set to finished.\n        if (!this.currentAnimation.finished && this.currentAnimation.duration > 0) {\n            const animationTime = (this.entity.scene.gameTime * 1000) - this.currentAnimation.start;\n\n            if (animationTime + (this.entity.scene.dt * 1000) >= this.currentAnimation.duration) {\n                this.currentAnimation.finished = true;\n\n                if (this.currentAnimation.config?.callback) {\n                    this.currentAnimation.config.callback();\n                }\n            }\n        }\n\n        // Leave function if the provided animation tag is the one that is already playing since\n        // there is no need to update the current animation settings.\n        if (this.currentAnimation.tag === tag) return;\n\n        // Update Animation with new payload\n        this.currentAnimation.tag = tag;\n        this.currentAnimation.start = this.entity.scene.gameTime * 1000;\n        this.currentAnimation.config = config;\n        this.currentAnimation.finished = false;\n        this.currentAnimation.duration = this.sprite.getAnimationDurationByTag(tag) || 0;\n    }\n\n    /**\n     * Method to call from draw method of the entity to draw a specific animation by tag.\n     *\n     * @param tag    - The animation tag to draw.\n     * @param direction Animation direction\n     * @param config - Optional animation configuration.\n     */\n    public play(tag: string, direction: number, config?: AnimationConfig): void {\n        this.currentAnimation.direction = direction;\n        this.updateAnimation(tag, config);\n\n        let animationTime = (this.entity.scene.gameTime * 1000) - this.currentAnimation.start;\n\n        /**\n         * Forcefully stop the loop at the last frame, if looping is disabled.\n         * We subtract an arbitrary small number the animation duration, since the exact animation\n         * duration time will play frame 1 of the animation.\n         */\n        if (config?.loop === false) {\n            const lastFrameTime = this.currentAnimation.duration - 1;\n            animationTime = Math.min(lastFrameTime, animationTime);\n        }\n\n        /**\n         * Zero Animation timer fix.\n         * Sometimes (?), an animation time of zero does not play the first but the last frame, thus\n         * we just skip 0.\n         */\n        if (animationTime === 0) animationTime += 1;\n\n        this.draw(animationTime);\n    }\n\n    private draw(animationTime: number): void {\n        if (this.sprite) {\n            this.entity.scene.renderer.addAseprite(\n                this.sprite, this.currentAnimation.tag, this.entity.x, this.entity.y,\n                RenderingLayer.ENTITIES, this.currentAnimation.direction, animationTime\n            );\n        }\n    }\n}\n","import { Direction, type Frame, type FrameTag, type Layer, type SpriteSheet } from \"@kayahr/aseprite\";\n\nimport { loadImage } from \"./graphics\";\nimport { now } from \"./util\";\n\n/**\n * Sprite implementation which uses the Aseprite JSON format. Use the static asynchronous {@linkcode load()} method to load the\n * sprite and then use {@linkcode draw()} or {@linkcode drawTag()} to draw the sprite animation.\n */\nexport class Aseprite {\n    private readonly frames: Frame[];\n    private readonly frameTags: Record<string, FrameTag> = {};\n    private readonly frameTagDurations: Record<string, number> = {};\n    private readonly duration: number;\n    private readonly fallbackTag = \"idle\";\n\n    private constructor(private readonly source: string, private readonly json: SpriteSheet, private readonly image: HTMLImageElement) {\n        this.frames = Object.values(json.frames);\n        this.duration = this.frames.reduce((duration, frame) => duration + frame.duration, 0);\n\n        for (const frameTag of json.meta.frameTags ?? []) {\n            let duration = 0;\n\n            for (let i = frameTag.from; i <= frameTag.to; i++) {\n                duration += this.frames[i].duration;\n            }\n\n            this.frameTags[frameTag.name] = frameTag;\n            this.frameTagDurations[frameTag.name] = duration;\n        }\n    }\n\n    /**\n     * Loads the sprite from the given source.\n     *\n     * @param source - The URL pointing to the JSON file of the sprite.\n     * @return The loaded sprite.\n     */\n    public static async load(source: string): Promise<Aseprite> {\n        const json = await (await fetch(source)).json() as SpriteSheet;\n        const baseURL = new URL(source, location.href);\n        const image = await loadImage(new URL(json.meta.image, baseURL));\n\n        return new Aseprite(source, json, image);\n    }\n\n    /**\n     * Returns the sprite width in pixels.\n     *\n     * @return The sprite width in pixels.\n     */\n    public get width(): number {\n        return this.frames[0].sourceSize.w;\n    }\n\n    /**\n     * Returns the sprite height in pixels.\n     *\n     * @return The sprite height in pixels.\n     */\n    public get height(): number {\n        return this.frames[0].sourceSize.h;\n    }\n\n    private calculateFrameIndex(\n        time: number = now(), duration = this.duration, from = 0, to = this.frames.length - 1,\n        direction = Direction.Forward\n    ): number {\n        let delta = direction === Direction.Reverse ? -1 : 1;\n\n        if (direction === Direction.PingPong) {\n            duration = duration * 2 - this.frames[from].duration - this.frames[to].duration;\n        }\n\n        let frameTime = time % duration;\n        let frameIndex = direction === Direction.Reverse ? to : from;\n\n        while (\n            (\n                (delta > 0 && frameIndex < to)\n                || (delta < 0 && frameIndex > from)\n            ) && frameTime >= this.frames[frameIndex].duration\n        ) {\n            frameTime -= this.frames[frameIndex].duration;\n            frameIndex += delta;\n\n            if (frameIndex === to) {\n                delta = -delta;\n            }\n        }\n\n        return frameIndex;\n    }\n\n    /**\n     * Returns the frame index to be drawn at the given time.\n     *\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     * @return The frame index to draw.\n     */\n    public getFrameIndex(time: number = now()): number {\n        return this.calculateFrameIndex(time);\n    }\n\n    /**\n     * Draws a single sprite animation frame.\n     *\n     * @param ctx   - The canvas context to draw to.\n     * @param index - The frame index to draw.\n     * @param x     - The X position in pixels to draw to the sprite at.\n     * @param y     - The Y position in pixels to draw to the sprite at.\n     */\n    public drawFrame(ctx: CanvasRenderingContext2D, index: number, x: number, y: number): void {\n        const frame = this.frames[index];\n\n        if (frame == null) {\n            throw new Error(\"Frame index not found: \" + index);\n        }\n\n        ctx.drawImage(\n            this.image,\n            frame.frame.x, frame.frame.y,\n            frame.frame.w, frame.frame.h,\n            Math.round(x) + frame.spriteSourceSize.x, Math.round(y) + frame.spriteSourceSize.y,\n            frame.spriteSourceSize.w, frame.spriteSourceSize.h\n        );\n    }\n\n    /**\n     * Returns the frame index of a tagged sprite animation at the given time.\n     *\n     * @param tag  - The animation tag to draw.\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     * @return The frame index to draw.\n     */\n    public getTaggedFrameIndex(tag: string, time: number = now()): number {\n        const frameTag = this.frameTags[tag] ?? this.frameTags[this.fallbackTag];\n        if (frameTag == null) {\n            throw new Error(`Frame tag not found in sprite '${this.source}' and fallback is not available as well. `\n                + `Tag: '${tag}' | FallbackTag: '${this.fallbackTag}'`);\n        }\n        return this.calculateFrameIndex(\n            time, this.frameTagDurations[tag], frameTag.from, frameTag.to, frameTag.direction\n        );\n    }\n\n    /**\n     * Return the full animation duration for a specific animation tag.\n     *\n     * @param tag - The animation tag to get the duration from.\n     * @return The animation duration.\n     */\n    public getAnimationDurationByTag(tag: string): number {\n        const duration = this.frameTagDurations[tag] || this.frameTagDurations[this.fallbackTag];\n        if (duration == null) {\n            throw new Error(`Frame tag not found and fallback is not available as well. Tag: '${tag}' | FallbackTag: '${this.fallbackTag}'`);\n        }\n\n        return duration;\n    }\n\n    /**\n     * Draws a tagged sprite animation.\n     *\n     * @param ctx  - The canvas context to draw to.\n     * @param tag  - The animation tag to draw.\n     * @param x    - The X position in pixels to draw to the sprite at.\n     * @param y    - The Y position in pixels to draw to the sprite at.\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     */\n    public drawTag(ctx: CanvasRenderingContext2D, tag: string, x: number, y: number, time: number = now()): void {\n        this.drawFrame(ctx, this.getTaggedFrameIndex(tag, time), x, y);\n    }\n\n    /**\n     * Draws the untagged sprite animation (Simply all defined frames).\n     *\n     * @param ctx  - The canvas context to draw to.\n     * @param x    - The X position in pixels to draw to the sprite at.\n     * @param y    - The Y position in pixels to draw to the sprite at.\n     * @param time - Optional time index of the animation. Current system time is used if not specified.\n     */\n    public draw(ctx: CanvasRenderingContext2D, x: number, y: number, time: number = now()): void {\n        const frameIndex = this.calculateFrameIndex(time);\n        this.drawFrame(ctx, frameIndex, x, y);\n    }\n\n    /**\n     * Returns the layer with the given name.\n     *\n     * @param name - The layer name.\n     * @return The found layer. Null if none.\n     */\n    public getLayer(name: string): Layer | null {\n        return this.json.meta.layers?.find(layer => layer.name === name) ?? null;\n    }\n}\n","import { type AppInfoJSON } from \"./AppInfo\";\nimport { Aseprite } from \"./Aseprite\";\nimport { Sound } from \"./audio/Sound\";\nimport { SoundChannel } from \"./audio/SoundChannel\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { loadImage } from \"./graphics\";\n\nconst assets = new Map<string, unknown>();\n\nexport interface AssetOptions<A> {\n    map?: (asset: A) => unknown;\n}\n\nclass AssetRequest<\n        S extends string | string[] = string | string[],\n        A extends (S extends string ? unknown : unknown[]) = (S extends string ? unknown : unknown[])> {\n    public constructor(\n        private readonly target: Record<string | symbol, unknown>,\n        private readonly propertyKey: string | symbol,\n        public readonly src: S,\n        private readonly options: AssetOptions<A>\n    ) {}\n\n    public resolve(asset: A): void {\n        this.target[this.propertyKey] = this.options.map ? this.options.map(asset) : asset;\n    }\n}\n\nconst assetRequests: AssetRequest[] = [];\n\nexport function asset<A>(src: string | string[], options: AssetOptions<A> = {}): PropertyDecorator {\n    return (target: object, propertyKey: string | symbol): void => {\n        assetRequests.push(new AssetRequest(target as Record<string, unknown>, propertyKey, src, options) as AssetRequest);\n    };\n}\n\nexport class Assets {\n    private async loadAsset(src: string): Promise<unknown> {\n        let asset = assets.get(src);\n\n        if (asset == null) {\n            if (src.endsWith(\".aseprite.json\")) {\n                asset = await Aseprite.load(`assets/${src}`);\n            } else if (src.endsWith(\".font.json\")) {\n                asset = await BitmapFont.load(`assets/${src}`);\n            } else if (src.endsWith(\".png\")) {\n                asset = await loadImage(src);\n            } else if (src.endsWith(\".mp3\") || src.endsWith(\".ogg\")) {\n                const soundChannel = src.startsWith(\"music\") ? SoundChannel.MUSIC : SoundChannel.SFX;\n                asset = await Sound.load(`assets/${src}`, soundChannel);\n            } else if (src === \"appinfo.json\") {\n                asset = await (await fetch(\"appinfo.json\")).json() as AppInfoJSON;\n            } else {\n                throw new Error(`Unknown asset format: ${src}`);\n            }\n\n            assets.set(src, asset);\n        }\n\n        return asset;\n    }\n\n    public async load(onProgress?: (total: number, loaded: number) => void): Promise<void> {\n        const total = assetRequests.length;\n        let loaded = 0;\n\n        if (onProgress) {\n            onProgress(total, loaded);\n        }\n\n        let request;\n\n        while ((request = assetRequests.pop()) != null) {\n            if (typeof request.src === \"string\") {\n                request.resolve(await this.loadAsset(request.src));\n            } else {\n                request.resolve(await Promise.all(request.src.map(src => this.loadAsset(src))));\n            }\n\n            loaded++;\n\n            if (onProgress) {\n                onProgress(total, loaded);\n            }\n        }\n    }\n}\n","import { DisplayManager, RenderMode } from \"./DisplayManager\";\nimport { getRenderingContext, loadImage } from \"./graphics\";\n\nconst CHAR_SPACING = 1;\n\nexport interface FontJSON {\n    image: string;\n    characterHeight: number;\n    characterMapping: {\n        char: string;\n        width: number;\n        compactablePrecursors: string[];\n    }[];\n    margin: number;\n    colors: Record<string, string>;\n}\n\nexport class BitmapFont {\n    private readonly sourceImage: HTMLImageElement;\n    private readonly canvas: HTMLCanvasElement;\n    private readonly colorMap: Record<string, number>;\n    private readonly charMap: string;\n    private readonly charWidths: number[];\n    private readonly compactablePrecursors: string[][];\n    private readonly charStartPoints: number[];\n    private readonly charCount: number;\n    private readonly charReverseMap: Record<string, number>;\n    public charHeight!: number;\n\n    private constructor(\n        sourceImage: HTMLImageElement, colors: Record<string, string>, charMap: string,\n        charHeight: number, charWidths: number[], compactablePrecursors: string[][], charMargin = 1\n    ) {\n        this.sourceImage = sourceImage;\n        this.canvas = document.createElement(\"canvas\");\n        this.charMap = charMap;\n        this.charHeight = charHeight;\n        this.colorMap = this.prepareColors(colors);\n        this.charWidths = charWidths;\n        this.compactablePrecursors = compactablePrecursors;\n        this.charStartPoints = [];\n        this.charCount = charMap.length;\n        this.charReverseMap = {};\n\n        for (let i = 0; i < this.charCount; i++) {\n            this.charStartPoints[i] = (i === 0) ? 0 : this.charStartPoints[i - 1] + this.charWidths[i - 1] + charMargin;\n            const char = this.charMap[i];\n            this.charReverseMap[char] = i;\n        }\n    }\n\n    /**\n     * Loads the sprite from the given source.\n     *\n     * @param source - The URL pointing to the JSON file of the sprite.\n     * @return The loaded sprite.\n     */\n    public static async load(source: string): Promise<BitmapFont> {\n        const json = await (await fetch(source)).json() as FontJSON;\n        const baseURL = new URL(source, location.href);\n        const image = await loadImage(new URL(json.image, baseURL));\n        const characters = json.characterMapping.map(charDef => charDef.char).join(\"\");\n        const widths = json.characterMapping.map(charDef => charDef.width);\n        const compactablePrecursors = json.characterMapping.map(charDef => charDef.compactablePrecursors ?? []);\n\n        return new BitmapFont(image, json.colors, characters, json.characterHeight, widths, compactablePrecursors, json.margin);\n    }\n\n    private prepareColors(colorMap: { [x: string]: string; }): { [x: string]: number } {\n        const result: { [x: string]: number} = {};\n        const colors = Object.keys(colorMap);\n        const count = colors.length;\n        const w = this.canvas.width = this.sourceImage.width;\n        const h = this.charHeight + 1;\n        this.canvas.height = h * count;\n        const ctx = getRenderingContext(this.canvas, \"2d\");\n\n        // Fill with font\n        for (let i = 0; i < count; i++) {\n            result[colors[i]] = i;\n            ctx.drawImage(this.sourceImage, 0, h * i);\n        }\n\n        // Colorize\n        ctx.globalCompositeOperation = \"source-in\";\n\n        for (let i = 0; i < count; i++) {\n            ctx.fillStyle = colorMap[colors[i]];\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(0, h * i, w, h);\n            ctx.clip();\n            ctx.fillRect(0, 0, w, h * count);\n            ctx.restore();\n        }\n\n        ctx.globalCompositeOperation = \"source-over\";\n\n        return result;\n    }\n\n    private getCharIndex(char: string): number {\n        let charIndex = this.charReverseMap[char];\n\n        if (charIndex == null) {\n            // To signalize missing char, use last char, which is a not-def glyph\n            charIndex = this.charCount - 1;\n        }\n\n        return charIndex;\n    }\n\n    private drawCharacter(ctx: CanvasRenderingContext2D, char: number, color: string): void {\n        const colorIndex = this.colorMap[color];\n        const charIndex = (typeof char === \"number\") ? char : this.getCharIndex(char);\n        const charX = this.charStartPoints[charIndex], charY = colorIndex * (this.charHeight + 1);\n\n        ctx.drawImage(\n            this.canvas, charX, charY, this.charWidths[charIndex], this.charHeight,\n            0, 0, this.charWidths[charIndex], this.charHeight\n        );\n    }\n\n    public drawText(\n        ctx: CanvasRenderingContext2D, text: string, x: number, y: number, color: string, align = 0,\n        alpha = 1\n    ): void {\n        // Do nothing when no text or alpha is 0\n        if (text === \"\" || alpha === 0) {\n            return;\n        }\n\n        ctx.save();\n        ctx.translate(x, y);\n\n        if (DisplayManager.getInstance().getRenderMode() !== RenderMode.NATIVE) {\n            // Ugly hack to correct text position to exact pixel boundary because Chrome renders broken character images\n            // when exactly between two pixels (Firefox doesn't have this problem).\n            if (ctx.getTransform != null) {\n                const transform = ctx.getTransform();\n                ctx.translate(\n                    Math.round(transform.e) - transform.e,\n                    Math.round(transform.f) - transform.f\n                );\n            }\n        }\n\n        ctx.globalAlpha *= alpha;\n\n        const { width } = this.measureText(text);\n        ctx.translate(-align * width, 0);\n\n        let precursorChar = null;\n\n        for (const currentChar of text) {\n            const index = this.getCharIndex(currentChar);\n            const spaceReduction = precursorChar != null && this.compactablePrecursors[index].includes(precursorChar) ? 1 : 0;\n            ctx.translate(-spaceReduction, 0);\n            this.drawCharacter(ctx, index, color);\n            ctx.translate(this.charWidths[index] + CHAR_SPACING, 0);\n            precursorChar = currentChar;\n        }\n\n        ctx.restore();\n    }\n\n    public measureText(text: string): { width: number, height: number } {\n        let width = 0;\n        let precursorChar = null;\n        for (const currentChar of text) {\n            const index = this.getCharIndex(currentChar);\n            const spaceReduction = precursorChar != null && this.compactablePrecursors[index].includes(precursorChar) ? 1 : 0;\n            width += this.charWidths[index] - spaceReduction + CHAR_SPACING;\n            precursorChar = currentChar;\n        }\n\n        if (text.length > 0) {\n            width -= CHAR_SPACING;\n        }\n\n        return { width, height: this.charHeight };\n    }\n\n    public drawTextWithOutline(\n        ctx: CanvasRenderingContext2D, text: string, xPos: number, yPos: number, textColor: string,\n        outlineColor: string, align = 0\n    ): void {\n        for (let yOffset = yPos - 1; yOffset <= yPos + 1; yOffset++) {\n            for (let xOffset = xPos - 1; xOffset <= xPos + 1; xOffset++) {\n                if (xOffset !== xPos || yOffset !== yPos) {\n                    this.drawText(ctx, text, xOffset, yOffset, outlineColor, align);\n                }\n            }\n        }\n\n        this.drawText(ctx, text, xPos, yPos, textColor, align);\n    }\n}\n","import { RenderMode } from \"./DisplayManager\";\nimport { type Fire } from \"./entities/Fire\";\nimport { type Bounds } from \"./Entity\";\nimport { type Vector2Like } from \"./graphics/Vector2\";\nimport { type ValueCurve, valueCurves } from \"./Particles\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { type GameScene } from \"./scenes/GameScene\";\nimport { clamp, isDev, rnd, shiftValue } from \"./util\";\n\nexport interface CamFocus {\n    x: number;\n    y: number;\n    duration: number;\n    startTime: number;\n    endTime: number;\n    zoom: number;\n    rotation: number;\n    progress: number;\n    dead: boolean;\n    force: number;\n    curve: ValueCurve;\n    resolve?: Function;\n}\n\ninterface Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\ntype OverBoundData = {\n    left: boolean;\n    right: boolean;\n    top: boolean;\n    bottom: boolean;\n};\n\nexport class Camera {\n    public x = 0;\n    public y = 0;\n    public zoom = 1;\n    public rotation = 0;\n    private focuses: CamFocus[] = [];\n    private time = 0;\n    private readonly interpolationTime!: number;\n    private zoomingOut = false;\n    private currentBarTarget = 0;\n    private currentBarHeight = 0;\n    private bounds?: Bounds;\n\n    public constructor(\n        protected scene: GameScene, private readonly target: Vector2Like, interpolationTime = 0.5,\n        private readonly barHeight = 0.1\n    ) {\n        if (interpolationTime > 1) {\n            throw new Error(\"Camera interpolation time may not exceed 1\");\n        }\n\n        this.interpolationTime = interpolationTime / 2;\n\n        if (isDev()) {\n            console.log(\"Dev mode, press “Tab” to zoom out & click somewhere to teleport there.\");\n            document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n        }\n\n        this.currentBarTarget = 0;\n        this.currentBarHeight = 0;\n        this.x = target.x;\n        this.y = target.y;\n    }\n\n    public setBounds(bounds: Bounds | undefined): void {\n        this.bounds = bounds;\n    }\n\n    public getBounds(): Bounds | undefined {\n        return this.bounds;\n    }\n\n    private handleKeyDown(e: KeyboardEvent): void {\n        if (e.key !== \"Tab\") {\n            return;\n        }\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.repeat) {\n            return;\n        }\n        const displayManager = this.scene.game.displayManager;\n        const canvas = this.scene.game.canvas;\n        const oldRenderMode = displayManager.getRenderMode();\n        const teleport = (e: MouseEvent): void => {\n            const rect = canvas.getBoundingClientRect();\n            const cx = e.clientX - rect.x, cy = e.clientY - rect.y;\n            const px = cx / rect.width, py = cy / rect.height;\n            const worldRect = this.getVisibleRect();\n            const tx = worldRect.x + px * worldRect.width, ty = worldRect.y + (1 - py) * worldRect.height;\n\n            // Teleport player\n            this.scene.player.x = tx;\n            this.scene.player.y = ty;\n            this.setBounds(this.scene.player.getCurrentMapBounds());\n\n            this.scene.player.setVelocity(0, 0);\n            reset();\n        };\n        const reset = (): void => {\n            this.zoomingOut = false;\n            displayManager.setRenderMode(oldRenderMode);\n            document.removeEventListener(\"keyup\", handleKeyUp);\n            canvas.removeEventListener(\"click\", teleport);\n            document.removeEventListener(\"keyup\", handleKeyUp);\n        };\n        const handleKeyUp = (e: KeyboardEvent): void => {\n            if (e.key === \"Tab\") {\n                reset();\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        };\n        this.zoomingOut = true;\n        displayManager.setRenderMode(RenderMode.NATIVE);\n        document.addEventListener(\"keyup\", handleKeyUp);\n        canvas.addEventListener(\"click\", teleport);\n    }\n\n    public getVisibleRect(x = this.x, y = this.y): Rectangle {\n        const game = this.scene.game;\n        const cw = game.width / this.zoom;\n        const ch = game.height / this.zoom;\n        const offx = cw / 2;\n        const offy = ch / 2;\n\n        return {\n            x: x - offx,\n            y: y - offy,\n            width: cw,\n            height: ch\n        };\n    }\n\n    public isPointVisible(x: number, y: number, radius = 0): boolean {\n        const visibleRect = this.getVisibleRect();\n\n        return (\n            x >= visibleRect.x - radius\n            && y >= visibleRect.y - radius\n            && x <= visibleRect.x + visibleRect.width + radius\n            && y <= visibleRect.y + visibleRect.height + radius\n        );\n    }\n\n    public setCinematicBar(target: number): void {\n        this.currentBarTarget = target;\n    }\n\n    private getBaseCameraTarget(): { x: number, y: number } {\n        // Base position always on target (player)\n        let xTarget = this.target.x;\n        let yTarget = this.target.y + 30;\n\n        if (this.bounds) {\n            const targetVisibleRect = this.getVisibleRect(xTarget, yTarget);\n\n            const overBounds: OverBoundData = {\n                left: (targetVisibleRect.x < this.bounds.x),\n                right: (targetVisibleRect.x + targetVisibleRect.width) > (this.bounds.x + this.bounds.width),\n                top: (targetVisibleRect.y + targetVisibleRect.height) > this.bounds.y,\n                bottom: targetVisibleRect.y < (this.bounds.y - this.bounds.height)\n            };\n\n            // Bound clip left / right\n            if (targetVisibleRect.width >= this.bounds.width) {\n                const visibleCenterX = targetVisibleRect.x + targetVisibleRect.width / 2;\n                const boundCenterX = this.bounds.x + this.bounds.width / 2;\n                const diff = boundCenterX - visibleCenterX;\n                xTarget += diff;\n            } else if (overBounds.left) {\n                const diff = this.bounds.x - targetVisibleRect.x;\n                xTarget += diff;\n            } else if (overBounds.right) {\n                const diff = (this.bounds.x + this.bounds.width) - (targetVisibleRect.x + targetVisibleRect.width);\n                xTarget += diff;\n            }\n\n            // Bound clip top / bottom\n            if (targetVisibleRect.height >= this.bounds.height) {\n                const visibleCenterY = (targetVisibleRect.y + targetVisibleRect.height) - targetVisibleRect.height / 2;\n                const boundCenterY = this.bounds.y - this.bounds.height / 2;\n                const diff = boundCenterY - visibleCenterY;\n                yTarget += diff;\n            } else if (overBounds.top) {\n                const diff = this.bounds.y - (targetVisibleRect.y + targetVisibleRect.height);\n                yTarget += diff;\n            } else if (overBounds.bottom) {\n                const diff = (this.bounds.y - this.bounds.height) - targetVisibleRect.y;\n                yTarget += diff;\n            }\n        }\n\n        return {\n            x: xTarget,\n            y: yTarget\n        };\n    }\n\n    public update(dt: number, time: number): void {\n        this.time = time;\n\n        // Base position always on target (player)\n        const baseCamTarget = this.getBaseCameraTarget();\n        this.x = baseCamTarget.x;\n        this.y = baseCamTarget.y;\n\n        // Cam Shake during apocalypse\n        if (this.scene.fire.isAngry() || this.scene.apocalypse) {\n            this.applyApocalypticShake(this.scene.fire);\n        }\n\n        this.zoom = 1;\n        this.rotation = 0;\n        if (this.zoomingOut) {\n            const game = this.scene.game;\n            const cw = game.width;\n            const ch = game.height;\n            const world = this.scene.world;\n            const w = world.getWidth();\n            const h = world.getHeight();\n            this.x = w / 2;\n            this.y = h / 2;\n            this.zoom = Math.min(cw / w, ch / h);\n        }\n\n        // On top of that, apply cam focus(es)\n        for (const focus of this.focuses) {\n            this.updateAndApplyFocus(focus);\n        }\n\n        // Drop any focus that is done\n        this.focuses = this.focuses.filter(f => !f.dead);\n        // Update bar target towards goal\n        this.currentBarHeight = shiftValue(this.currentBarHeight, this.currentBarTarget, dt * 1.5);\n        // Reset bar to vanish automatically if not continuously set to 1\n        this.currentBarTarget = 0;\n    }\n\n    private applyApocalypticShake(shakeSource: Fire): void {\n        const dx = this.x - shakeSource.x, dy = this.y - shakeSource.y;\n        const dis = Math.sqrt(dx * dx + dy * dy);\n        const maxDis = 200;\n\n        if (dis < maxDis) {\n            const intensity = (shakeSource.intensity - 5) / 15;\n\n            if (intensity > 0) {\n                const shake = 5 * intensity * (1 - dis / maxDis) * (this.scene.player.playerConversation ? 0.5 : 1);\n                this.x += rnd(-1, 1) * shake;\n                this.y += rnd(-1, 1) * shake;\n            }\n        }\n    }\n\n    /**\n     * Returns true if cam target (player) currently has full attention, or is showing something else for the moment.\n     */\n    public isOnTarget(): boolean {\n        return this.focuses.length === 0;\n    }\n\n    /**\n     * Returns strength of camera focus on something other than the player. E.g. when camera focuses on some place to\n     * show the player, the focus force will be between 0 and 1 during interpolation and exactly 1 while fully focusing\n     * on that spot. This e.g. can be used for cinematic bars at top and bottom, scaling their height.\n     */\n    public getFocusForce(): number {\n        return this.focuses.reduce((a, b) => Math.max(a, b.force), 0);\n    }\n\n    public applyTransform(ctx: CanvasRenderingContext2D): void {\n        ctx.scale(this.zoom, this.zoom);\n        ctx.rotate(this.rotation);\n        ctx.translate(-this.x, this.y);\n        if (this.zoomingOut) {\n            ctx.imageSmoothingEnabled = true;\n            ctx.imageSmoothingQuality = \"high\";\n        }\n    }\n\n    public unapplyTransform(ctx: CanvasRenderingContext2D): void {\n        ctx.translate(this.x, -this.y);\n        ctx.rotate(-this.rotation);\n        ctx.scale(1 / this.zoom, 1 / this.zoom);\n    }\n\n    public focusOn(\n        duration: number, x: number, y: number, zoom = 1, rotation = 0,\n        curve = valueCurves.cos(this.interpolationTime)\n    ): Promise<void> {\n        const focus: CamFocus = {\n            x,\n            y,\n            duration,\n            zoom,\n            rotation,\n            startTime: this.time,\n            endTime: this.time + duration,\n            progress: 0,\n            dead: false,\n            force: 0,\n            curve\n        };\n\n        this.focuses.push(focus);\n\n        return new Promise((resolve, reject) => {\n            focus.resolve = resolve;\n            this.updateAndApplyFocus(focus);\n        });\n    }\n\n    public updateAndApplyFocus(focus: CamFocus): void {\n        focus.progress = clamp((this.time - focus.startTime) / focus.duration, 0, 1);\n        focus.dead = (focus.progress >= 1);\n\n        if (!focus.dead) {\n            // Fade in and out of focus using force lerping from 0 to 1 and back to 0 over time\n            const force = focus.force = focus.curve.get(focus.progress);\n\n            // Apply to camera state\n            const f1 = 1 - force;\n            this.x = f1 * this.x + force * focus.x;\n            this.y = f1 * this.y + force * focus.y;\n            const originalSize = 1 / this.zoom, targetSize = 1 / focus.zoom;\n            const currentSize = f1 * originalSize + force * targetSize;\n\n            this.zoom = 1 / currentSize;\n            this.rotation = f1 * this.rotation + force * focus.rotation;\n        } else {\n            if (focus.resolve) {\n                focus.resolve();\n                focus.resolve = undefined;\n            }\n        }\n    }\n\n    public addCinematicBarsToRenderer(force = this.getFocusForce()): void {\n        force = Math.max(force, this.getFocusForce(), this.currentBarHeight);\n\n        this.scene.renderer.add({\n            type: RenderingType.BLACK_BARS,\n            layer: RenderingLayer.BLACK_BARS,\n            color: \"black\",\n            height: this.barHeight,\n            force\n        });\n    }\n\n    public drawBars(ctx: CanvasRenderingContext2D, force = this.getFocusForce()): void {\n        force = Math.max(force, this.getFocusForce(), this.currentBarHeight);\n        ctx.save();\n        ctx.fillStyle = \"black\";\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        const f = 0.5 - 0.5 * Math.cos(Math.PI * force);\n        const h = ctx.canvas.height * this.barHeight * f;\n        ctx.fillRect(0, 0, ctx.canvas.width, h);\n        ctx.fillRect(0, ctx.canvas.height - h, ctx.canvas.width, h);\n        ctx.restore();\n    }\n\n    public isZoomingOut(): boolean {\n        return this.zoomingOut;\n    }\n}\n","import caveman1 from \"../../assets/dialog/caveman1.dialog.json\";\nimport caveman2 from \"../../assets/dialog/caveman2.dialog.json\";\nimport fire0 from \"../../assets/dialog/fire0.dialog.json\";\nimport fire1 from \"../../assets/dialog/fire1.dialog.json\";\nimport fire2 from \"../../assets/dialog/fire2.dialog.json\";\nimport fire3 from \"../../assets/dialog/fire3.dialog.json\";\nimport fire4 from \"../../assets/dialog/fire4.dialog.json\";\nimport flameboy1 from \"../../assets/dialog/flameboy1.dialog.json\";\nimport flameboy2 from \"../../assets/dialog/flameboy2.dialog.json\";\nimport flameboy3 from \"../../assets/dialog/flameboy3.dialog.json\";\nimport flameboy4 from \"../../assets/dialog/flameboy4.dialog.json\";\nimport powershiba2 from \"../../assets/dialog/powershiba2.dialog.json\";\nimport seed1 from \"../../assets/dialog/seed1.dialog.json\";\nimport shadowpresence1 from \"../../assets/dialog/shadowpresence1.dialog.json\";\nimport shiba1 from \"../../assets/dialog/shiba1.dialog.json\";\nimport shiba2 from \"../../assets/dialog/shiba2.dialog.json\";\nimport shiba3 from \"../../assets/dialog/shiba3.dialog.json\";\nimport shiba4 from \"../../assets/dialog/shiba4.dialog.json\";\nimport shiba5 from \"../../assets/dialog/shiba5.dialog.json\";\nimport stone1 from \"../../assets/dialog/stone1.dialog.json\";\nimport stone2 from \"../../assets/dialog/stone2.dialog.json\";\nimport stonedisciple1 from \"../../assets/dialog/stonedisciple1.dialog.json\";\nimport stonedisciple2 from \"../../assets/dialog/stonedisciple2.dialog.json\";\nimport tree0 from \"../../assets/dialog/tree0.dialog.json\";\nimport tree1 from \"../../assets/dialog/tree1.dialog.json\";\nimport tree2 from \"../../assets/dialog/tree2.dialog.json\";\nimport wing1 from \"../../assets/dialog/wing1.dialog.json\";\nimport { Conversation } from \"./Conversation\";\nimport { type DialogJSON } from \"./Dialog\";\nimport { type NPC } from \"./entities/NPC\";\nimport { FaceModes } from \"./Face\";\nimport { type Game } from \"./Game\";\nimport { valueCurves } from \"./Particles\";\nimport { type Quest, QuestA, QuestATrigger, QuestB, QuestC, QuestD, QuestE, QuestKey } from \"./Quests\";\nimport { type GameScene } from \"./scenes/GameScene\";\nimport { Signal } from \"./Signal\";\n\nexport type CampaignState = \"start\" | \"finished\";\n\nconst allDialogs: Record<string, DialogJSON> = {\n    \"caveman1\": caveman1,\n    \"caveman2\": caveman2,\n    \"fire0\": fire0,\n    \"fire1\": fire1,\n    \"fire2\": fire2,\n    \"fire3\": fire3,\n    \"fire4\": fire4,\n    \"stone1\": stone1,\n    \"stone2\": stone2,\n    \"stonedisciple1\": stonedisciple1,\n    \"stonedisciple2\": stonedisciple2,\n    \"seed1\": seed1,\n    \"tree0\": tree0,\n    \"tree1\": tree1,\n    \"tree2\": tree2,\n    \"shiba1\": shiba1,\n    \"shiba2\": shiba2,\n    \"shiba3\": shiba3,\n    \"shiba4\": shiba4,\n    \"shiba5\": shiba5,\n    \"powershiba2\": powershiba2,\n    \"flameboy1\": flameboy1,\n    \"flameboy2\": flameboy2,\n    \"flameboy3\": flameboy3,\n    \"flameboy4\": flameboy4,\n    \"wing1\": wing1,\n    \"shadowpresence1\": shadowpresence1,\n};\n\nexport enum CharacterAsset {\n    FEMALE, MALE, PATIENT\n}\n\nexport enum VoiceAsset {\n    FEMALE, MALE\n}\n\nexport class Campaign {\n    public onStatesChanged = new Signal<CampaignState[]>();\n    public states: CampaignState[] = [\"start\"];\n    public readonly quests = [\n        new QuestA(this),\n        new QuestB(this),\n        new QuestC(this),\n        new QuestD(this),\n        new QuestE(this)\n    ];\n    public gameScene?: GameScene | undefined;\n\n    public selectedCharacter = CharacterAsset.FEMALE;\n    public selectedVoice = VoiceAsset.FEMALE;\n    public isNewGamePlus = false;\n\n    public constructor(public game: Game) {}\n\n    public getQuest(key: QuestKey): Quest {\n        const ending = this.quests.find(ending => ending.key === key);\n        if (!ending) throw new Error(`Cannot find quest with key ${key}`);\n        return ending;\n    }\n\n    public setNewGamePlus(isNewGamePlus: boolean): void {\n        this.isNewGamePlus = isNewGamePlus;\n    }\n\n    public toggleCharacterAsset(): void {\n        this.selectedCharacter = this.selectedCharacter === CharacterAsset.MALE ? CharacterAsset.FEMALE : CharacterAsset.MALE;\n    }\n\n    public toggleVoiceAsset(): void {\n        this.selectedVoice = this.selectedVoice === VoiceAsset.MALE ? VoiceAsset.FEMALE : VoiceAsset.MALE;\n    }\n\n    /**\n     * Init campaign. Assign Game Scene and enable all initial dialog trees\n     * @param gameScene Game Scene\n     */\n    public begin(gameScene: GameScene): void {\n        this.gameScene = gameScene;\n\n        // Rest quest progress\n        this.quests.forEach(q => {\n            q.reset();\n        });\n\n        this.getQuest(QuestKey.A).trigger(QuestATrigger.JUST_ARRIVED);\n\n        // Setup initial NPC dialogs\n        this.runAction(\"enable\", null, [\"caveman\", \"caveman1\"]);\n        this.runAction(\"enable\", null, [\"fire\", \"fire0\"]);\n        this.runAction(\"enable\", null, [\"tree\", \"tree0\"]);\n        this.runAction(\"enable\", null, [\"stone\", \"stone1\"]);\n        this.runAction(\"enable\", null, [\"stonedisciple\", \"stonedisciple1\"]);\n        this.runAction(\"enable\", null, [\"flameboy\", \"flameboy1\"]);\n        this.runAction(\"enable\", null, [\"wing\", \"wing1\"]);\n        this.runAction(\"enable\", null, [\"shadowpresence\", \"shadowpresence1\"]);\n    }\n\n    public hasState(state: CampaignState): boolean {\n        return this.states.includes(state);\n    }\n\n    public setStates(states: CampaignState[]): void {\n        this.states = states;\n        this.onStatesChanged.emit(this.states);\n    }\n\n    public removeState(state: CampaignState): void {\n        if (this.hasState(state)) {\n            this.states.splice(this.states.indexOf(state), 1);\n            this.onStatesChanged.emit(this.states);\n        }\n    }\n\n    public addState(state: CampaignState): void {\n        if (!this.hasState(state)) {\n            this.states.push(state);\n            this.onStatesChanged.emit(this.states);\n        }\n    }\n\n    /**\n     * Run action is only allowed when active scene is GameScene\n     * @param action - action string\n     * @param npc    - targeted npc\n     * @param params - params consisting of string array\n     */\n    public runAction(action: string, npc?: NPC | null, params: string[] = []): void {\n        if (this.gameScene) {\n            switch (action) {\n                case \"angry\":\n                    npc?.face?.setMode(FaceModes.ANGRY);\n                    break;\n                case \"neutral\":\n                    npc?.face?.setMode(FaceModes.NEUTRAL);\n                    break;\n                case \"bored\":\n                    npc?.face?.setMode(FaceModes.BORED);\n                    break;\n                case \"amused\":\n                    npc?.face?.setMode(FaceModes.AMUSED);\n                    break;\n                case \"sad\":\n                    npc?.face?.setMode(FaceModes.SAD);\n                    break;\n                case \"zoomin\":\n                    this.gameScene.camera.zoom += 1;\n                    break;\n                case \"zoomout\":\n                    this.gameScene.camera.zoom -= 1;\n                    break;\n                case \"treezoom\": {\n                    const forestPointer = this.gameScene.pointsOfInterest.find(poi => poi.name === \"forest\");\n\n                    if (forestPointer) {\n                        void this.gameScene.camera.focusOn(\n                            8,\n                            forestPointer.x, forestPointer.y,\n                            1,\n                            0,\n                            valueCurves.cos(0.35)\n                        );\n                    }\n\n                    break;\n                }\n                case \"mountainzoom\": {\n                    const mountainPointer = this.gameScene.pointsOfInterest.find(poi => poi.name === \"mountain\");\n\n                    if (mountainPointer) {\n                        void this.gameScene.camera.focusOn(\n                            8,\n                            mountainPointer.x, mountainPointer.y,\n                            1,\n                            0,\n                            valueCurves.cos(0.35)\n                        );\n                    }\n\n                    break;\n                }\n                case \"riverzoom\": {\n                    const riverPointer = this.gameScene.pointsOfInterest.find(poi => poi.name === \"river\");\n\n                    if (riverPointer) {\n                        void this.gameScene.camera.focusOn(\n                            8,\n                            riverPointer.x, riverPointer.y,\n                            1,\n                            0,\n                            valueCurves.cos(0.35)\n                        );\n                    }\n\n                    break;\n                }\n                case \"crazyzoom\": {\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.APOCALYPSE_STARTED);\n                    const duration = 12;\n\n                    void this.gameScene.camera.focusOn(\n                        duration,\n                        this.gameScene.fire.x, this.gameScene.fire.y + 15,\n                        8,\n                        -2 * Math.PI, valueCurves.cubic\n                    ).then(() => this.gameScene?.beginApocalypse());\n\n                    this.gameScene.fire.conversation = null;\n                    this.gameScene.fireFuryEndTime = this.gameScene.gameTime + duration + 8;\n                    break;\n                }\n                case \"friendshipEnding\":\n                    this.gameScene.beginFriendshipEnding();\n                    break;\n                case \"activatefireportal\":\n                    this.gameScene.exitPortal.activate();\n                    this.gameScene.flameboy.nextState();\n                    break;\n                case \"talkedtofire\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.TALKED_TO_FIRE);\n                    break;\n                case \"giveWoodToFlameboy\":\n                    Conversation.setGlobal(\"gaveWoodToFlameboy\", \"true\");\n                    this.gameScene.setGateDisabled(\"exitportaldoor_1\", false);\n                    this.gameScene.player.removeMultiJump();\n                    this.gameScene.removeGameObject(this.gameScene.fire);\n                    this.gameScene.removeGameObject(this.gameScene.shiba);\n                    this.gameScene.removeGameObject(this.gameScene.powerShiba);\n                    this.gameScene.removeGameObject(this.gameScene.bird);\n                    this.gameScene.removeGameObject(this.gameScene.shadowPresence);\n                    this.gameScene.removeGameObject(this.gameScene.tree);\n                    this.gameScene.removeGameObject(this.gameScene.wing);\n                    this.gameScene.removeGameObject(this.gameScene.mimic);\n                    this.gameScene.removeGameObject(this.gameScene.stone);\n                    this.gameScene.removeGameObject(this.gameScene.stoneDisciple);\n\n                    this.runAction(\"enable\", null, [\"flameboy\", \"flameboy3\"]);\n                    break;\n                case \"giveBone\":\n                    Conversation.setGlobal(\"gaveBoneToPowerShiba\", \"true\");\n                    this.runAction(\"enable\", null, [\"shiba\", \"shiba3\"]);\n                    this.runAction(\"enable\", null, [\"powershiba\", \"powershiba2\"]);\n                    break;\n                case \"shibaNextState\":\n                    this.gameScene.shiba.nextState();\n                    break;\n                case \"talkedtotree\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.TALKED_TO_TREE);\n                    break;\n                case \"gotFireQuest\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_QUEST_FROM_FIRE);\n                    Conversation.setGlobal(\"gotFireQuest\", \"true\");\n                    this.runAction(\"enable\", null, [\"tree\", \"tree1\"]);\n                    break;\n                case \"endgameA\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.BEAT_GAME);\n                    this.getQuest(QuestKey.A).finish();\n                    this.gameScene.fire.conversation = null;\n                    void this.gameScene.gameOver();\n                    break;\n                case \"endgameB\":\n                    this.getQuest(QuestKey.B).finish();\n                    this.gameScene.fire.conversation = null;\n                    void this.gameScene.gameOver();\n                    break;\n                case \"endgameC\":\n                    this.getQuest(QuestKey.C).finish();\n                    this.gameScene.caveman.conversation = null;\n                    void this.gameScene.gameOver();\n                    break;\n                case \"game\":\n                    this.addState(params[0] as CampaignState);\n                    break;\n                case \"enableRunning\":\n                    this.gameScene.player.enableRunning();\n                    break;\n                case \"doublejump\":\n                    this.gameScene.player.enableDoubleJump();\n                    break;\n                case \"multijump\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_MULTIJUMP);\n                    this.gameScene.player.enableMultiJump();\n                    break;\n                case \"friendship\":\n                    this.gameScene.player.enableFriendship();\n                    break;\n                case \"spawnseed\":\n                    this.gameScene.tree.spawnSeed();\n                    break;\n                case \"spawnwood\":\n                    this.getQuest(QuestKey.A).trigger(QuestATrigger.TREE_DROPPED_WOOD);\n                    this.gameScene.tree.spawnWood();\n                    break;\n                case \"talkedToStone\":\n                    if (this.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.PLANTED_SEED) {\n                        this.getQuest(QuestKey.A).trigger(QuestATrigger.TALKED_TO_STONE);\n                    }\n                    break;\n                case \"pickupstone\":\n                    this.gameScene.stone.pickUp();\n                    break;\n                case \"learnraindance\":\n                    this.gameScene.player.enableRainDance();\n                    break;\n                case \"talkedToFireWithWood\":\n                    if (this.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.GOT_WOOD) {\n                        this.getQuest(QuestKey.A).trigger(QuestATrigger.TALKED_TO_FIRE_WITH_WOOD);\n                    }\n                    break;\n                case \"dance\":\n                    setTimeout(() => {\n                        this.gameScene?.player.startDance(+params[0] || 1);\n                    }, 500);\n\n                    break;\n                case \"wakeupchest\":\n                    this.gameScene.mimic.nextState();\n                    break;\n                case \"petDoggo\":\n                    this.gameScene.beginPetEnding();\n                    break;\n                case \"lookThroughWindow\":\n                    this.gameScene.beginWindowEnding();\n                    break;\n                case \"enable\": {\n                    const char = params[0], dialogName = params[1];\n\n                    const npcMap: Record<string, NPC> = {\n                        \"fire\": this.gameScene.fire,\n                        \"stone\": this.gameScene.stone,\n                        \"stonedisciple\": this.gameScene.stoneDisciple,\n                        \"tree\": this.gameScene.tree,\n                        \"seed\": this.gameScene.seed,\n                        \"flameboy\": this.gameScene.flameboy,\n                        \"wing\": this.gameScene.wing,\n                        \"caveman\": this.gameScene.caveman,\n                        \"shadowpresence\": this.gameScene.shadowPresence,\n                        \"shiba\": this.gameScene.shiba,\n                        \"powershiba\": this.gameScene.powerShiba\n                    };\n\n                    const targetNpc = npcMap[char];\n                    const dialog = allDialogs[dialogName];\n\n                    if (targetNpc != null && dialog != null) {\n                        targetNpc.conversation = new Conversation(dialog, targetNpc);\n                    }\n\n                    break;\n                }\n                case \"disable\": {\n                    const char1 = params[0];\n\n                    const npcMap1: Record<string, NPC> = {\n                        \"fire\": this.gameScene.fire,\n                        \"stone\": this.gameScene.stone,\n                        \"stonedisciple\": this.gameScene.stoneDisciple,\n                        \"tree\": this.gameScene.tree,\n                        \"seed\": this.gameScene.seed,\n                        \"flameboy\": this.gameScene.flameboy,\n                        \"wing\": this.gameScene.wing,\n                        \"caveman\": this.gameScene.caveman,\n                        \"shadowpresence\": this.gameScene.shadowPresence,\n                        \"shiba\": this.gameScene.shiba,\n                        \"powershiba\": this.gameScene.powerShiba\n                    };\n\n                    const targetNpc1 = npcMap1[char1];\n\n                    if (targetNpc1 != null) {\n                        targetNpc1.conversation = null;\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n","import { asset } from \"./Assets\";\nimport { type Sound } from \"./audio/Sound\";\nimport { VoiceAsset } from \"./Campaign\";\nimport { rndItem } from \"./util\";\n\nexport type CharacterSoundType = \"jump\" | \"drown\" | \"land\" | \"throw\";\ntype SoundDataStructure = Record<VoiceAsset, Record<CharacterSoundType, Sound[]>>;\n\nexport class CharacterSounds  {\n  /** Low Pitch */\n  @asset([\"sounds/jumping/jumping.mp3\"])\n  public static lowPitchJump: Sound[];\n\n  @asset([\"sounds/drowning/drowning.mp3\"])\n  private static readonly lowPitchDrown: Sound[];\n\n  @asset([\"sounds/jumping/landing.mp3\"])\n  private static readonly lowPitchLand: Sound[];\n\n  @asset([\"sounds/throwing/throwing.mp3\"])\n  private static readonly lowPitchThrow: Sound[];\n\n  /** High Pitch */\n  @asset([\n    \"sounds/jumping/jump_female_01.ogg\"\n  ])\n  private static readonly highPitchJump: Sound[];\n\n  @asset([\"sounds/drowning/drowning.mp3\"])\n  private static readonly highPitchDrown: Sound[];\n\n  @asset([\"sounds/jumping/landing.mp3\"])\n  private static readonly highPitchLand: Sound[];\n\n  @asset([\"sounds/throwing/throwing.mp3\"])\n  private static readonly highPitchThrow: Sound[];\n\n  public static getSoundData(): SoundDataStructure {\n    return {\n      [VoiceAsset.MALE]: {\n        \"jump\": CharacterSounds.lowPitchJump,\n        \"drown\": CharacterSounds.lowPitchDrown,\n        \"land\": CharacterSounds.lowPitchLand,\n        \"throw\": CharacterSounds.lowPitchThrow\n      },\n      [VoiceAsset.FEMALE]: {\n        \"jump\": CharacterSounds.highPitchJump,\n        \"drown\": CharacterSounds.highPitchDrown,\n        \"land\": CharacterSounds.highPitchLand,\n        \"throw\": CharacterSounds.highPitchThrow\n      },\n    };\n  }\n\n\n  private static getRandomCharacterSound(type: CharacterSoundType, voice: VoiceAsset): Sound | undefined {\n    return rndItem(CharacterSounds.getSoundData()[voice][type]);\n  }\n\n  public static playRandomCharacterSound(type: CharacterSoundType, voice: VoiceAsset): void {\n    CharacterSounds.stopCharacterSound(type, voice);\n    const randomSound = CharacterSounds.getRandomCharacterSound(type, voice);\n    if (randomSound) {\n      randomSound.play();\n    }\n  }\n\n  public static stopCharacterSound(type: CharacterSoundType, voice: VoiceAsset): void {\n    const sounds = CharacterSounds.getSoundData()[voice][type];\n    sounds.forEach(s => s.stop());\n  }\n}\n","import { getImageData } from \"./graphics\";\nimport { clamp, rndItem } from \"./util\";\n\nexport class ColorGradient {\n    public constructor(private readonly mapping: (p: number) => number[]) {}\n\n    public get(p: number): number[] {\n        return this.mapping(clamp(p, 0, 0.9999999999));\n    }\n\n    public getCss(p: number): string {\n        const color = this.get(p);\n\n        return `rgba(${color[0]},${color[1]},${color[2]},${color[3]})`;\n    }\n\n    public static fromTable(table: number[][]): ColorGradient {\n        const items = table.length;\n        const grad = new ColorGradient((v) => {\n            const index = Math.floor(v * items);\n            return table[index];\n        });\n\n        return grad;\n    }\n\n    public static fromImage(img: HTMLImageElement): ColorGradient {\n        const data = getImageData(img);\n        const pixels = data.data;\n        const w = img.naturalWidth, h = img.naturalHeight;\n        let p = 0;\n\n        if (h === 1) {\n            // mapping each value to single unique color\n            const colors: number[][] = [];\n\n            for (let x = 0; x < w; x++) {\n                colors.push([pixels[p++], pixels[p++], pixels[p++], pixels[p++]]);\n            }\n\n            return ColorGradient.fromTable(colors);\n        } else {\n            // mapping each value to randomly selected color of given set\n            const colors: number[][][] = [];\n\n            for (let x = 0; x < w; x++) {\n                colors[x] = [];\n\n                for (let y = 0; y < h; y++) {\n                    const p = 4 * (x + w * y);\n                    colors[x].push([pixels[p], pixels[p + 1], pixels[p + 2], pixels[p + 3]]);\n                }\n            }\n\n            const items = w;\n\n            return new ColorGradient((v) => {\n                const index = Math.floor(v * items);\n                return rndItem(colors[index]);\n            });\n        }\n    }\n}\n","import { type DialogJSON } from \"./Dialog\";\nimport { type NPC } from \"./entities/NPC\";\n\nexport interface Interaction {\n    npcLine: ConversationLine | null;\n    options: ConversationLine[];\n    spoiledOptions: ConversationLine[];\n}\n\n// Actions that shall be executed before an NPC talks, not after\nconst earlyActions = new Set([\n    \"angry\",\n    \"sad\",\n    \"amused\",\n    \"neutral\",\n    \"bored\"\n]);\n\nexport class Conversation {\n    private static globalVariables: Record<string, string> = {};\n    private readonly states: string[];\n    private readonly data: {[key: string]: ConversationLine[]};\n    private state!: string;\n    private stateIndex = 0;\n    private endConversation = false;\n    private localVariables: Record<string, string> = {};\n    private skippedLines = 0; // help variable to make goBack() work with skipped dialog lines due to conditions\n\n    public constructor(json: DialogJSON, private readonly npc: NPC) {\n        this.states = Object.keys(json);\n        this.data = {};\n\n        for (const state of this.states) {\n            this.data[state] = json[state].map(line => new ConversationLine(line, this));\n        }\n\n        this.setState(\"entry\");\n        this.endConversation = false;\n    }\n\n    public setState(name = \"entry\"): void {\n        if (!this.states.includes(name)) {\n            throw new Error(`State name ${name} does not exist in conversation`);\n        }\n\n        this.state = name;\n        this.stateIndex = 0;\n    }\n\n    public getNextInteraction(): Interaction | null {\n        if (this.endConversation) {\n            this.endConversation = false;\n            return null;\n        }\n\n        this.skippedLines = 0;\n\n        const result: Interaction = {\n            npcLine: null,\n            options: [],\n            spoiledOptions: []\n        };\n\n        // Does NPC speak?\n        const line = this.getNextLine();\n\n        if (line == null) {\n            // Conversation is over without changing state or anything\n            return null;\n        } else {\n            if (line.isNpc) {\n                result.npcLine = line;\n            } else {\n                this.goBack(1 + this.skippedLines);\n            }\n        }\n\n        // Does Player react?\n        this.skippedLines = 0;\n        let option = this.getNextLine();\n\n        while (option && !option.isNpc) {\n            // TODO: Identify spoiled options (that don't lead to anything new for the player) and\n            //       sort accordingly.\n            result.options.push(option);\n            this.skippedLines = 0;\n            option = this.getNextLine();\n        }\n\n        if (option && !option.isNpc) {\n            this.goBack();\n        } else {\n            this.goBack(1 + this.skippedLines);\n        }\n\n        this.skippedLines = 0;\n\n        return result;\n    }\n\n    public runAction(action: string[]): void {\n        switch (action[0]) {\n            case \"end\":\n                this.endConversation = true;\n                break;\n            case \"set\":\n                this.setVariable(action[1], action[2]);\n                break;\n            default:\n                this.npc.scene.game.campaign.runAction(action[0], this.npc, action.slice(1));\n        }\n    }\n\n    private setVariable(name = \"\", value = \"true\"): void {\n        if (name.startsWith(\"$\")) {\n            // Global variable\n            Conversation.globalVariables[name] = value;\n        } else {\n            // Local variable\n            this.localVariables[name] = value;\n        }\n    }\n\n    public static setGlobal(varname: string, value = \"true\"): void {\n        if (!varname.startsWith(\"$\")) {\n            varname = \"$\" + varname;\n        }\n\n        Conversation.globalVariables[varname] = value;\n    }\n\n    public static getGlobals(): Record<string, string> {\n        return Conversation.globalVariables;\n    }\n\n    public static resetGlobals(): void {\n        Conversation.globalVariables = {};\n    }\n\n    private getVariable(name: string): string {\n        if (name.startsWith(\"$\")) {\n            return Conversation.globalVariables[name];\n        } else {\n            return this.localVariables[name];\n        }\n    }\n\n    private goBack(steps = 1): void {\n        if (steps <= 0) {\n            return;\n        }\n\n        this.stateIndex -= steps;\n        this.skippedLines = 0;\n    }\n\n    private getNextLine(ignoreDisabled = false): ConversationLine | null {\n        if (this.stateIndex >= this.data[this.state].length) {\n            return null;\n        }\n\n        const line = this.data[this.state][this.stateIndex++];\n\n        if (line.condition != null && (!ignoreDisabled && !this.testCondition(line.condition))) {\n            this.skippedLines++;\n            return this.getNextLine(ignoreDisabled);\n        }\n\n        return line;\n    }\n\n    private testCondition(condition: string): boolean {\n        const self = this;\n        const subconditions = condition.split(\",\");\n        const result = subconditions.some(evaluateFragment);\n\n        return result;\n\n        function evaluateFragment(s: string): boolean {\n            if (s.startsWith(\"not \")) {\n                return !evaluateFragment(s.substring(4));\n            } else {\n                if (s.includes(\"!=\")) {\n                    const values = s.split(\"!=\").map(s => s.trim());\n                    return self.getVariable(values[0]) !== values[1];\n                } else if (s.includes(\"=\")) {\n                    const values = s.split(\"=\").map(s => s.trim());\n                    return self.getVariable(values[0]) === values[1];\n                } else if (s.includes(\">\")) {\n                    const values = s.split(\">\").map(s => s.trim());\n                    return parseFloat(self.getVariable(values[0])) > parseFloat(values[1]);\n                } else if (s.includes(\"<\")) {\n                    const values = s.split(\"<\").map(s => s.trim());\n                    return parseFloat(self.getVariable(values[0])) < parseFloat(values[1]);\n                }\n            }\n\n            // Variable name only\n            const v = self.getVariable(s.trim());\n            return v != null && v !== \"\" && v !== \"0\" && v !== \"false\";\n        }\n    }\n\n    public hasEnded(): boolean {\n        return this.endConversation;\n    }\n}\n\nconst MAX_CHARS_PER_LINE = 50;\n\nexport class ConversationLine {\n    public static OPTION_MARKER = \"►\";\n    public readonly line: string;\n    public readonly condition: string | null;\n    public readonly targetState: string | null;\n    public readonly actions: string[][];\n    public readonly isNpc: boolean;\n    private visited = false;\n\n    public constructor(\n        public readonly full: string,\n        public readonly conversation: Conversation\n    ) {\n        this.isNpc = !full.startsWith(\"►\");\n        this.line = ConversationLine.extractText(full, this.isNpc);\n        this.condition = ConversationLine.extractCondition(full);\n        this.targetState = ConversationLine.extractState(full);\n        this.actions = ConversationLine.extractActions(full);\n        this.visited = false;\n    }\n\n    public executeBeforeLine(): void {\n        if (this.actions.length > 0) {\n            for (const action of this.actions) {\n                if (this.isEarlyAction(action[0])) {\n                    this.conversation.runAction(action);\n                }\n            }\n        }\n    }\n\n    public execute(): void {\n        this.visited = true;\n\n        if (this.targetState != null) {\n            this.conversation.setState(this.targetState);\n        }\n\n        if (this.actions.length > 0) {\n            for (const action of this.actions) {\n                if (!this.isEarlyAction(action[0])) {\n                    this.conversation.runAction(action);\n                }\n            }\n        }\n    }\n\n    public isEarlyAction(s: string): boolean {\n        return earlyActions.has(s);\n    }\n\n    public wasVisited(): boolean {\n        return this.visited;\n    }\n\n    private static extractText(line: string, autoWrap = false): string {\n        // Remove player option sign\n        if (line.startsWith(ConversationLine.OPTION_MARKER)) { line = line.substring(1); }\n\n        // Remove conditions\n        if (line.trim().startsWith(\"[\") && line.includes(\"]\")) {\n            line = line.substring(line.indexOf(\"]\") + 1).trim();\n        }\n\n        // Remove actions and state changes\n        const atPos = line.indexOf(\"@\");\n        const exclPos = line.search(/\\![a-zA-Z]/);\n\n        if (atPos >= 0 || exclPos >= 0) {\n            const minPos = (atPos >= 0 && exclPos >= 0) ? Math.min(atPos, exclPos) : (atPos >= 0) ? atPos : exclPos;\n            line = line.substring(0, minPos).trim();\n        }\n\n        // Auto wrap to some character count\n        if (autoWrap) {\n            return ConversationLine.wrapString(line, MAX_CHARS_PER_LINE);\n        }\n\n        return line;\n    }\n\n    private static extractCondition(line: string): string | null {\n        const conditionString = line.match(/\\[[a-zA-Z0-9\\_\\<\\>\\!\\=\\$ ]+\\]/g);\n\n        if (conditionString && conditionString[0]) {\n            return conditionString[0].substring(1, conditionString[0].length - 1);\n        }\n\n        return null;\n    }\n\n    private static extractState(line: string): string | null {\n        const stateChanges = line.match(/(@[a-zA-Z0-9\\_]+)/g);\n\n        if (stateChanges && stateChanges.length > 0) {\n            const stateName = stateChanges[0].substring(1);\n            return stateName;\n        }\n\n        return null;\n    }\n\n    private static extractActions(line: string): string[][] {\n        return line.match(/(\\![a-zA-Z][a-zA-Z0-9\\_\\$ ]*)+/g)\n                        ?.join(\" \")\n                        .split(\"!\")\n                        .map(action => action.trim()).filter(s => s.length > 0)\n                        .map(action => action.split(\" \")) ?? [] as string[][];\n    }\n\n    public static wrapString(s: string, charsPerLine: number): string {\n        let currentLength = 0, lastSpace = -1;\n\n        for (let i = 0; i < s.length; i++) {\n            const char = s[i];\n\n            if (char === \"\\n\") {\n                // New line\n                currentLength = 0;\n            } else {\n                if (char === \" \") {\n                    lastSpace = i;\n                }\n\n                currentLength++;\n\n                if (currentLength >= charsPerLine) {\n                    if (lastSpace >= 0) {\n                        // Add cut at last space\n                        s = s.substring(0, lastSpace) + \"\\n\" + s.substring(lastSpace + 1);\n                        currentLength = i - lastSpace;\n                        lastSpace = -1;\n                    } else {\n                        // Cut mid-word\n                        s = s.substring(0, i + 1) + \"\\n\" + s.substring(i + 1);\n                        currentLength = 0;\n                    }\n                }\n            }\n        }\n\n        return s;\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { Sound } from \"./audio/Sound\";\nimport { type ControllerEvent } from \"./input/ControllerEvent\";\nimport { type ControllerSpriteMap } from \"./input/ControllerFamily\";\nimport { ControllerManager } from \"./input/ControllerManager\";\nimport { type ValueCurve, valueCurves } from \"./Particles\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { type GameScene } from \"./scenes/GameScene\";\n\nexport class Dance {\n    @asset(\"sounds/dancing/success.mp3\")\n    private static readonly successSound: Sound;\n\n    @asset(\"sounds/dancing/fail.mp3\")\n    private static readonly failSound: Sound;\n\n    @asset(\"music/raindance.ogg\")\n    private static readonly raindance_music: Sound;\n\n    @asset(\"music/dancing_queen.ogg\")\n    private static readonly treedance_music: Sound;\n\n    @asset(\"images/dancing_ui_bar.png\")\n    private static readonly bar: HTMLImageElement;\n\n    @asset(\"images/dancing_ui_indicator.png\")\n    private static readonly indicator: HTMLImageElement;\n\n    @asset(\"sprites/dancing_ui_keys.aseprite.json\")\n    private static readonly keys: Aseprite;\n\n    /** When the dance was created and visible to the player for the first time */\n    private openTime!: number;\n    /** Time of the first note, depends on openTime and warmupBeats */\n    private startTime!: number;\n    /** Progress time relative to startTime. So starts out negative during warmup. */\n    private progress = 0;\n    private readonly duration: number;\n    private currentKey = \"\";\n    private currentDistanceToIdealTime = 0;\n    private readonly allKeys = [\"1\", \"2\"];\n    private readonly keys: string[];\n    private readonly alphaCurve: ValueCurve;\n    private mistakes = 0;\n    private lastMistake = 0;\n    private lastSuccess = 0;\n    private performance: Record<string, boolean>[] = [];\n    private currentIndex = 0;\n    private success = false;\n\n    public constructor(\n        private readonly scene: GameScene,\n        private x: number,\n        private y: number,\n        private readonly bpm = 128,\n        keys = \"\", // can contain \"1\" or \"2\" for single keys, or \"3\" for both at once\n        private readonly warmupBeats = 8,\n        private readonly allowedMistakes = 3,\n        private readonly timeTolerance = 0.75,\n        private readonly withMusic = true,\n        private readonly musicIndex = 1 // 0 tree-dance, 1 for raindance\n    ){\n        this.duration = keys.length;\n        this.keys = [];\n        this.performance = [];\n\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            this.keys[i] = key === \" \" ? \"\" : key === \"3\" ? \"12\" : key;\n            this.performance[i] = {};\n        }\n\n        this.begin();\n        this.alphaCurve = valueCurves.cos(0.15);\n    }\n\n    public wasSuccessful(): boolean {\n        return this.success;\n    }\n\n    public hasStarted(): boolean {\n        return this.progress > 0;\n    }\n\n    public getTimeSinceLastMistake(): number {\n        return this.progress - this.lastMistake;\n    }\n\n    public getTimeSinceLastSuccess(): number {\n        return this.progress - this.lastSuccess;\n    }\n\n    private begin(): void {\n        this.openTime = this.scene.gameTime;\n        this.startTime = this.openTime + this.warmupBeats / this.bpm * 60;\n        this.currentKey = \"\";\n        this.currentDistanceToIdealTime = 0;\n        this.mistakes = 0;\n        this.lastMistake = -Infinity;\n        this.lastSuccess = -Infinity;\n        this.currentIndex = 0;\n        this.performance = this.performance.map(() => ({}));\n        this.success = false;\n        Dance.raindance_music.stop();\n        Dance.raindance_music.setVolume(0);\n        Dance.treedance_music.stop();\n        Dance.treedance_music.setVolume(0);\n    }\n\n    public setPosition(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    // Called by parent\n    public handleButtonDown(e: ControllerEvent): void {\n        if (!e.repeat && this.hasStarted()) {\n            const key = e.isPlayerDance1 ? \"1\" : \"2\";\n            if (this.allKeys.indexOf(key) >= 0) {\n                if (this.currentKey.includes(key)) {\n                    if (this.currentDistanceToIdealTime <= this.timeTolerance) {\n                        this.keySuccess(key);\n                        return;\n                    }\n                }\n\n                const nxt = this.currentIndex + 1;\n\n                if (this.keys[nxt] && this.keys[nxt].includes(key)) {\n                    if (this.progress - (nxt + 0.5) < this.timeTolerance) {\n                        this.keySuccess(key, nxt);\n                        return;\n                    }\n                }\n\n                this.keyFailure(key);\n            }\n        }\n    }\n\n    private keySuccess(key: string, index = this.currentIndex): void {\n        for (const char of key) {\n            if (index === this.currentIndex) {\n                this.currentKey = this.currentKey.replace(char, \"\");\n            }\n\n            this.performance[index][char] = true;\n        }\n        if (index === this.currentIndex && this.currentKey.length === 0 || this.keys[index].length === 0) {\n            this.lastSuccess = this.progress;\n            Dance.successSound.stop();\n        }\n    }\n\n    private keyFailure(key: string): void {\n        if (!this.currentKey.includes(key)) {\n            this.registerMistake();\n            Dance.failSound.play();\n        }\n    }\n\n    private keyMissed(key: string): void {\n        if (this.performance[this.currentIndex] != null) {\n            for (const char of key) {\n                this.performance[this.currentIndex][char] = false;\n            }\n        }\n\n        this.registerMistake();\n    }\n\n    private registerMistake(): void {\n        this.mistakes++;\n        this.lastMistake = this.progress;\n        Dance.failSound.play();\n\n        if (this.mistakes > this.allowedMistakes) {\n            this.loseGame();\n        }\n    }\n\n    private loseGame(): void {\n        // Simply reset for now\n        this.begin();\n    }\n\n    public update(): boolean {\n        const time = this.scene.gameTime - this.startTime;\n        this.progress = time * this.bpm / 60;\n        const prevIndex = this.currentIndex;\n        this.currentIndex = Math.floor(this.progress);\n        this.updateMusic();\n\n        // Next key?\n        if (this.currentIndex > prevIndex) {\n            // Missed last one?\n            if (this.currentKey.length > 0) {\n                this.keyMissed(this.currentKey);\n                this.currentKey = \"\";\n                return false;\n            }\n\n            // Proceed\n            this.currentKey = this.keys[this.currentIndex] || \"\";\n\n            for (const char of this.currentKey) {\n                if (this.performance[this.currentIndex] != null && this.performance[this.currentIndex][char]) {\n                    this.currentKey = this.currentKey.replace(char, \"\");\n                }\n            }\n        }\n\n        if (this.progress >= this.duration) {\n            // Done! Success! Yeah!\n            this.success = true;\n            this.resetMusic();\n            return true;\n        }\n\n        if (this.currentKey) {\n            this.currentDistanceToIdealTime = Math.abs(this.progress - (this.currentIndex + 0.5));\n        } else {\n            this.currentDistanceToIdealTime = 0;\n        }\n\n        return false;\n    }\n\n    private updateMusic(): void {\n        if (!this.withMusic) {\n            return;\n        }\n\n        if (this.progress < 0 && !Dance.raindance_music.isPlaying()) {\n            const fade = -this.progress / this.warmupBeats;\n            this.scene.fadeActiveBackgroundTrack(fade);\n        } else {\n            // own music paused\n            if (this.musicIndex === 0 && !Dance.treedance_music.isPlaying()) {\n                Dance.treedance_music.setVolume(0.8);\n                Dance.treedance_music.play();\n                this.scene.setBgmVolume(0);\n            }\n\n            if (this.musicIndex === 1 && !Dance.raindance_music.isPlaying()) {\n                Dance.raindance_music.setVolume(0.8);\n                Dance.raindance_music.play();\n                this.scene.setBgmVolume(0);\n            }\n        }\n    }\n\n    public resetMusic(): void {\n        Dance.raindance_music.stop();\n        Dance.treedance_music.stop();\n        this.scene.resetMusicVolumes();\n    }\n\n    public addDanceToRenderQueue(): void {\n        this.scene.renderer.add({\n            type: RenderingType.DANCE,\n            layer: RenderingLayer.UI,\n            dance: this\n        });\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const controller: ControllerSpriteMap = ControllerManager.getInstance().controllerSprite;\n        ctx.save();\n        ctx.translate(this.x, -this.y);\n\n        // Key Bar\n        const w = 100;\n        const h = 18;\n        const w2 = w / 2;\n        const h2 = h / 2;\n\n        ctx.drawImage(Dance.bar, Dance.bar.width / -2, 1 + Dance.bar.height / -2);\n\n        // Feedback\n        if (this.progress - this.lastMistake < 1) {\n            ctx.fillStyle = \"red\";\n            ctx.globalAlpha = (1 - this.progress + this.lastMistake) * 0.6;\n            ctx.fillRect(-w2 + 2, -h2 + 1, w - 4, h);\n        }\n\n        if (this.progress - this.lastSuccess < 1) {\n            ctx.fillStyle = \"green\";\n            ctx.globalAlpha = (1 - this.progress + this.lastSuccess) * 0.1;\n            ctx.fillRect(-w2 + 2, -h2 + 1, w - 4, h);\n        }\n\n        // Upcoming keys\n        ctx.globalAlpha = 1;\n        ctx.textAlign = \"center\";\n        const sweetX = w2 - 16;\n        const y1 = -8;\n        const y2 = 1;\n        ctx.fillStyle = \"black\";\n\n        for (let i = Math.floor(this.progress) - 2; i < this.progress + 8; i++) {\n            const keys = this.keys[i];\n\n            if (keys) {\n                const diff = i - this.progress;\n                const x = sweetX - diff * 20 - 6;\n                const xp = (x - (-w2)) / w;\n                const alpha = this.alphaCurve.get(xp);\n                ctx.globalAlpha = alpha;\n\n                if (keys.includes(\"1\")) {\n                    ctx.strokeStyle = \"#ff8010\";\n\n                    if (this.performance[i][\"1\"] != null) {\n                        ctx.fillStyle = this.performance[i][\"1\"] ? \"#70F070\" : \"#F06060\";\n                        ctx.fillRect(x - 4, y1, 9, 9);\n                    } else {\n                        Dance.keys.drawTag(\n                            ctx,\n                            `${controller}-dance1`,\n                            x + Dance.keys.width / -2, y1\n                        );\n                    }\n                }\n\n                if (keys.includes(\"2\")) {\n                    ctx.strokeStyle = \"blue\";\n\n                    if (this.performance[i][\"2\"] != null) {\n                        ctx.fillStyle = this.performance[i][\"2\"] ? \"#70F070\" : \"#F06060\";\n                        ctx.fillRect(x - 4, y2, 9, 9);\n                    } else {\n                        Dance.keys.drawTag(\n                            ctx,\n                            `${controller}-dance2`,\n                            x + Dance.keys.width / -2, y2\n                        );\n                    }\n                }\n            }\n        }\n\n        // Sweet spot\n        ctx.globalAlpha = 1;\n        ctx.drawImage(Dance.indicator, sweetX - 8, 1 + Dance.indicator.height / -2);\n        ctx.drawImage(Dance.indicator, sweetX + 4, 1 + Dance.indicator.height / -2);\n        ctx.restore();\n    }\n}\n","import { Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { RenderingLayer } from \"./Renderer\";\nimport { type GameScene } from \"./scenes/GameScene\";\n\nexport class DialoguePrompt {\n    @asset(\"sprites/dialogue.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    private readonly scene: GameScene;\n    private x: number;\n    private y: number;\n    private timeAlive = 0;\n    private readonly floatAmount = 2;\n    private readonly floatSpeed = 5;\n\n    public constructor(scene: GameScene, x: number, y: number) {\n        this.scene = scene;\n        this.x = x;\n        this.y = y;\n    }\n\n    public draw(): void {\n        const floatOffsetY = Math.sin(this.timeAlive * this.floatSpeed) * this.floatAmount;\n\n        this.scene.renderer.addAseprite(\n            DialoguePrompt.sprite,\n            \"idle\",\n            this.x, this.y - floatOffsetY,\n            RenderingLayer.ENTITIES\n        );\n    }\n\n    public update(dt: number, anchorX: number, anchorY: number): void {\n        this.timeAlive += dt;\n        this.x = anchorX;\n        this.y = anchorY;\n    }\n}\n","import { FullscreenManager } from \"./display/FullscreenManager\";\nimport { Signal } from \"./Signal\";\n\nexport enum RenderMode {\n    PIXEL_IMPERFECT = \"pixel-imperfect\",\n    PIXEL_PERFECT = \"pixel-perfect\",\n    NATIVE = \"native\"\n}\n\nexport const DEFAULT_RENDER_MODE = RenderMode.PIXEL_IMPERFECT;\n\nconst PREFERENCES_DISPLAY_RENDER_MODE = \"display.renderMode\";\n\nclass DisplayPreferencesStore {\n    public constructor() {\n        if (window.localStorage.getItem(PREFERENCES_DISPLAY_RENDER_MODE) == null) {\n            this.renderMode = DEFAULT_RENDER_MODE;\n        }\n    }\n\n    public get renderMode(): RenderMode {\n        return (window.localStorage.getItem(PREFERENCES_DISPLAY_RENDER_MODE) as RenderMode ?? DEFAULT_RENDER_MODE);\n    }\n\n    public set renderMode(value: RenderMode) {\n        window.localStorage.setItem(PREFERENCES_DISPLAY_RENDER_MODE, value);\n    }\n}\n\nexport class DisplayManager {\n    static readonly #INSTANCE: DisplayManager = new DisplayManager(FullscreenManager.getInstance());\n    readonly #fullscreenManager: FullscreenManager;\n    readonly #displayPreferencesStore = new DisplayPreferencesStore();\n\n    public readonly onChange = new Signal();\n\n    public static getInstance(): DisplayManager {\n        return DisplayManager.#INSTANCE;\n    }\n\n    public constructor(fullscreenPreferencesStore: FullscreenManager) {\n        this.#fullscreenManager = fullscreenPreferencesStore;\n    }\n\n    public async setFullscreenEnabled(fullscreenEnabled: boolean): Promise<void> {\n        return this.#fullscreenManager.setEnabled(fullscreenEnabled);\n    }\n\n    public async isFullscreenEnabled(): Promise<boolean> {\n        return this.#fullscreenManager.isEnabled();\n    }\n\n    public setRenderMode(renderMode: RenderMode): void {\n        this.#displayPreferencesStore.renderMode = renderMode;\n        this.onChange.emit();\n    }\n\n    public getRenderMode(): RenderMode {\n        return this.#displayPreferencesStore.renderMode;\n    }\n}\n","import { Animator } from \"./Animator\";\nimport { type GameObjectProperties } from \"./MapInfo\";\nimport { type GameObject } from \"./scenes/GameObject\";\nimport { type GameScene } from \"./scenes/GameScene\";\n\nexport interface EntityDistance {\n    source: Entity;\n    target: Entity;\n    distance: number;\n}\n\nexport type Bounds = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n};\n\ntype EntityConstructor = new (args: EntityArgs) => Entity;\n\nconst entities = new Map<string, EntityConstructor>();\n\nexport function entity(name: string): (target: EntityConstructor) => void {\n    return (type: EntityConstructor) => {\n        entities.set(name, type);\n    };\n}\n\nexport function createEntity(name: string, args: EntityArgs): Entity {\n    const constructor = entities.get(name);\n\n    if (!constructor) {\n        throw new Error(\"Entity not found: \" + name);\n    }\n\n    return new constructor(args);\n}\n\nexport interface EntityArgs {\n    scene: GameScene;\n    x: number;\n    y: number;\n    width?: number;\n    height?: number;\n    isTrigger?: boolean;\n    properties?: GameObjectProperties;\n}\n\nexport abstract class Entity implements GameObject {\n    protected timeAlive = 0;\n    protected animator = new Animator(this);\n    public readonly scene: GameScene;\n    public x: number;\n    public y: number;\n    public width: number;\n    public height: number;\n    public isTrigger: boolean;\n\n    public constructor({ scene, x, y, width = 0, height = 0, isTrigger = true }: EntityArgs) {\n        this.scene = scene;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.isTrigger = isTrigger;\n    }\n\n    public abstract draw(ctx: CanvasRenderingContext2D): void;\n\n    public update(dt: number): void {\n        this.timeAlive += dt;\n    }\n\n    public distanceTo(entity: Entity): number {\n        const a = this.x - entity.x;\n        const b = this.y - entity.y;\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    public get distanceToPlayer(): number {\n        return this.distanceTo(this.scene.player);\n    }\n\n    protected getClosestEntityInRange(range: number): Entity | null {\n        const sortedEntityDistances = this.getEntitiesInRange(range).sort(\n            (a, b ) => { return a.distance - b.distance; }\n        );\n\n        if (sortedEntityDistances[0] != null) {\n            return sortedEntityDistances[0].target;\n        } else {\n            return null;\n        }\n    }\n\n    protected getEntitiesInRange(range: number): EntityDistance[] {\n        const entitiesInRange: EntityDistance[] = [];\n\n        this.scene.gameObjects.forEach(gameObject => {\n            if (gameObject instanceof Entity && gameObject !== this) {\n                const distance = this.distanceTo(gameObject);\n\n                if (distance < range) {\n                    entitiesInRange.push({source: this, target: gameObject, distance});\n                }\n            }\n        });\n\n        return entitiesInRange;\n    }\n\n    protected getClosestEntity(): Entity {\n        const entitiesInRange: EntityDistance[] = [];\n\n        this.scene.gameObjects.forEach(gameObject => {\n            if (gameObject instanceof Entity && gameObject !== this) {\n                const distance = this.distanceTo(gameObject);\n                entitiesInRange.push({source: this, target: gameObject, distance});\n            }\n        });\n\n        entitiesInRange.sort((a, b ) => { return a.distance - b.distance; });\n\n        return entitiesInRange[0].target;\n    }\n\n    public getBounds(margin = 0): Bounds {\n        const width = this.width + (margin * 2);\n        const height = this.height + (margin * 2);\n        const x = this.x - (this.width / 2) - margin;\n        const y = this.y - -this.height + margin;\n        return { x, y, width, height };\n    }\n\n    /**\n     * Checks wether this entity is currently colliding with the provided named trigger.\n     * @param triggerName the trigger name to check against.\n     */\n    protected isCollidingWithTrigger(triggerName: string): boolean {\n        const collisions = this.scene.world.getTriggerCollisions(this);\n\n        if (collisions.length === 0) {\n            return false;\n        }\n\n        return collisions.findIndex(o => o.name === triggerName) > -1;\n    }\n\n    public remove(): void {\n        this.scene.removeGameObject(this);\n    }\n}\n","import { type Aseprite } from \"./Aseprite\";\nimport { asset } from \"./Assets\";\nimport { type NPC } from \"./entities/NPC\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { type GameScene } from \"./scenes/GameScene\";\n\nexport enum FaceModes {\n    BLINK = \"blink\",\n    NEUTRAL = \"neutral\",\n    ANGRY = \"angry\",\n    BORED = \"bored\",\n    AMUSED = \"amused\",\n    SAD = \"sad\",\n    DISGUSTED = \"disgusted\"\n}\n\nexport enum EyeType {\n    STANDARD = 0,\n    TREE = 1,\n    STONE = 2,\n    FLAMEBOY = 3,\n    STONEDISCIPLE = 4,\n    FLAMEBOY2 = 5,\n}\n\nexport class Face {\n    @asset([\n        \"sprites/eyes/standard.aseprite.json\",\n        \"sprites/eyes/tree.aseprite.json\",\n        \"sprites/eyes/stone.aseprite.json\",\n        \"sprites/eyes/flameboy.aseprite.json\",\n        \"sprites/eyes/stonedisciple.aseprite.json\",\n        \"sprites/eyes/flameboy2.aseprite.json\",\n    ])\n    private static readonly sprites: Aseprite[];\n\n    private mode = FaceModes.NEUTRAL;\n    private direction = 1; // 1 = right, -1 = left\n\n    public constructor(\n        private readonly scene: GameScene,\n        private readonly owner: NPC,\n        private readonly eyeType: EyeType,\n        private readonly offX = 0,\n        private offY = 20\n    ) {}\n\n    public setMode(mode: FaceModes): void {\n        this.mode = mode;\n    }\n\n    public setOffY(offY: number): void {\n        this.offY = offY;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const sprite = Face.sprites[this.eyeType];\n\n        this.scene.renderer.add({\n            type: RenderingType.ASEPRITE,\n            layer: RenderingLayer.ENTITIES,\n            asset: sprite,\n            scale: {\n                x: this.direction,\n                y: 1\n            },\n            translation: {\n                x: this.owner.x + this.offX,\n                y: -this.owner.y - this.offY\n            },\n            position: {\n                x: -sprite.width >> 1,\n                y: -sprite.height\n            },\n            animationTag: this.mode,\n            time: this.scene.gameTime * 1000\n        });\n    }\n\n    public toggleDirection(direction = this.direction > 0 ? -1 : 1): void {\n        if (direction !== this.direction) {\n            this.direction = direction;\n        }\n    }\n    public setDirection(direction: number): void {\n        this.direction = direction;\n    }\n}\n","import { asset } from \"./Assets\";\nimport { ColorGradient } from \"./ColorGradient\";\nimport { clamp, orientPow, rnd } from \"./util\";\n\nexport class FireGfx {\n    @asset(\"gradients/fire.png\", { map: (image: HTMLImageElement) => ColorGradient.fromImage(image) })\n    public static gradient: ColorGradient;\n\n    private readonly canvas: HTMLCanvasElement;\n    private readonly context: CanvasRenderingContext2D;\n    private readonly data: number[][];\n    private readonly decayData: number[][];\n    private readonly imageData: ImageData;\n    private returnColor: number[] = [0, 0, 0, 255];\n    private bottomLine: number[] = [];\n    private nextUpdate = -Infinity;\n    private age = 0;\n    private startTime = 0;\n\n    public constructor(\n        private readonly w = 48,\n        private readonly h = 64,\n        private readonly coneShaped = true,\n        private readonly updateMs = 33\n    ) {\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = this.w;\n        this.canvas.height = this.h;\n        this.context = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n        this.imageData = this.context.getImageData(0, 0, this.w, this.h);\n        this.data = [];\n        this.decayData = [];\n\n        this.init();\n    }\n\n    private init(): void {\n        this.age = 0;\n        this.nextUpdate = -Infinity;\n        this.startTime = Date.now();\n\n        const decay = this.decayData;\n        const data = this.data;\n\n        for (let y = 0; y < this.h; y++) {\n            const row: number[] = data[y] = [];\n            const decayRow: number[] = decay[y] = [];\n            const yrel = y / (this.h - 1);\n\n            for (let x = 0; x < this.w; x++) {\n                row[x] = 0;\n                decayRow[x] = this.getDecay(x / (this.w - 1), yrel);\n            }\n        }\n\n        const bottom = data[this.h - 1];\n\n        for (let x = 0; x < this.w; x++) {\n            const xrel = x / (this.w - 1);\n            const stuffedXrel = this.coneShaped ? clamp(2 * xrel - 0.5, 0, 1) : xrel;\n            const smooth = 0.5 - 0.5 * Math.cos(2 * Math.PI * stuffedXrel);\n            bottom[x] = 1.25 * Math.pow(smooth, 0.5);\n        }\n\n        this.bottomLine = bottom.slice();\n    }\n\n    private getDecay(xrel: number, yrel: number): number {\n        if (xrel > 0.5) {\n            xrel = 1 - xrel;\n        }\n\n        if (this.coneShaped) {\n            yrel = 1.2 * yrel;\n\n            if (yrel > 1) {\n                return 0.02;\n            }\n        }\n\n        return 0.02 + (0.5 - xrel) * 0.1 + Math.pow(1 - yrel, 8);\n    }\n\n    public update(): void {\n        const t = Date.now();\n        this.age = t - this.startTime;\n\n        if (t >= this.nextUpdate) {\n            this.nextUpdate = t + this.updateMs;\n            this.updateStep();\n            this.render();\n        }\n    }\n\n    private updateStep(): void {\n        const data = this.data;\n        let fromRow = data[0];\n        let fromX = 0, toCenter = 0;\n        let  toCenter1 = 1;\n        const midX = (this.w - 1) * 0.5;\n        const yThreshold = this.coneShaped ? this.h * 0.8 : Infinity;\n\n        // Let all fire rows move upward, so update rows from top to bottom\n        for (let y = 0; y < this.h - 1; y++) {\n            const row = fromRow, decayRow = this.decayData[y];\n            fromRow = data[y + 1];\n\n            if (y > yThreshold) {\n                const yp = (y - yThreshold) / (this.h - yThreshold);\n                toCenter = 0.15 * yp * yp;\n                toCenter1 = 1 - toCenter;\n            }\n\n            for (let x = 0; x < this.w; x++) {\n                fromX = clamp(x + rnd(-1, 1) * rnd(), 0.3, this.w - 1.3);\n\n                if (toCenter) {\n                    fromX = toCenter * midX + toCenter1 * fromX;\n                }\n\n                const fromX1 = Math.floor(fromX), fx = fromX - fromX1;\n                const v = fx * fromRow[fromX1 + 1] + (1 - fx) * fromRow[fromX1] - decayRow[x] + rnd(-0.03, 0.02);\n                row[x] = clamp(v, 0, Infinity);\n            }\n        }\n\n        // Bottom line always stays mostly the same, only minor variations\n        const row = data[this.h - 1];\n        const t = this.age * 6 / 1000;\n        const skew = 0.5 * orientPow(Math.sin(t) * Math.sin(t * 0.353) * Math.sin(t * 0.764)\n            * Math.sin(t * 0.5433) * Math.sin(t * 1.634) * Math.sin(t * 1.342), 1.5);\n        const exponent = (skew > 0) ? 1 + skew : 1 / (1 - skew);\n\n        for (let x = 0; x < this.w; x++) {\n            const f = 1.2 + (0.8 * Math.sin(t) * Math.sin(0.1 * x * t) * Math.sin(-0.07 * x * t)) ** 2;\n            const baseX = Math.floor((this.w - 1) * (x / (this.w - 1)) ** exponent);\n            row[x] = this.bottomLine[baseX] * f;\n        }\n    }\n\n    private render(): void {\n        const pixels = this.imageData.data;\n        const data = this.data;\n        let p = 0, col = [0];\n\n        for (let y = 0; y < this.h; y++) {\n            const row = data[y];\n\n            for (let x = 0; x < this.w; x++) {\n                col = this.valueToColor(row[x]);\n                pixels[p++] = col[0];\n                pixels[p++] = col[1];\n                pixels[p++] = col[2];\n                pixels[p++] = col[3];\n            }\n        }\n\n        this.context.putImageData(this.imageData, 0, 0);\n    }\n\n    public valueToColor(v: number): number[] {\n        return FireGfx.gradient.get(clamp(v, 0, 1));\n    }\n\n    public oldValueToColor(v: number): number[] {\n        v = clamp(v, 0, 1);\n        const v255 = 255 * v;\n        this.returnColor[0] = 255;\n        this.returnColor[1] = v255;\n        this.returnColor[2] = v255 * v;\n        this.returnColor[3] = v255;\n\n        return this.returnColor;\n    }\n\n    public getImage(): HTMLCanvasElement {\n        return this.canvas;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, x = 0, y = 0): void {\n        const img = this.getImage();\n        ctx.drawImage(img, x - img.width / 2, -y - img.height);\n    }\n}\n","import { GAME_CANVAS_HEIGHT, GAME_CANVAS_WIDTH } from \"../shared/constants\";\nimport { Assets } from \"./Assets\";\nimport { AudioManager } from \"./audio/AudioManager\";\nimport { Campaign } from \"./Campaign\";\nimport { CharacterSounds } from \"./CharacterSounds\";\nimport { FullscreenManager } from \"./display/FullscreenManager\";\nimport { DisplayManager, RenderMode } from \"./DisplayManager\";\nimport { getGameCanvas, getRenderingContext } from \"./graphics\";\nimport { ControllerManager } from \"./input/ControllerManager\";\nimport { GamepadInput } from \"./input/GamepadInput\";\nimport { Keyboard } from \"./input/Keyboard\";\nimport { Scenes } from \"./Scenes\";\nimport { SteamworksApi } from \"./steamworks/SteamworksApi\";\nimport { clamp } from \"./util\";\n\n/**\n * Max time delta (in s). If game freezes for a few seconds for whatever reason, we don't want\n * updates to jump too much.\n */\nconst MAX_DT = 0.1;\n\n/** Number of seconds the mouse is visible after moving it */\nconst MOUSE_TIMEOUT = 2.0;\n\nexport abstract class Game {\n    public readonly controllerManager = ControllerManager.getInstance();\n    public readonly keyboard = new Keyboard();\n    public readonly gamepad = new GamepadInput();\n    public readonly scenes = new Scenes(this);\n    public readonly assets = new Assets();\n    public readonly campaign = new Campaign(this);\n    public readonly characterSounds = new CharacterSounds();\n\n    public backgroundColor: string = \"black\";\n\n    public canvas: HTMLCanvasElement;\n    private readonly ctx: CanvasRenderingContext2D;\n    private readonly gameLoopCallback = this.gameLoop.bind(this);\n    private gameLoopId: number | null = null;\n    private lastUpdateTime: number = performance.now();\n    private mouseTimeout: number = MOUSE_TIMEOUT;\n\n    readonly #displayManager: DisplayManager;\n    readonly #steamworksApi: SteamworksApi | null;\n    readonly #audioManager: AudioManager;\n    readonly #fullscreenManager: FullscreenManager;\n\n    public constructor(public readonly width: number = GAME_CANVAS_WIDTH, public readonly height: number = GAME_CANVAS_HEIGHT) {\n        const canvas = this.canvas = getGameCanvas(width, height);\n        this.#displayManager = DisplayManager.getInstance();\n        this.#displayManager.onChange.connect(this.updateCanvas, this);\n        this.#steamworksApi = SteamworksApi.getInstance();\n        this.#audioManager = AudioManager.getInstance();\n        this.#fullscreenManager = FullscreenManager.getInstance();\n        // Desynchronized sounds like a good idea but unfortunately it prevents pixelated graphics\n        // on some systems (Chrome+Windows+NVidia for example which forces bilinear filtering). So\n        // it is deactivated here.\n        this.ctx = getRenderingContext(canvas, \"2d\", { alpha: false, desynchronized: false });\n        const style = canvas.style;\n        style.position = \"absolute\";\n        style.margin = \"auto\";\n        style.left = style.top = style.right = style.bottom = \"0\";\n        document.body.appendChild(this.canvas);\n        this.updateCanvas();\n        window.addEventListener(\"resize\", () => this.updateCanvas());\n        window.addEventListener(\"pointermove\", () => this.mouseMoved());\n\n        // Use Alt+Enter to toggle fullscreen mode.\n        window.addEventListener(\"keydown\", async (event) => {\n            if (event.altKey && event.key === \"Enter\") {\n                const lockingEnabled = \"keyboard\" in navigator && \"lock\" in navigator.keyboard && typeof navigator.keyboard.lock === \"function\";\n                // If the browser is in full screen mode AND fullscreen has been triggered by our own keyboard shortcut...\n                if (window.matchMedia(\"(display-mode: fullscreen)\").matches && document.fullscreenElement != null) {\n                    if (lockingEnabled) {\n                        navigator.keyboard.unlock();\n                    }\n                    await document.exitFullscreen();\n                } else {\n                    if (lockingEnabled) {\n                        await navigator.keyboard.lock([\"Escape\"]);\n                    }\n                    await document.body.requestFullscreen();\n                }\n            }\n        });\n\n    }\n\n    public get displayManager(): DisplayManager {\n        return this.#displayManager;\n    }\n\n    public get steamworks(): SteamworksApi | null {\n        return this.#steamworksApi;\n    }\n\n    public get audioManager(): AudioManager {\n        return this.#audioManager;\n    }\n\n    public get fullscreenManager(): FullscreenManager {\n        return this.#fullscreenManager;\n    }\n\n    private mouseMoved(): void {\n        this.canvas.style.cursor = \"default\";\n        this.mouseTimeout = MOUSE_TIMEOUT;\n    }\n\n    private updateMouse(dt: number): void {\n        if (this.mouseTimeout > 0) {\n            this.mouseTimeout = Math.max(0, this.mouseTimeout - dt);\n\n            if (this.mouseTimeout === 0) {\n                this.canvas.style.cursor = \"none\";\n            }\n        }\n    }\n\n    private updateCanvas(): void {\n        const { width, height } = this;\n        const renderMode = this.displayManager.getRenderMode();\n\n        let scale = Math.min(window.innerWidth / width, window.innerHeight / height);\n        if (renderMode === RenderMode.PIXEL_PERFECT) {\n            scale = Math.max(1, Math.floor(scale));\n        }\n        const canvas = this.canvas;\n        const style = canvas.style;\n        if (renderMode === RenderMode.NATIVE) {\n            const dpr = window.devicePixelRatio;\n            canvas.width = width * scale * dpr;\n            canvas.height = height * scale * dpr;\n            style.imageRendering = \"auto\";\n        } else {\n            canvas.width = width;\n            canvas.height = height;\n            style.imageRendering = \"pixelated\";\n            style.imageRendering = \"crisp-edges\";\n        }\n        style.width = Math.round(width * scale) + \"px\";\n        style.height = Math.round(height * scale) + \"px\";\n    }\n\n    private gameLoop(): void {\n        const currentUpdateTime = performance.now();\n        const dt = clamp((currentUpdateTime - this.lastUpdateTime) / 1000, 0, MAX_DT);\n        this.update(dt);\n        this.lastUpdateTime = currentUpdateTime;\n        const renderMode = this.displayManager.getRenderMode();\n\n        const { ctx, width, height } = this;\n        ctx.save();\n        if (renderMode === RenderMode.NATIVE) {\n            ctx.scale(ctx.canvas.width / width, ctx.canvas.height / height);\n            ctx.imageSmoothingEnabled = true;\n            ctx.imageSmoothingQuality = \"high\";\n        } else {\n            ctx.imageSmoothingEnabled = false;\n        }\n        ctx.fillStyle = this.backgroundColor;\n        ctx.fillRect(0, 0, width, height);\n        this.draw(ctx, width, height);\n        ctx.restore();\n\n        this.nextFrame();\n    }\n\n    private nextFrame(): void {\n        this.gameLoopId = requestAnimationFrame(this.gameLoopCallback);\n    }\n\n    protected update(dt: number): void {\n        this.gamepad.update();\n        this.updateMouse(dt);\n        this.scenes.update(dt);\n    }\n\n    protected draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        this.scenes.draw(ctx, width, height);\n    }\n\n    public start(): void {\n        if (this.gameLoopId == null) {\n            this.lastUpdateTime = performance.now();\n            this.nextFrame();\n        }\n    }\n\n    public stop(): void {\n        if (this.gameLoopId != null) {\n            cancelAnimationFrame(this.gameLoopId);\n            this.gameLoopId = null;\n        }\n    }\n}\n","import { type QuestKey } from \"./Quests\";\n\nenum GlobalStateKey {\n        BEAT_GAME_ONCE = \"beatGame\",\n    ACHIEVED_ENDINGS = \"achievedEndings\"\n}\n\nexport class GlobalState {\n    private static getParsedValueByKey<T>(key: GlobalStateKey, fallback: T): T {\n        const serialized = localStorage.getItem(key);\n        if (serialized != null) {\n            try {\n                const parsed = JSON.parse(serialized) as T;\n                return parsed ?? fallback;\n            } catch (e) {\n                console.error(e);\n                return fallback;\n            }\n        } else {\n            return fallback;\n        }\n    }\n\n    private static setKeyValuePair<T>(key: GlobalStateKey, value: T): void {\n        try {\n            const serialized = JSON.stringify(value);\n            localStorage.setItem(key, serialized);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    public static getHasBeatenGame(): boolean {\n        return GlobalState.getParsedValueByKey<boolean>(GlobalStateKey.BEAT_GAME_ONCE, false);\n    }\n\n    public static setHasBeatenGame(): void {\n        GlobalState.setKeyValuePair<boolean>(GlobalStateKey.BEAT_GAME_ONCE, true);\n    }\n\n    public static getAchievedEndings(): QuestKey[] {\n        return GlobalState.getParsedValueByKey<QuestKey[]>(GlobalStateKey.ACHIEVED_ENDINGS, []);\n    }\n\n    public static setAchievedEnding(questKey: QuestKey): void {\n        const achievedEndings = GlobalState.getParsedValueByKey<QuestKey[]>(GlobalStateKey.ACHIEVED_ENDINGS, []);\n        if (!achievedEndings.includes(questKey)) {\n            achievedEndings.push(questKey);\n            GlobalState.setKeyValuePair<QuestKey[]>(GlobalStateKey.ACHIEVED_ENDINGS, achievedEndings);\n        }\n    }\n}\n","import { isObjectGroup, type MapObject } from \"@kayahr/tiled\";\n\nimport json from \"../../assets/maps/level.map.json\";\n\nexport enum MapObjectType {\n    ENTITY = \"entity\",\n    TRIGGER = \"trigger\",\n    POINTER = \"pointer\",\n    GATE = \"gate\",\n    BOUNDS = \"bounds\",\n    SOUND = \"sound\"\n}\nexport interface GameObjectProperties {\n    velocity?: number;\n    target?: string;\n    duration?: number;\n    teleportY?: number;\n    disableParticles?: boolean;\n    setGlobalKey?: string;\n    setGlobalVal?: string;\n    setDialogEntity?: string;\n    setDialogValue?: string;\n    content?: string;\n    enterSound?: string;\n    exitFadeTime?: number;\n    exitSleepTime?: number;\n    exitSound?: string;\n    bgm?: string;\n    disabled?: boolean;\n    identifier?: string;\n    intensity?: number;\n    volume?: number;\n    sound?: string;\n    col?: number;\n    row?: number;\n    newGamePlus?: boolean;\n}\n\nexport interface GameObjectInfo {\n    x: number;\n    y: number;\n    name: string;\n    type: string;\n    width: number;\n    height: number;\n    properties: GameObjectProperties;\n}\n\nexport class MapInfo {\n    private getObjects(type?: string): MapObject[] {\n        const objects = json.layers.filter(isObjectGroup).flatMap(layer => layer.objects);\n        if (type == null) {\n            return objects;\n        }\n        return objects.filter(object =>object.type === type);\n    }\n\n    private getGameObjectInfos(type: MapObjectType): GameObjectInfo[] {\n        const mapHeight = json.height * json.tileheight;\n        return this.getObjects(type).map(object => ({\n            name: object.name ?? \"\",\n            x: object.x,\n            y: mapHeight - object.y,\n            type: object.type ?? \"\",\n            width: object.width ?? 0,\n            height: object.height ?? 0,\n            properties: (object.properties ?? []).reduce((props, property) => {\n                props[property.name] = property.value;\n                return props;\n            }, {} as Record<string, unknown>) as unknown as GameObjectProperties\n        }));\n    }\n\n    public getEntities(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.ENTITY);\n    }\n\n    public getSounds(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.SOUND);\n    }\n\n    public getPointers(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.POINTER);\n    }\n\n    public getTriggerObjects(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.TRIGGER);\n    }\n\n    public getBoundObjects(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.BOUNDS);\n    }\n\n    public getGateObjects(): GameObjectInfo[] {\n        return this.getGameObjectInfos(MapObjectType.GATE);\n    }\n}\n","import { asset } from \"./Assets\";\nimport { Sound } from \"./audio/Sound\";\nimport { type BitmapFont } from \"./BitmapFont\";\nimport { type FriendlyFire } from \"./FriendlyFire\";\nimport { SceneNode, type SceneNodeArgs } from \"./scene/SceneNode\";\nimport { Signal } from \"./Signal\";\n\nexport enum MenuAlignment { LEFT, CENTER, RIGHT }\n\n/**\n * Simple MenuItem Class for usage in a MenuList.\n * Currently, each item is only rendered as simple text. The focused state is visualized via an\n * additional `►` character as prefix. The item instances don't need to be manually drawn, since the\n * MenuList class' draw method will take care of it.\n */\nexport class MenuItem<T = null> {\n    public id: string;\n    public label: string;\n    protected font: BitmapFont;\n    protected color: \"black\" | \"white\";\n    public x: number;\n    public y: number;\n    public enabled: boolean = true;\n    public focused: boolean;\n    public data: T;\n\n    @asset(\"images/menu_selector.png\")\n    protected static selectorImage: HTMLImageElement;\n\n    public constructor(id: string, label: string, font: BitmapFont, color: \"black\" | \"white\", x: number, y: number, data: T | null = null ) {\n        this.id = id;\n        this.label = label;\n        this.font = font;\n        this.color = color;\n        this.x = x;\n        this.y = y;\n        this.focused = false;\n        this.data = data as T;\n    }\n\n    /**\n     * Draw method for a single ListItem. Is automatically called when the parent\n     * MenuList's draw method is called.\n     *\n     * @param ctx CanvasRenderingContext2D\n     */\n    public draw(ctx: CanvasRenderingContext2D, align: MenuAlignment): void {\n        ctx.save();\n        const alpha = this.enabled ? 1 : 0.35;\n\n        let x = this.x;\n        const y = this.y;\n\n        const text = this.label;\n        const width = this.font.measureText(text).width;\n\n\n        if (align === MenuAlignment.CENTER) {\n            x -= Math.round(width / 2);\n        }\n\n        this.font.drawText(ctx, text, x, y, this.color, 0, alpha);\n\n        if (this.focused) {\n            ctx.drawImage(MenuItem.selectorImage, x - 13, y + 2);\n        }\n\n        ctx.restore();\n    }\n}\n\nexport type MenuItemParams<T = null> = {\n    id: string;\n    label: string;\n    font: BitmapFont;\n    color: \"black\" | \"white\";\n    x: number;\n    y: number;\n    enabled: boolean;\n    data: T;\n};\n\nexport type SliderMenuItemParams<T> = MenuItemParams<T> & {\n    initialValue: number;\n    minValue: number;\n    maxValue: number;\n    increment: number;\n    rightActionCallback: (newValue: number, data: T) => void;\n    leftActionCallback: (newValue: number, data: T) => void;\n};\n\nexport class SliderMenuItem<T = null> extends MenuItem<T> {\n    private value: number;\n    private readonly minValue: number;\n    private readonly maxValue: number;\n    private readonly increment: number;\n    private readonly rightActionCallback: (newValue: number, data: T) => void;\n    private readonly leftActionCallback: (newValue: number, data: T) => void;\n\n    public constructor(params: SliderMenuItemParams<T>) {\n        super(params.id, params.label, params.font, params.color, params.x, params.y, params.data);\n        this.value = params.initialValue;\n        this.minValue = params.minValue;\n        this.maxValue = params.maxValue;\n        this.increment = params.increment;\n        this.rightActionCallback = params.rightActionCallback;\n        this.leftActionCallback = params.leftActionCallback;\n    }\n\n    public getValue(): number {\n        return this.value;\n    }\n\n    public setValue(value: number): void {\n        this.value = Math.min(this.maxValue, Math.max(this.minValue, value));\n    }\n\n    public increaseValue(): void {\n        this.setValue(this.value + this.increment);\n        this.rightActionCallback(this.value, this.data);\n    }\n\n    public decreaseValue(): void {\n        this.setValue(this.value - this.increment);\n        this.leftActionCallback(this.value, this.data);\n    }\n\n    public override draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        const alpha = this.enabled ? 1 : 0.35;\n        const x = this.x;\n        const y = this.y;\n\n        const text = this.label;\n        this.font.drawText(ctx, text, x, y, this.color, 0, alpha);\n\n        const valueText = `${this.getValue()} %`;\n        const valueWidth = this.font.measureText(valueText).width;\n        this.font.drawText(ctx, valueText, x + 250 - valueWidth, y, this.color, 0, alpha);\n\n        if (this.focused) {\n            ctx.drawImage(MenuItem.selectorImage, x - 13, y + 2);\n        }\n\n        ctx.restore();\n    }\n}\n\nexport type CheckboxMenuItemParams<T> = MenuItemParams<T> & {\n    initialValue: boolean;\n    actionCallback: (newValue: boolean, data: T) => void;\n};\n\nexport class CheckboxMenuItem<T = null> extends MenuItem<T> {\n    private value: boolean;\n    private readonly actionCallback: (newValue: boolean, data: T) => void;\n\n    public constructor(params: CheckboxMenuItemParams<T>) {\n        super(params.id, params.label, params.font, params.color, params.x, params.y, params.data);\n        this.value = params.initialValue;\n        this.actionCallback = params.actionCallback;\n    }\n\n    public getValue(): boolean {\n        return this.value;\n    }\n\n    public setValue(value: boolean): void {\n        this.value = value;\n        this.actionCallback(this.value, this.data);\n    }\n\n    public toggleValue(): void {\n        this.setValue(!this.getValue());\n    }\n\n    public override draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        const alpha = this.enabled ? 1 : 0.35;\n        const x = this.x;\n        const y = this.y;\n\n        const text = this.label;\n        this.font.drawText(ctx, text, x, y, this.color, 0, alpha);\n\n        const valueText = this.value ? \"On\" : \"Off\";\n        const valueWidth = this.font.measureText(valueText).width;\n        this.font.drawText(ctx, valueText, x + 250 - valueWidth, y, this.color, 0, alpha);\n\n        if (this.focused) {\n            ctx.drawImage(MenuItem.selectorImage, x - 13, y + 2);\n        }\n\n        ctx.restore();\n    }\n}\n\nexport type SelectMenuItemParams<V extends string, T> = MenuItemParams<T> & {\n    values: V[];\n    valueLabels: Record<V, string>;\n    initialValue: V;\n    actionCallback: (newValue: V, data: T) => void;\n};\n\nexport class SelectMenuItem<V extends string, T = null> extends MenuItem<T> {\n    private readonly values: V[];\n    private readonly valueLabels: Record<V, string>;\n    private value: V;\n    private readonly actionCallback: (newValue: V, data: T) => void;\n\n    public constructor(params: SelectMenuItemParams<V, T>) {\n        super(params.id, params.label, params.font, params.color, params.x, params.y, params.data);\n        this.values = params.values;\n        this.value = params.initialValue;\n        this.valueLabels = params.valueLabels;\n        this.actionCallback = params.actionCallback;\n    }\n\n    public getValue(): V {\n        return this.value;\n    }\n\n    public setValue(value: V): void {\n        this.value = value;\n        this.actionCallback(this.value, this.data);\n    }\n\n    public cycleValue(): void {\n        const currentIndex = this.values.indexOf(this.value);\n        this.setValue(this.values[currentIndex < this.values.length - 1 ? currentIndex + 1 : 0]);\n    }\n\n    public nextValue(): void {\n        const currentIndex = this.values.indexOf(this.value);\n        if (currentIndex < this.values.length - 1) {\n            this.setValue(this.values[currentIndex + 1]);\n        }\n    }\n\n    public previousValue(): void {\n        const currentIndex = this.values.indexOf(this.value);\n        if (currentIndex > 0) {\n            this.setValue(this.values[currentIndex - 1]);\n        }\n    }\n\n    public override draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        const alpha = this.enabled ? 1 : 0.35;\n        const x = this.x;\n        const y = this.y;\n\n        const text = this.label;\n        this.font.drawText(ctx, text, x, y, this.color, 0, alpha);\n\n        const valueText = this.valueLabels[this.value] ?? this.value;\n        const valueWidth = this.font.measureText(valueText).width;\n        this.font.drawText(ctx, valueText, x + 250 - valueWidth, y, this.color, 0, alpha);\n\n        if (this.focused) {\n            ctx.drawImage(MenuItem.selectorImage, x - 13, y + 2);\n        }\n\n        ctx.restore();\n    }\n}\n\nexport interface MenuListArgs extends SceneNodeArgs {\n    align?: MenuAlignment;\n}\n\n/**\n * A simple MenuList that can hold MenuItems and navigate them in two directions via methods. On\n * each navigational change, the new MenuItem is focused. When calling the `executeAction` method a\n * signal is emitted containing the focused MenuItem's ID. Disabled MenuItems will be skipped\n * automatically when navigating. The draw method of the list instance has to be called to have all\n * containing buttons be drawn automatically.\n */\nexport class MenuList extends SceneNode<FriendlyFire> {\n    @asset(\"sounds/interface/click.mp3\")\n    public static click: Sound;\n    @asset(\"sounds/interface/confirm.mp3\")\n    public static confirm: Sound;\n    @asset(\"sounds/interface/select.mp3\")\n    public static select: Sound;\n    @asset(\"sounds/interface/bass.mp3\")\n    public static pause: Sound;\n\n    private readonly align: MenuAlignment;\n    private items: MenuItem<unknown>[] = [];\n    public onActivated = new Signal<string>();\n    public onRightAction = new Signal<string>();\n    public onLeftAction = new Signal<string>();\n\n    public constructor({ align = MenuAlignment.LEFT, ...args }: MenuListArgs = {}) {\n        super(args);\n        this.align = align;\n    }\n\n    /**\n     * Adds an arbitrary number of menu items to the menu list\n     * The first available menu item will be focused automatically\n     * @param items\n     */\n    public addItems(...items: MenuItem[]): void {\n        this.items.push(...items);\n        this.focusFirstItem();\n    }\n\n    /**\n     * Clears all menu items from the menu instance\n     */\n    public reset(): void {\n        this.items = [];\n    }\n\n    /**\n     * Sets an arbitrary number of menu items to the menu list and overrides any previously added\n     * items. The first available menu item will be focused automatically.\n     */\n    public setItems(...items: MenuItem<unknown>[]): this {\n        this.items = [...items];\n        this.focusFirstItem();\n        return this;\n    }\n\n    /**\n     * Finds and focuses the first available item if no item was focused before.: void\n     */\n    private focusFirstItem(): void {\n        if (!this.getFocusedItem()) {\n            const index = this.items.findIndex(item => item.enabled);\n\n            if (index > -1) {\n                this.items[index].focused = true;\n            }\n        }\n    }\n\n    private getFocusedItem(): MenuItem<unknown> | undefined {\n        return this.items.find(item => item.focused);\n    }\n\n    private getFocusedItemIndex(): number {\n        return this.items.findIndex(item => item.focused);\n    }\n\n    private unfocusAllItems(): void {\n        this.items.forEach(item => { item.focused = false; });\n    }\n\n    private focusItem(item: MenuItem<unknown>): void {\n        this.unfocusAllItems();\n        item.focused = true;\n    }\n\n    /**\n     * Recursive method to focus the next item in the direction provided in the argument.\n     * @param currentIndex - The index of the currently focused item in the items array\n     * @param direction    - Direction in which the next item should be searched for.\n     *                       Either 1 (forwards) or -1 (backwards)\n     */\n    private findAndFocusNextItem(currentIndex: number, direction: -1 | 1): void {\n        const min = direction > 0 ? 0 : (this.items.length - 1);\n        const max = direction > 0 ? (this.items.length - 1) : 0;\n        const nextIndex = (currentIndex === max) ? min : currentIndex + direction;\n\n        const nextItem = this.items[nextIndex];\n\n        if (nextItem.enabled) {\n            this.focusItem(this.items[nextIndex]);\n        } else {\n            this.findAndFocusNextItem(nextIndex, direction);\n        }\n\n        MenuList.click.stop();\n        MenuList.click.play();\n    }\n\n    /**\n     * Method to navigate the focus of the menu list to the next item\n     */\n    public next(): void {\n        this.findAndFocusNextItem(this.getFocusedItemIndex(), 1);\n    }\n\n    /**\n     * Method to navigate the focus of the menu list to the previous item\n     */\n    public prev(): void {\n        this.findAndFocusNextItem(this.getFocusedItemIndex(), -1);\n    }\n\n    public executeAction(sound: Sound = MenuList.confirm): void {\n        const focusedButton = this.getFocusedItem();\n\n        if (focusedButton && focusedButton.enabled) {\n            sound.stop();\n            sound.play();\n            this.onActivated.emit(focusedButton.id);\n            if (focusedButton instanceof CheckboxMenuItem) {\n                focusedButton.toggleValue();\n            } else if (focusedButton instanceof SelectMenuItem) {\n                focusedButton.cycleValue();\n            }\n        }\n    }\n\n    public executeRightAction(sound: Sound = MenuList.click): void {\n        const focusedButton = this.getFocusedItem();\n\n        if (focusedButton && focusedButton.enabled) {\n            sound.stop();\n            sound.play();\n            this.onRightAction.emit(focusedButton.id);\n            if (focusedButton instanceof SliderMenuItem) {\n                focusedButton.increaseValue();\n            } else if (focusedButton instanceof SelectMenuItem) {\n                focusedButton.nextValue();\n            }\n        }\n    }\n\n    public executeLeftAction(sound: Sound = MenuList.click): void {\n        const focusedButton = this.getFocusedItem();\n\n        if (focusedButton && focusedButton.enabled) {\n            sound.stop();\n            sound.play();\n            this.onLeftAction.emit(focusedButton.id);\n            if (focusedButton instanceof SliderMenuItem) {\n                focusedButton.decreaseValue();\n            } else if (focusedButton instanceof SelectMenuItem) {\n                focusedButton.previousValue();\n            }\n        }\n    }\n\n    public override draw(ctx: CanvasRenderingContext2D): void {\n        this.items.forEach(item => {\n            item.draw(ctx, this.align);\n        });\n    }\n}\n","import { asset } from \"./Assets\";\nimport { Sound } from \"./audio/Sound\";\nimport { Conversation } from \"./Conversation\";\n\nconst AMOUNT_GATE_COLS = 3;\nconst AMOUNT_GATE_ROWS = 5;\n\nexport class MountainRiddle {\n    private attemptCount = 0;\n    private failed = false;\n    private cleared = false;\n    private solution: number[];\n\n    @asset(\"sounds/item/fanfare.mp3\")\n    private static readonly sound: Sound;\n\n    @asset(\"sounds/gate/wrong.ogg\")\n    public static wrong: Sound;\n\n    public constructor() {\n        this.solution = this.getRandomizedSolution();\n    }\n\n    private getRandomizedSolution(): number[] {\n        const solution: number[] = [];\n\n        for (let index = 0; index < AMOUNT_GATE_ROWS; index++) {\n            solution.push(Math.floor(Math.random() * Math.floor(AMOUNT_GATE_COLS)));\n        }\n\n        return solution;\n    }\n\n    public isCorrectGate(col: number, row: number): boolean {\n        return this.solution[row] === col;\n    }\n\n    public checkGate(col: number, row: number): void {\n        if (!this.failed && !this.cleared && !this.isCorrectGate(col, row)) {\n            this.failRiddle();\n        }\n    }\n\n    public wasAttempted(): boolean {\n        return this.attemptCount > 0;\n    }\n\n    public registerAttempt(): void {\n        this.attemptCount++;\n    }\n\n    public failRiddle(): void {\n        Conversation.setGlobal(\"gotTeleported\", \"true\");\n        this.failed = true;\n        this.registerAttempt();\n        MountainRiddle.wrong.play();\n    }\n\n    public isFailed(): boolean {\n        return this.failed;\n    }\n\n    public resetRiddle(): void {\n        if (this.failed && !this.cleared) {\n            this.solution = this.getRandomizedSolution();\n            this.failed = false;\n        }\n    }\n\n    public isCleared(): boolean {\n        return this.cleared;\n    }\n\n    public clearRiddle(): void {\n        if (!this.cleared) {\n            MountainRiddle.sound.play();\n            this.failed = false;\n            this.cleared = true;\n        }\n    }\n}\n","import { GRAVITY } from \"../shared/constants\";\nimport { Aseprite } from \"./Aseprite\";\nimport { type Vector2Like } from \"./graphics/Vector2\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { type GameScene } from \"./scenes/GameScene\";\n\ntype ParticleAppearance = string | HTMLImageElement | HTMLCanvasElement | Aseprite;\n\ntype NumberGenerator = () => number;\n\ntype VectorGenerator = () => Vector2Like;\n\ntype ParticleAppearanceGenerator = () => ParticleAppearance;\n\nexport interface ParticleEmitterArguments {\n    position: Vector2Like;\n    offset?: Vector2Like | VectorGenerator;\n    velocity?: Vector2Like | VectorGenerator;\n    color?: ParticleAppearance | ParticleAppearanceGenerator;\n    alpha?: number | NumberGenerator;\n    size?: number | NumberGenerator;\n    gravity?: Vector2Like | VectorGenerator;\n    lifetime?: number | NumberGenerator;\n    breakFactor?: number;\n    blendMode?: GlobalCompositeOperation;\n    alphaCurve?: ValueCurve;\n    sizeCurve?: ValueCurve;\n    angle?: number | NumberGenerator;\n    angleSpeed?: number | NumberGenerator;\n    renderingLayer?: RenderingLayer;\n    zIndex?: number;\n    update?: (p: Particle) => void;\n}\n\nexport class Particles {\n    private readonly scene: GameScene;\n    private readonly emitters: ParticleEmitter[] = [];\n\n    public constructor(scene: GameScene) {\n        this.scene = scene;\n    }\n\n    public update(dt: number): void {\n        this.emitters.forEach(emitter => emitter.update(dt));\n    }\n\n    public addEmittersToRenderingQueue(): void {\n        this.emitters.forEach(emitter => {\n            this.scene.renderer.add({\n                type: RenderingType.PARTICLE_EMITTER,\n                layer: emitter.renderingLayer,\n                zIndex: emitter.zIndex,\n                emitter\n            });\n        });\n    }\n\n    // Direct drawing of particles is deactivated since it's handled via rendering engine\n    public draw(ctx: CanvasRenderingContext2D): void {}\n\n    public addEmitter(emitter: ParticleEmitter): void {\n        this.emitters.push(emitter);\n    }\n\n    public dropEmitter(emitter: ParticleEmitter): boolean {\n        const index = this.emitters.indexOf(emitter);\n\n        if (index >= 0) {\n            this.emitters.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    public createEmitter(args: ParticleEmitterArguments): ParticleEmitter {\n        const emitter = new ParticleEmitter(args);\n        this.addEmitter(emitter);\n\n        return emitter;\n    }\n}\n\nexport class ParticleEmitter {\n    private particles: Particle[];\n    private x: number;\n    private y: number;\n    private readonly offsetGenerator: VectorGenerator;\n    private readonly velocityGenerator: VectorGenerator;\n    private readonly colorGenerator: ParticleAppearanceGenerator;\n    private readonly sizeGenerator: NumberGenerator;\n    private readonly gravityGenerator: VectorGenerator;\n    private readonly lifetimeGenerator: NumberGenerator;\n    private readonly alphaGenerator: NumberGenerator;\n    private readonly angleGenerator: NumberGenerator;\n    private readonly angleSpeedGenerator: NumberGenerator;\n    public gravity: Vector2Like;\n    public breakFactor: number;\n    private readonly blendMode: GlobalCompositeOperation;\n    public alphaCurve: ValueCurve;\n    public sizeCurve: ValueCurve;\n    public renderingLayer: RenderingLayer;\n    public zIndex: number;\n    private readonly updateMethod: ((p: Particle) => void) | undefined;\n\n    public constructor(args: ParticleEmitterArguments) {\n        this.particles = [];\n        this.x = args.position.x;\n        this.y = args.position.y;\n        this.offsetGenerator = toGenerator(args.offset ?? ({x: 0, y: 0}));\n        this.velocityGenerator = toGenerator(args.velocity ?? ({x: 0, y: 0}));\n        this.colorGenerator = toGenerator(args.color ?? \"white\");\n        this.alphaGenerator = toGenerator(args.alpha ?? 1);\n        this.sizeGenerator = toGenerator(args.size ?? 4);\n        this.gravityGenerator = toGenerator(args.gravity ?? {x: 0, y: GRAVITY});\n        this.lifetimeGenerator = toGenerator(args.lifetime ?? 5);\n        this.angleGenerator = toGenerator(args.angle ?? 0);\n        this.angleSpeedGenerator = toGenerator(args.angleSpeed ?? 0);\n        this.gravity = this.gravityGenerator();\n        this.breakFactor = args.breakFactor ?? 1;\n        this.blendMode = args.blendMode ?? \"source-over\";\n        this.alphaCurve = args.alphaCurve ?? valueCurves.constant;\n        this.sizeCurve = args.sizeCurve ?? valueCurves.constant;\n        this.renderingLayer = args.renderingLayer ?? RenderingLayer.PARTICLES;\n        this.zIndex = args.zIndex ?? 0;\n        this.updateMethod = args.update;\n\n        function toGenerator<tp>(obj: tp | (() => tp)): (() => tp) {\n            if (obj instanceof Function) {\n                return obj;\n            } else {\n                return () => obj;\n            }\n        }\n    }\n\n    public setPosition(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    public clear(): void {\n        this.particles = [];\n    }\n\n    public emit(count = 1): void {\n        for (let i = 0; i < count; i++) {\n            this.emitSingle();\n        }\n    }\n\n    public emitSingle(): Particle {\n        const v = this.velocityGenerator();\n        const off = this.offsetGenerator();\n\n        const particle = new Particle(\n            this,\n            this.x + off.x,\n            this.y + off.y,\n            v.x,\n            v.y,\n            this.angleGenerator(),\n            this.angleSpeedGenerator(),\n            this.colorGenerator(),\n            this.sizeGenerator(),\n            this.lifetimeGenerator(),\n            this.alphaGenerator()\n        );\n\n        this.particles.push(particle);\n\n        return particle;\n    }\n\n    public update(dt: number): void {\n        this.gravity = this.gravityGenerator();\n\n        for (let i = this.particles.length - 1; i >= 0; i--) {\n            if (this.particles[i].update(dt)) {\n                this.particles.splice(i, 1);\n            }\n        }\n\n        if (this.updateMethod) {\n            for (const p of this.particles) {\n                this.updateMethod(p);\n            }\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.globalCompositeOperation = this.blendMode;\n        this.particles.forEach(p => p.draw(ctx));\n        ctx.restore();\n    }\n}\n\nexport class Particle {\n    private readonly halfSize: number;\n    private readonly originalLifetime: number;\n    private progress: number = 0;\n\n    public constructor(\n        private readonly emitter: ParticleEmitter,\n        public x: number,\n        public y: number,\n        public vx = 0,\n        public vy = 0,\n        private angle = 0,\n        private readonly angleSpeed = 0,\n        private readonly imageOrColor: ParticleAppearance = \"white\",\n        public readonly size = 4,\n        private lifetime = 1,\n        private readonly alpha = 1\n    ) {\n        this.halfSize = this.size / 2;\n        this.originalLifetime = this.lifetime;\n        this.progress = 0;\n    }\n\n    public update(dt: number): boolean {\n        // Life\n        this.lifetime -= dt;\n\n        if (this.lifetime <= 0) {\n            // Tell parent that it may eliminate this particle\n            return true;\n        } else {\n            this.progress = 1 - (this.lifetime / this.originalLifetime);\n        }\n\n        // Gravity\n        this.vx += this.emitter.gravity.x * dt;\n        this.vy += this.emitter.gravity.y * dt;\n\n        if (this.emitter.breakFactor !== 1) {\n            const factor = this.emitter.breakFactor ** dt;\n            this.vx *= factor;\n            this.vy *= factor;\n        }\n\n        // Movement\n        this.x += this.vx * dt;\n        this.y += this.vy * dt;\n        this.angle += this.angleSpeed * dt;\n\n        return false;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.globalAlpha = this.alpha * this.emitter.alphaCurve.get(this.progress);\n        ctx.translate(this.x, -this.y);\n\n        if (this.angle) {\n            ctx.rotate(this.angle);\n        }\n\n        if (this.imageOrColor instanceof Object) {\n            // Image\n            const img = this.imageOrColor;\n            const w = img instanceof HTMLImageElement ? img.naturalWidth : img.width;\n            const h = img instanceof HTMLImageElement ? img.naturalHeight : img.height;\n            const sz = Math.max(w, h);\n            if (img instanceof Aseprite) {\n                ctx.save();\n                ctx.scale(w / sz, h / sz);\n                img.draw(ctx, -this.halfSize, -this.halfSize);\n                ctx.restore();\n            } else {\n                ctx.drawImage(img, -this.halfSize, -this.halfSize, this.size * w / sz, this.size * h / sz);\n            }\n        } else {\n            // Color\n            ctx.fillStyle = this.imageOrColor;\n            ctx.fillRect(-this.halfSize, -this.halfSize, this.size, this.size);\n        }\n\n        ctx.restore();\n    }\n}\n\nexport class ValueCurve {\n    private readonly mapping: number[] = [];\n\n    public constructor(private readonly func: (p: number) => number, private readonly steps = 1023) {\n        for (let i = 0; i <= steps; i++) {\n            this.mapping[i] = func(i / steps);\n        }\n    }\n\n    public get(p: number): number {\n        const i = Math.round(p * this.steps);\n        return this.mapping[i < 0 ? 0 : i > this.steps ? this.steps : i];\n    }\n\n    public getExact(p: number): number {\n        return this.func(p);\n    }\n\n    public invert(): ValueCurve {\n        return new ValueCurve((p) => this.getExact(1 - p), this.steps);\n    }\n\n    public append(otherCurve: ValueCurve, relativeLength = 1): ValueCurve {\n        const total = 1 + relativeLength;\n        const mid = (total - relativeLength) / total;\n        return new ValueCurve((p) => p < mid ? this.getExact(p / mid) :\n                otherCurve.getExact((p - mid) / relativeLength),\n                Math.max(this.steps, otherCurve.steps));\n    }\n}\n\nfunction trapezeFunction(v: number, v1: number = v): ((p: number) => number) {\n    return (p: number) => p < v ? p / v : p > 1 - v1 ? (1 - p) / v1 : 1;\n}\n\nexport const valueCurves = {\n    constant: new ValueCurve((p) => 1, 1), // always 1\n    linear: new ValueCurve((p) => p), // linear 0 to 1\n    trapeze: (v: number = 0.1, v1: number = v): ValueCurve => new ValueCurve(trapezeFunction(v, v1)), // blocky 0 to 1 to 0\n    cos: (v: number = 0.1, v1: number = v): ValueCurve => // smooth 0 to 1 to 0\n            new ValueCurve((p) => 0.5 - 0.5 * Math.cos(Math.PI * trapezeFunction(v, v1)(p))),\n    cubic: new ValueCurve((p) => 3 * p * p - 2 * p * p * p) // smooth 0 to 1\n};\n","import { type Conversation, type Interaction } from \"./Conversation\";\nimport { type NPC } from \"./entities/NPC\";\nimport { type Player } from \"./entities/Player\";\nimport { type ControllerEvent } from \"./input/ControllerEvent\";\nimport { MenuList } from \"./Menu\";\n\nexport class PlayerConversation {\n    private interaction: Interaction | null = null;\n    private selectedOption = -1;\n\n    public constructor(\n        private readonly player: Player,\n        public readonly npc: NPC,\n        private readonly conversation: Conversation,\n        private readonly autoMove = true\n    ) {\n        this.interaction = this.conversation.getNextInteraction();\n        this.setSelectedOption(0);\n        this.setBubblesContent();\n        this.interaction?.npcLine?.executeBeforeLine();\n        npc.meet();\n\n        // Ensure safe distance to NPC\n        if (this.autoMove) {\n            const minDis = 20;\n\n            if (Math.abs(player.x - npc.x) < minDis) {\n                if (player.x < npc.x) {\n                    player.startAutoMove(npc.x - minDis, true);\n                } else {\n                    player.startAutoMove(npc.x + minDis, true);\n                }\n            }\n        }\n    }\n\n    /**\n     * Returns true if conversation has been terminated (one way or the other)\n     */\n    public update(): boolean {\n        if (!this.interaction || this.conversation.hasEnded()) {\n            if (this.player.playerConversation != null) {\n                this.endConversation();\n            }\n\n            return true;\n        }\n\n        this.player.scene.camera.setCinematicBar(1);\n\n        return false;\n    }\n\n    private setBubblesContent(): void {\n        if (this.interaction) {\n            const optionsTexts = this.interaction.options.map(options => options.line);\n\n            if (this.interaction.npcLine) {\n                void this.npc.speechBubble.setMessage(this.interaction.npcLine.line);\n                this.npc.speechBubble.show();\n            }\n\n            if (optionsTexts.length > 0) {\n                this.setSelectedOption(0);\n                this.player.speechBubble.setOptions(optionsTexts, this.npc.speechBubble);\n                this.player.speechBubble.show();\n            }\n        }\n    }\n\n    private setSelectedOption(num = 0): number {\n        if (this.interaction != null && this.interaction.options != null && this.interaction.options.length > 0) {\n            let sel = num % this.interaction.options.length;\n\n            if (sel < 0) {\n                sel += this.interaction.options.length;\n            }\n\n            this.selectedOption = sel;\n        } else {\n            this.selectedOption = -1;\n        }\n\n        this.player.speechBubble.selectedOptionIndex = this.selectedOption;\n\n        return this.selectedOption;\n    }\n\n    public handleButton(e: ControllerEvent): void {\n        if (e.isAbort && !e.isPause) {\n            this.endConversation();\n        } else if (!e.repeat) {\n            // Enter to proceed\n            if (e.isConfirm) {\n                this.proceed();\n            }\n\n            const upDown = (e.isMenuDown ? 1 : 0) - (e.isMenuUp ? 1 : 0);\n\n            if (upDown !== 0) {\n                MenuList.click.stop();\n                MenuList.click.play();\n                this.setSelectedOption(this.selectedOption + upDown);\n            }\n        }\n    }\n\n    private proceed(): void {\n        if (this.interaction) {\n            if (this.npc.speechBubble.isCurrentlyWriting || this.npc.speechBubble.preventUnwantedSelection) {\n                this.npc.speechBubble.isCurrentlyWriting = false;\n                return;\n            }\n\n            const options = this.interaction.options;\n\n            if (options != null && options.length > 0) {\n                // Player could choose between options, confirmed with Enter\n                const index = (options.length === 1) ? 0 : this.selectedOption;\n                const option = options[index];\n\n                if (option != null) {\n                    MenuList.select.play();\n                    option.execute();\n                } else {\n                    console.error(\n                        `Tried to execute invalid option at index ${index} in interaction around line: ${this.interaction?.npcLine?.toString()}`\n                    );\n                }\n            }\n\n            if (this.interaction.npcLine) {\n                MenuList.click.stop();\n                MenuList.click.play();\n                // NPC said something, player proceeds without any options\n                this.interaction.npcLine.execute();\n            }\n\n            this.interaction = this.conversation.getNextInteraction();\n            this.setSelectedOption(-1);\n            this.setBubblesContent();\n        }\n\n        if (!this.interaction) {\n            this.endConversation();\n        } else {\n            if (this.interaction.npcLine) {\n                // Mostly NPCs execute actions at the beginning of their line, not afterwards\n                this.npc.face?.setMode(this.npc.defaultFaceMode);\n                this.interaction.npcLine.executeBeforeLine();\n            }\n        }\n    }\n\n    private endConversation(): void {\n        this.player.playerConversation = null;\n        this.player.speechBubble.hide();\n        this.npc.speechBubble.hide();\n        this.npc.registerEndedConversation();\n    }\n}\n","import { type Campaign } from \"./Campaign\";\n\nexport enum QuestKey {\n    A = \"questA\",\n    B = \"questB\",\n    C = \"questC\",\n    D = \"questD\",\n    E = \"questE\"\n}\n\nexport enum QuestATrigger {\n    JUST_ARRIVED,\n    TALKED_TO_FIRE,\n    GOT_QUEST_FROM_FIRE,\n    GOT_RUNNING_ABILITY,\n    TALKED_TO_TREE,\n    GOT_QUEST_FROM_TREE,\n    GOT_SEED,\n    PLANTED_SEED,\n    TALKED_TO_STONE,\n    GOT_STONE,\n    THROWN_STONE_INTO_WATER,\n    GOT_MULTIJUMP,\n    LEARNED_RAIN_DANCE,\n    MADE_RAIN,\n    TREE_DROPPED_WOOD,\n    GOT_WOOD,\n    TALKED_TO_FIRE_WITH_WOOD,\n    THROWN_WOOD_INTO_FIRE,\n    APOCALYPSE_STARTED,\n    BEAT_FIRE,\n    BEAT_GAME\n}\n\nexport enum QuestBTrigger {\n    ENDING_TRIGGERED\n}\n\nexport enum QuestCTrigger {\n    ENDING_TRIGGERED\n}\n\nexport enum QuestDTrigger {\n    ENDING_TRIGGERED\n}\n\nexport enum QuestETrigger {\n    ENDING_TRIGGERED\n}\n\ntype TriggerDefinition = {\n    index: number;\n    isTriggered: boolean;\n};\n\nexport abstract class Quest {\n    public readonly key: QuestKey;\n    public readonly campaign: Campaign;\n    protected readonly triggers: TriggerDefinition[] = [];\n    public readonly title: string;\n    private finished = false;\n\n    public constructor(key: QuestKey, campaign: Campaign, title: string, triggerIndices: number[]) {\n        this.key = key;\n        this.campaign = campaign;\n        this.title = title;\n\n        this.triggers = triggerIndices.map(index => ({\n            index,\n            isTriggered: false\n        }));\n    }\n\n    public reset(): void {\n        this.finished = false;\n        this.triggers.forEach((t, i) => { this.untrigger(i); });\n    }\n\n    public trigger(index: number): void {\n        if (this.triggers[index] != null) {\n            this.triggers[index].isTriggered = true;\n        }\n    }\n\n    public untrigger(index: number): void {\n        if (this.triggers[index] != null) {\n            this.triggers[index].isTriggered = false;\n        }\n    }\n\n    public getTriggers(): TriggerDefinition[] {\n        return this.triggers;\n    }\n\n    public isTriggered(index: number): boolean {\n        return this.triggers[index].isTriggered || false;\n    }\n\n    public allTriggered(): boolean {\n        return this.triggers.every(trigger => trigger.isTriggered);\n    }\n\n    public getHighestTriggerIndex(): number {\n        return Math.max(...this.triggers.filter(t => t.isTriggered).map(t => t.index), -1);\n    }\n\n    public finish(): void {\n        this.finished = true;\n    }\n\n    public isFinished(): boolean {\n        return this.finished;\n    }\n}\n\n/**\n * Standard Ending A. Follow the questline and beat the fire at the end\n */\nexport class QuestA extends Quest {\n    public constructor(campaign: Campaign) {\n        super(\n            QuestKey.A,\n            campaign,\n            \"[A]POCALYPSE NOT NOW\",\n            Object.values(QuestATrigger).filter((i): i is number => typeof i === \"number\")\n        );\n    }\n}\n\n/**\n * Ending B. Helped Dog and Beat fire\n */\nexport class QuestB extends Quest {\n    public constructor(campaign: Campaign) {\n        super(\n            QuestKey.B,\n            campaign,\n            \"GOOD [B]OY\",\n            Object.values(QuestBTrigger).filter((i): i is number => typeof i === \"number\")\n        );\n    }\n}\n\n/**\n * Ending C. Sequence broken and soft locked in cave\n */\nexport class QuestC extends Quest {\n    public constructor(campaign: Campaign) {\n        super(\n            QuestKey.C,\n            campaign,\n            \"SOFT LO[C]KED\",\n            Object.values(QuestCTrigger).filter((i): i is number => typeof i === \"number\")\n        );\n    }\n}\n\n\n/**\n * Ending D. Petted the dog for quite some time and transcended\n */\nexport class QuestD extends Quest {\n    public constructor(campaign: Campaign) {\n        super(\n            QuestKey.D,\n            campaign,\n            \"[D]ROWNED IN ECSTASY\",\n            Object.values(QuestDTrigger).filter((i): i is number => typeof i === \"number\")\n        );\n    }\n}\n\n/**\n * Ending E. Awoke in outer space and realized the awful truth\n */\nexport class QuestE extends Quest {\n    public constructor(campaign: Campaign) {\n        super(\n            QuestKey.E,\n            campaign,\n            \"AWAK[E]\",\n            Object.values(QuestETrigger).filter((i): i is number => typeof i === \"number\")\n        );\n    }\n}\n","import { GAME_CANVAS_HEIGHT, GAME_CANVAS_WIDTH } from \"../shared/constants\";\nimport { type Aseprite } from \"./Aseprite\";\nimport { type BitmapFont } from \"./BitmapFont\";\nimport { type Dance } from \"./Dance\";\nimport { type Fire } from \"./entities/Fire\";\nimport { type ParticleEmitter } from \"./Particles\";\nimport { type GameScene } from \"./scenes/GameScene\";\nimport { roundRect } from \"./util\";\n\nexport enum RenderingType {\n    PARTICLE_EMITTER,\n    FIRE,\n    DANCE,\n    BLACK_BARS,\n    DRAW_IMAGE,\n    ASEPRITE,\n    RECT,\n    SPEECH_BUBBLE,\n    TEXT,\n    RAW\n}\n\nexport enum RenderingLayer {\n    DEBUG = \"debug\",\n    FULLSCREEN_FX = \"fullscreenFX\",\n    UI = \"ui\",\n    BLACK_BARS = \"blackBars\",\n    TILEMAP_FOREGROUND = \"tilemapForeground\",\n    PLAYER = \"player\",\n    ENTITIES = \"entities\",\n    PLATFORMS = \"platforms\",\n    TILEMAP_MAP = \"tilemapMap\",\n    TILEMAP_BACKGROUND = \"tilemapBackground\",\n    PARTICLES = \"particles\"\n}\n\nexport const LAYER_ORDER: RenderingLayer[] = [\n    RenderingLayer.DEBUG,\n    RenderingLayer.FULLSCREEN_FX,\n    RenderingLayer.UI,\n    RenderingLayer.BLACK_BARS,\n    RenderingLayer.TILEMAP_FOREGROUND,\n    RenderingLayer.PLAYER,\n    RenderingLayer.ENTITIES,\n    RenderingLayer.PARTICLES,\n    RenderingLayer.PLATFORMS,\n    RenderingLayer.TILEMAP_MAP,\n    RenderingLayer.TILEMAP_BACKGROUND,\n];\n\nexport type Coordinates = {\n    x: number;\n    y: number;\n};\n\nexport type Dimension = {\n    width: number;\n    height: number;\n};\n\nexport type BaseRenderingItem = {\n    type: RenderingType;\n    layer: RenderingLayer;\n    zIndex?: number;\n    translation?: Coordinates;\n    position: Coordinates;\n    scale?: Coordinates;\n    alpha?: number;\n    globalCompositeOperation?: GlobalCompositeOperation;\n    relativeToScreen?: boolean,\n};\n\nexport type ParticleEmitterRenderingItem = {\n    type: RenderingType.PARTICLE_EMITTER;\n    layer: RenderingLayer;\n    zIndex: number;\n    emitter: ParticleEmitter;\n};\n\nexport type FireRenderingItem = {\n    type: RenderingType.FIRE;\n    layer: RenderingLayer;\n    entity: Fire;\n};\n\nexport type DanceRenderingItem = {\n    type: RenderingType.DANCE;\n    layer: RenderingLayer;\n    dance: Dance;\n};\n\nexport type BlackBarsRenderingItem = {\n    type: RenderingType.BLACK_BARS;\n    layer: RenderingLayer;\n    force: number;\n    height: number;\n    color: string;\n};\n\nexport type RectRenderingItem = BaseRenderingItem & {\n    type: RenderingType.RECT;\n    fillColor?: string,\n    lineColor?: string,\n    lineWidth?: number;\n    dimension: Dimension;\n};\n\nexport type SpeechBubbleRenderingItem = BaseRenderingItem & {\n    type: RenderingType.SPEECH_BUBBLE;\n    fillColor: string,\n    radius: number;\n    offsetX: number;\n    dimension: Dimension;\n    up: boolean;\n};\n\nexport type TextRenderingItem = BaseRenderingItem & {\n    type: RenderingType.TEXT;\n    asset: BitmapFont;\n    text: string,\n    textColor: string,\n    outlineColor?: string,\n};\n\nexport type DrawImageRenderingItem = BaseRenderingItem & {\n    type: RenderingType.DRAW_IMAGE;\n    asset: HTMLImageElement;\n};\n\nexport type AsepriteRenderingItem = BaseRenderingItem & {\n    type: RenderingType.ASEPRITE;\n    asset: Aseprite;\n    animationTag: string;\n    time?: number;\n};\n\nexport type RawRenderingItem = {\n    type: RenderingType.RAW;\n    layer: RenderingLayer;\n    draw: (ctx: CanvasRenderingContext2D) => void;\n};\n\nexport type RenderingItem = BlackBarsRenderingItem | DrawImageRenderingItem | AsepriteRenderingItem | RectRenderingItem |\n                            TextRenderingItem | SpeechBubbleRenderingItem | ParticleEmitterRenderingItem | FireRenderingItem | DanceRenderingItem |\n                            RawRenderingItem;\n\nexport class Renderer {\n    private readonly scene: GameScene;\n    private readonly layers = LAYER_ORDER;\n    private queue: RenderingItem[] = [];\n\n    public constructor(scene: GameScene) {\n        this.scene = scene;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        [...this.layers].reverse().forEach(layer => {\n            const itemsInLayer = this.queue.filter(item => item.layer === layer);\n\n            itemsInLayer.forEach(item => {\n                if (item.type === RenderingType.BLACK_BARS) {\n                    this.scene.camera.drawBars(ctx);\n                } else if (item.type === RenderingType.PARTICLE_EMITTER) {\n                    item.emitter.draw(ctx);\n                } else if (item.type === RenderingType.FIRE) {\n                    item.entity.drawToCanvas(ctx);\n                } else if (item.type === RenderingType.DANCE) {\n                    item.dance.draw(ctx);\n                } else if (item.type === RenderingType.RAW) {\n                    item.draw(ctx);\n                } else {\n                    ctx.save();\n                    if (item.translation) ctx.translate(item.translation.x, item.translation.y);\n                    if (item.scale) ctx.scale(item.scale.x, item.scale.y);\n                    if (item.relativeToScreen === true) {\n                        this.scene.camera.unapplyTransform(ctx);\n                        ctx.translate(-GAME_CANVAS_WIDTH / 2, -GAME_CANVAS_HEIGHT / 2);\n                    }\n                    if (item.globalCompositeOperation) ctx.globalCompositeOperation = item.globalCompositeOperation;\n                    if (item.alpha !== undefined) ctx.globalAlpha = item.alpha;\n\n                    switch (item.type) {\n                        case RenderingType.DRAW_IMAGE:\n                            ctx.drawImage(item.asset, item.position.x, item.position.y);\n                            break;\n                        case RenderingType.ASEPRITE:\n                            item.asset.drawTag(ctx, item.animationTag, item.position.x, item.position.y, item.time);\n                            break;\n                        case RenderingType.RECT:\n                            if (item.lineColor != null) {\n                                ctx.strokeStyle = item.lineColor;\n                                ctx.lineWidth = item.lineWidth ?? 1;\n                                ctx.strokeRect(item.position.x, item.position.y, item.dimension.width, item.dimension.height);\n                            } else if (item.fillColor != null) {\n                                ctx.fillStyle = item.fillColor;\n                                ctx.fillRect(item.position.x, item.position.y, item.dimension.width, item.dimension.height);\n                            }\n                            break;\n                        case RenderingType.SPEECH_BUBBLE:\n                            ctx.beginPath();\n                            ctx = roundRect(ctx, Math.round(item.position.x), Math.round(item.position.y), Math.round(item.dimension.width),\n                                Math.round(item.dimension.height), item.radius, item.up, Math.round(item.offsetX));\n                            ctx.fillStyle = item.fillColor;\n                            ctx.fill();\n                            ctx.closePath();\n                            break;\n                        case RenderingType.TEXT:\n                            if (item.outlineColor != null) {\n                                item.asset.drawTextWithOutline(ctx, item.text, item.position.x, item.position.y, item.textColor, item.outlineColor);\n                            } else {\n                                item.asset.drawText(ctx, item.text, item.position.x, item.position.y, item.textColor);\n                            }\n                            break;\n                    }\n\n                    ctx.restore();\n                }\n            });\n        });\n\n        this.queue = [];\n    }\n\n    public add(item: RenderingItem): void {\n        this.queue.push(item);\n    }\n\n    public addAseprite(\n        sprite: Aseprite, animationTag: string, x: number, y: number, layer: RenderingLayer,\n        direction = 1, time?: number, alpha?: number\n    ): void {\n        const scale = direction < 0 ? { x: -1, y: 1 } : undefined;\n\n        this.add({\n            type: RenderingType.ASEPRITE,\n            layer,\n            translation: {\n                x: x,\n                y: -y\n            },\n            position: {\n                x: -sprite.width >> 1,\n                y: -sprite.height\n            },\n            scale,\n            alpha,\n            asset: sprite,\n            animationTag,\n            time: time ?? this.scene.gameTime * 1000\n        });\n    }\n}\n","import { type Game } from \"./Game\";\nimport { ControllerManager } from \"./input/ControllerManager\";\nimport { type Keyboard } from \"./input/Keyboard\";\nimport { type DrawRootNode, RootNode, type UpdateRootNode } from \"./scene/RootNode\";\nimport { type SceneNode } from \"./scene/SceneNode\";\nimport { type Scenes } from \"./Scenes\";\nimport { type Transition } from \"./Transition\";\n\n/**\n * Constructor type of a scene.\n *\n * @param T - The game type.\n * @param A - Optional scene argument type. A value of this type must be specified when setting or pushing a scene.\n *            Defaults to no argument (void type)\n */\nexport type SceneConstructor<T extends Game = Game, A = void> = new (game: T) => Scene<T, A>;\n\n/**\n * Abstract base class of a scene.\n *\n * @param T - The game type.\n * @param A - Optional scene argument type. A value of this type must be specified when setting or pushing a scene.\n *            Defaults to no argument (void type)\n */\nexport abstract class Scene<T extends Game, A = void> {\n    public zIndex: number = 0;\n    public currentTransition: Transition | null = null;\n    public inTransition: Transition | null = null;\n    public outTransition: Transition | null = null;\n    public readonly rootNode: RootNode<T>;\n    private updateRootNode!: UpdateRootNode;\n    private drawRootNode!: DrawRootNode;\n    private usedLayers: number = 0;\n    private hiddenLayers: number = 0;\n    private backgroundStyle: string | null = null;\n\n    public constructor(public readonly game: T) {\n        this.rootNode = new RootNode(this, (update, draw) => {\n            this.updateRootNode = update;\n            this.drawRootNode = draw;\n        });\n        this.rootNode.resizeTo(this.game.width, this.game.height);\n    }\n\n    public get keyboard(): Keyboard {\n        return this.game.keyboard;\n    }\n\n    public get input(): ControllerManager {\n        return ControllerManager.getInstance();\n    }\n\n    public get scenes(): Scenes<T> {\n        return this.game.scenes;\n    }\n\n    public get urlFragment(): string {\n        return \"#\";\n    }\n\n    /**\n     * Shows the given layer when it was previously hidden.\n     *\n     * @param layer - The layer to show (0-31).\n     */\n    public showLayer(layer: number): this {\n        this.hiddenLayers &= ~(1 << layer);\n        return this;\n    }\n\n    /**\n     * Hides the given layer when it was previously shown.\n     *\n     * @param layer - The layer to hide (0-31).\n     */\n    public hideLayer(layer: number): this {\n        this.hiddenLayers |= 1 << layer;\n        return this;\n    }\n\n    /**\n     * Checks if given layer is hidden.\n     *\n     * @param layer - The layer to check (0-31).\n     * @return True if layer is hidden, false if not.\n     */\n    public isLayerHidden(layer: number): boolean {\n        return (this.hiddenLayers & (1 << layer)) !== 0;\n    }\n\n    /**\n     * Checks if given layer is shown.\n     *\n     * @param layer - The layer to check (0-31).\n     * @return True if layer is shown, false if not.\n     */\n    public isLayerShown(layer: number): boolean {\n        return (this.hiddenLayers & (1 << layer)) === 0;\n    }\n\n    /**\n     * Returns the scene node with the given id.\n     *\n     * @param id - The ID to look for.\n     * @return The matching scene node or null if none.\n     */\n    public getNodeById(id: string): SceneNode<T> | null {\n        return this.rootNode.getDescendantById(id);\n    }\n\n    /**\n     * Returns the background style of this scene. This style is used to fill the background of the scene when set.\n     *\n     * @return The scene background style.\n     */\n    public getBackgroundStyle(): string | null {\n        return this.backgroundStyle;\n    }\n\n    /**\n     * Sets the background style of this scene. This style is used to fill the background of the scene when set.\n     *\n     * @param backgroundStyle - The background style to set.\n     */\n    public setBackgroundStyle(backgroundStyle: string | null): this {\n        this.backgroundStyle = backgroundStyle;\n        return this;\n    }\n\n    /**\n     * Checks if this scene is active.\n     *\n     * @return True if scene is active, false it not.\n     */\n    public isActive(): boolean {\n        return this.scenes.activeScene === this;\n    }\n\n    /**\n     * Called when the scene is pushed onto the stack and before any transitions.\n     *\n     * @param args - The scene arguments (if any).\n     */\n    public setup(args: A): Promise<void> | void {\n        // Intentionally left empty.\n    }\n\n    /**\n     * Called when the scene becomes the top scene on the stack and after the on-stage transition is complete.\n     */\n    public activate(): Promise<void> | void {\n        // Intentionally left empty.\n    }\n\n    /**\n     * Called when the scene is no longer the top scene on the stack and before the off-stage transition begins.\n     */\n    public deactivate(): Promise<void> | void {\n        // Intentionally left empty.\n    }\n\n    /**\n     * Called when the scene is popped from the scene stack, after any transitions are complete.\n     */\n    public cleanup(): Promise<void> | void {\n        // Intentionally left empty.\n    }\n\n    /**\n     * Updates the scene. Scenes can overwrite this method to do its own drawing but when you are going to use the\n     * scene graph then make sure to call the super method in your overwritten method or the scene graph will not be\n     * updated.\n     */\n    public update(dt: number): void {\n        this.usedLayers = this.updateRootNode(dt);\n    }\n\n    /**\n     * Draws the scene. Scenes can overwrite this method to do its own drawing but when you are going to use the\n     * scene graph then make sure to call the super method in your overwritten method or the scene graph will not be\n     * rendered.\n     *\n     * @param ctx    - The rendering context.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     */\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        if (this.backgroundStyle != null) {\n            ctx.save();\n            ctx.fillStyle = this.backgroundStyle;\n            ctx.fillRect(0, 0, width, height);\n        }\n        let layer = 1;\n        let usedLayers = this.usedLayers & ~this.hiddenLayers;\n        while (usedLayers !== 0) {\n            if ((usedLayers & 1) === 1) {\n                this.drawRootNode(ctx, layer, width, height);\n            }\n            usedLayers >>>= 1;\n            layer <<= 1;\n        }\n        if (this.backgroundStyle != null) {\n            ctx.restore();\n        }\n    }\n}\n","import { type Game } from \"./Game\";\nimport { type Scene, type SceneConstructor } from \"./Scene\";\n\nexport class Scenes<T extends Game> {\n    #activeScene: Scene<T, unknown> | null = null;\n    public set activeScene(scene: Scene<T, unknown> | null) {\n        this.#activeScene = scene;\n        window.history.replaceState(null, \"\", scene?.urlFragment ?? \"#\");\n    }\n    public get activeScene(): Scene<T, unknown> | null {\n        return this.#activeScene;\n    }\n    private readonly sceneCache = new WeakMap<SceneConstructor<T, unknown>, Scene<T, unknown>>();\n    private readonly scenes: Scene<T, unknown>[] = [];\n    private sortedScenes: Scene<T, unknown>[] = [];\n\n    public constructor(public readonly game: T) {}\n\n    private createScene<A>(sceneClass: SceneConstructor<T, A>): Scene<T, A> {\n        let scene = this.sceneCache.get(sceneClass);\n\n        if (scene == null) {\n            scene = new sceneClass(this.game);\n            this.sceneCache.set(sceneClass, scene);\n        }\n\n        return scene;\n    }\n\n    public async pushScene(sceneClass: SceneConstructor<T, void>, args: void): Promise<void>;\n    public async pushScene<A>(sceneClass: SceneConstructor<T, A>, args: A): Promise<void>;\n    public async pushScene<A>(sceneClass: SceneConstructor<T, A>, args: A): Promise<void> {\n        if (this.activeScene != null) {\n            await this.activeScene.deactivate();\n        }\n\n        const scene = this.createScene(sceneClass);\n\n        await scene.setup(args);\n        this.scenes.push(scene);\n        this.updateSortedScenes();\n\n        if (scene.inTransition != null) {\n            scene.currentTransition = scene.inTransition;\n            await scene.currentTransition.start(\"in\");\n            scene.currentTransition = null;\n        }\n\n        await scene.activate();\n        this.activeScene = scene;\n    }\n\n    public getPreviousScene(): Scene<T> | null {\n        return this.scenes[this.scenes.length - 2] ?? null;\n    }\n\n    public async popScene({ noTransition = false }: { noTransition?: boolean} = {}): Promise<Scene<T> | null> {\n        const activeScene = this.activeScene;\n\n        if (activeScene != null) {\n            await activeScene.deactivate();\n\n            if (!noTransition && activeScene.outTransition != null) {\n                activeScene.currentTransition = activeScene.outTransition;\n                await activeScene.currentTransition.start(\"out\");\n                activeScene.currentTransition = null;\n            }\n\n            this.scenes.pop();\n            this.updateSortedScenes();\n            await activeScene.cleanup();\n            this.activeScene = this.scenes[this.scenes.length - 1] ?? null;\n\n            if (this.activeScene != null) {\n                await this.activeScene.activate();\n            }\n        }\n\n        return activeScene;\n    }\n\n    public async setScene(newSceneClass: SceneConstructor<T, void>, args: void): Promise<void>;\n    public async setScene<A>(newSceneClass: SceneConstructor<T, A>, args: A): Promise<void>;\n    public async setScene<A>(newSceneClass: SceneConstructor<T, A>, args: A): Promise<void> {\n        const currentScene = this.activeScene;\n\n        if (currentScene == null) {\n            return this.pushScene(newSceneClass, args);\n        }\n\n        await currentScene.deactivate();\n        let outTransitionPromise: Promise<void> | null = null;\n\n        if (currentScene.outTransition) {\n            currentScene.currentTransition = currentScene.outTransition;\n            outTransitionPromise = currentScene.currentTransition.start(\"out\");\n        }\n\n        const currentSceneIndex = this.scenes.length - 1;\n        const newScene = this.createScene(newSceneClass);\n        await newScene.setup(args);\n        this.scenes.push(newScene);\n        this.updateSortedScenes();\n\n        if (newScene.inTransition != null) {\n            newScene.currentTransition = newScene.inTransition;\n            await newScene.currentTransition.start(\"in\");\n            newScene.currentTransition = null;\n        }\n\n        await newScene.activate();\n        this.activeScene = newScene;\n\n        if (outTransitionPromise != null) {\n            await outTransitionPromise;\n            currentScene.currentTransition = null;\n        }\n\n        this.scenes.splice(currentSceneIndex, 1);\n        this.updateSortedScenes();\n        await currentScene.cleanup();\n    }\n\n    private updateSortedScenes(): void {\n        this.sortedScenes = this.scenes.slice().sort((a, b) => {\n            if (a.zIndex === b.zIndex) {\n                return this.scenes.indexOf(a) - this.scenes.indexOf(b);\n            } else {\n                return a.zIndex - b.zIndex;\n            }\n        });\n    }\n\n    public update(dt: number): void {\n        this.sortedScenes.forEach(scene => {\n            scene.currentTransition?.update(dt);\n            scene.update(dt);\n        });\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        this.sortedScenes.forEach(scene => {\n            ctx.save();\n            if (scene.currentTransition != null) {\n                scene.currentTransition.draw(ctx, () => scene.draw(ctx, width, height), width, height);\n            } else {\n                scene.draw(ctx, width, height);\n            }\n            ctx.restore();\n        });\n    }\n}\n","/**\n * Internally used container for a slot (A callback function with a calling context).\n */\nclass Slot<T = unknown> {\n    public constructor(public callback: (value: T) => void, public context?: object) {}\n    public call(value: T): void {\n        this.callback.call(this.context, value);\n    }\n}\n\n/**\n * Light-weight and very fast signal/slot based event system. Just create a signal instance, connect slots\n * (event listeners) to it and then let the signal emit values which are then send to all connected slots.\n * Slots can be methods and it's easy to disconnect them again using the disconnect() method or calling the function\n * returned by connect().\n */\nexport class Signal<T = void> {\n    private readonly slots: Slot<T>[] = [];\n    private readonly onInit: ((signal: Signal<T>) => (() => void) | void) | null;\n    private onDone: ((signal: Signal<T>) => void) | null = null;\n\n    /**\n     * Creates a new signal with the given optional initialization function.\n     *\n     * @param onInit - Optional initialization function which is called when the first slot is connected to the signal.\n     *                 This function can return an optional deinitialization function which is called after the last\n     *                 slot has been disconnected.\n     */\n    public constructor(onInit?: (signal: Signal<T>) => (() => void) | void) {\n        this.onInit = onInit ?? null;\n    }\n\n    /**\n     * Connects a slot to this signal.\n     *\n     * @param callback - The slot callback function to call when signal emits a value.\n     * @param context  - Optional context to call the slot callback function on. This is useful for connecting methods.\n     * @return A function which can be called to disconnect the slot from the signal again.\n     */\n    public connect(callback: (value: T) => void, context?: object): () => void {\n        if (this.onInit != null && this.slots.length === 0) {\n            this.onDone = this.onInit(this) || null;\n        }\n        this.slots.push(new Slot(callback, context));\n        return () => this.disconnect(callback, context);\n    }\n\n    /**\n     * Disconnects a slot from this signal.\n     *\n     * @param callback - The slot callback function to disconnect from the signal.\n     * @param context  - Optional context. Needed to disconnect methods.\n     */\n    public disconnect(callback: (value: T) => void, context?: object): void {\n        const index = this.slots.findIndex(slot => slot.callback === callback && slot.context === context);\n        if (index >= 0) {\n            this.slots.splice(index, 1);\n        }\n        if (this.onDone != null && this.slots.length === 0) {\n            this.onDone(this);\n            this.onDone = null;\n        }\n    }\n\n    /**\n     * Emits the given value to all connected slots.\n     *\n     * @param value - The value to emit.\n     */\n    public emit(value: T): void {\n        this.slots.forEach(slot => slot.call(value));\n    }\n\n    /**\n     * Returns a new signal which only emits the values matching the giving predicate.\n     *\n     * @parm predicate - The function which decides if the value is emitted or not.\n     * @return The new signal.\n     */\n    public filter(predicate: (value: T) => boolean): Signal<T> {\n        return new Signal(signal => this.connect(value => {\n            if (predicate(value)) {\n                signal.emit(value);\n            }\n        }));\n    }\n\n    /**\n     * Returns a new signal which maps all emitted values to something else.\n     *\n     * @param mapper - The function which maps the original value to something new.\n     * @return The new signal.\n     */\n    public map<R>(mapper: (value: T) => R): Signal<R> {\n        return new Signal<R>(signal => this.connect(value => {\n            return signal.emit(mapper(value));\n        }));\n    }\n}\n","import { DIALOG_FONT, GAME_CANVAS_WIDTH } from \"../shared/constants\";\nimport { asset } from \"./Assets\";\nimport { BitmapFont } from \"./BitmapFont\";\nimport { ConversationLine } from \"./Conversation\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { type GameScene } from \"./scenes/GameScene\";\nimport { sleep } from \"./util\";\n\nexport class SpeechBubble {\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n    private static readonly OPTION_BUBBLE_INDENTATION = 11;\n\n    private messageLines: string[] = [];\n    private options: string[] = [];\n    public selectedOptionIndex = -1;\n    private readonly fontSize = SpeechBubble.font.charHeight;\n    private readonly lineHeight = this.fontSize;\n    private height = 0;\n    private readonly offset = { x: 0, y: 40 };\n    private readonly messageVelocity = 20;\n\n    private x: number;\n    private y: number;\n    private readonly paddingHorizontal: number;\n    private readonly paddingVertical: number;\n    public isCurrentlyWriting = false;\n    public preventUnwantedSelection = false;\n\n    private isVisible = false;\n\n    private content: string [] = [];\n    private longestLine: number = 0;\n\n    private partnersBubble: SpeechBubble | null = null;\n    private readonly lineHeightFactor = 1;\n    private readonly paddingTop = 3;\n    private readonly paddingBottom = 4;\n    private readonly paddingLeft = 7;\n    private readonly paddingRight = 7;\n    private readonly color = \"white\";\n\n    public constructor(\n        private readonly scene: GameScene,\n        public anchorX: number,\n        public anchorY: number,\n        private readonly up = false\n    ) {\n        this.x = Math.round(anchorX + this.offset.x);\n        this.y = Math.round(anchorY + this.offset.y);\n        this.lineHeight = Math.round(this.fontSize * this.lineHeightFactor);\n        this.paddingHorizontal = this.paddingLeft + this.paddingRight;\n        this.paddingVertical = this.paddingTop + this.paddingBottom;\n    }\n\n    public show(): void {\n        this.isVisible = true;\n    }\n\n    public hide(): void {\n        this.isVisible = false;\n    }\n\n    public hasContent(): boolean {\n        return this.content.length > 0 &&\n            (!this.partnersBubble || !this.partnersBubble.isCurrentlyWriting && this.selectedOptionIndex > -1);\n    }\n\n    public async setMessage(message: string): Promise<void> {\n        this.messageLines = [\"\"];\n        this.isCurrentlyWriting = true;\n        this.longestLine = this.determineMaxLineLength(message.split(\"\\n\"));\n        let index = 0;\n\n        for (const char of message) {\n            if (!char) {\n                index++;\n                continue;\n            }\n            if (char === \"\\n\") {\n                index++;\n                this.messageLines.push(\"\");\n                continue;\n            }\n            this.messageLines[index] += char;\n            if (this.isCurrentlyWriting) {\n                await sleep(this.messageVelocity);\n            }\n            this.updateContent();\n        }\n\n        this.preventUnwantedSelection = true;\n        this.updateContent();\n        this.isCurrentlyWriting = false;\n        await sleep(300);\n        this.preventUnwantedSelection = false;\n    }\n\n    public setOptions(options: string[], partnersBubble: SpeechBubble): void {\n        this.partnersBubble = partnersBubble;\n        this.options = options;\n        this.selectedOptionIndex = this.options.length > 0 ? 0 : -1;\n        this.updateContent();\n        this.longestLine = this.determineMaxLineLength(this.messageLines);\n    }\n\n    private updateContent(): void {\n        this.content = this.messageLines.concat(this.options);\n        this.height = (this.content.length - 1) * this.lineHeight + this.fontSize + this.paddingVertical;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (\n            !this.isVisible\n            || !this.hasContent()\n            || !this.scene.camera.isOnTarget()\n            || !this.scene.isActive()\n        ) {\n            return;\n        }\n\n        let posX = this.x;\n        const posY = this.y;\n        let offsetX = 0;\n\n        // Check if Speech Bubble clips the viewport and correct position\n        const visibleRect = this.scene.camera.getVisibleRect();\n        const relativeX = posX - visibleRect.x;\n\n        const clipAmount = Math.max(\n            (this.longestLine / 2) + relativeX - GAME_CANVAS_WIDTH, 0)\n            || Math.min(relativeX - (this.longestLine / 2),\n            0\n        );\n\n        if (clipAmount !== 0) {\n            offsetX = clipAmount + (10 * Math.sign(clipAmount));\n        }\n\n        posX -= offsetX;\n\n        const bubbleXPos = posX - Math.round(this.longestLine / 2) - this.paddingLeft;\n        const bubbleYPos = this.up ? -posY + 45 : (-posY - this.height);\n\n        this.scene.renderer.add({\n            type: RenderingType.SPEECH_BUBBLE,\n            layer: RenderingLayer.UI,\n            fillColor: this.color,\n            position: {\n                x: bubbleXPos,\n                y: bubbleYPos\n            },\n            dimension: {\n                width: this.longestLine + this.paddingHorizontal,\n                height: this.height\n            },\n            radius: 5,\n            up: this.up,\n            offsetX\n        });\n\n        const textXPos = bubbleXPos + this.paddingLeft;\n        const textColor = \"black\";\n\n        for (let i = 0; i < this.messageLines.length; i++) {\n            const textYPos = Math.round(bubbleYPos + this.paddingTop + i * this.lineHeight);\n\n            this.scene.renderer.add({\n                type: RenderingType.TEXT,\n                layer: RenderingLayer.UI,\n                text: this.messageLines[i],\n                textColor: textColor,\n                position: {\n                    x: textXPos,\n                    y: textYPos\n                },\n                asset: SpeechBubble.font,\n            });\n        }\n\n        for (let i = 0; i < this.options.length; i++) {\n            const isSelected = this.selectedOptionIndex === i;\n            const textYPos = Math.round(bubbleYPos + this.paddingTop + i * this.lineHeight);\n\n            if (isSelected) {\n                this.scene.renderer.add({\n                    type: RenderingType.TEXT,\n                    layer: RenderingLayer.UI,\n                    text: ConversationLine.OPTION_MARKER,\n                    textColor: textColor,\n                    position: {\n                        x: textXPos,\n                        y: textYPos\n                    },\n                    asset: SpeechBubble.font\n                });\n            }\n\n            this.scene.renderer.add({\n                type: RenderingType.TEXT,\n                layer: RenderingLayer.UI,\n                text: this.options[i],\n                textColor: textColor,\n                position: {\n                    x: textXPos + SpeechBubble.OPTION_BUBBLE_INDENTATION,\n                    y: textYPos\n                },\n                asset: SpeechBubble.font\n            });\n        }\n    }\n\n    public update(anchorX: number, anchorY: number): void {\n        this.x = Math.round(anchorX + this.offset.x);\n        this.y = Math.round(anchorY + this.offset.y);\n    }\n\n    private determineMaxLineLength(message: string[]): number {\n        let lineLengths = message.map(\n            line => SpeechBubble.font.measureText(line).width\n        );\n\n        lineLengths = lineLengths.concat(\n            this.options.map(\n                line => SpeechBubble.font.measureText(line).width + SpeechBubble.OPTION_BUBBLE_INDENTATION\n            )\n        );\n\n        return Math.max(...lineLengths);\n    }\n}\n","import { type Easing, linear } from \"./easings\";\nimport { clamp } from \"./util\";\n\nexport type TransitionType = \"in\" | \"out\";\n\nexport interface TransitionOptions {\n    duration?: number;\n    reverse?: boolean;\n    easing?: Easing;\n}\n\nexport abstract class Transition {\n    private type: TransitionType = \"out\";\n    private readonly duration: number;\n    private readonly easing: Easing;\n    private elapsed: number = 0;\n    private resolve: (() => void) | null = null;\n    private promise: Promise<void> | null = null;\n\n    public constructor({ duration = 0.5, easing = linear }: TransitionOptions = {}) {\n        this.duration = duration;\n        this.easing = easing;\n    }\n\n    public valueOf(): number {\n        const value = this.easing(clamp(this.elapsed / this.duration, 0, 1));\n        return this.type === \"out\" ? value :  (1 - value);\n    }\n\n    public update(dt: number): void {\n        if (this.promise != null) {\n            this.elapsed += dt;\n            if (this.elapsed >= this.duration) {\n                this.stop();\n            }\n        }\n    }\n\n    public abstract draw(ctx: CanvasRenderingContext2D, draw: () => void, width: number, height: number): void;\n\n    public async start(type: TransitionType): Promise<void> {\n        if (this.promise == null) {\n            this.type = type;\n            this.elapsed = 0;\n            this.promise = new Promise(resolve => { this.resolve = resolve; });\n        }\n        return this.promise;\n    }\n\n    public stop(): void {\n        if (this.resolve != null) {\n            this.resolve();\n            this.resolve = null;\n            this.promise = null;\n        }\n    }\n}\n","import { PETTING_ENDING_CUTSCENE_DURATION, WINDOW_ENDING_CUTSCENE_DURATION } from \"../shared/constants\";\nimport { asset } from \"./Assets\";\nimport { type Bounds, Entity } from \"./Entity\";\nimport { getImageData } from \"./graphics\";\nimport { type GameObjectInfo } from \"./MapInfo\";\nimport { type ParticleEmitter, Particles, valueCurves } from \"./Particles\";\nimport { RenderingLayer, RenderingType } from \"./Renderer\";\nimport { type GameObject, isCollidableGameObject } from \"./scenes/GameObject\";\nimport { type GameScene } from \"./scenes/GameScene\";\nimport { boundsFromMapObject, rnd, rndInt } from \"./util\";\n\nexport enum Environment {\n    AIR = 0,\n    SOLID = 0xff000000,\n    PLATFORM = 0xff7f7f7f,\n    BOUNCE = 0xffff0000,\n    WATER = 0xff0000ff,\n    SOIL = 0xffffff00,\n    RAINCLOUD = 0xff00ff00\n}\n\nexport const validEnvironments = Object.values(Environment);\n\nexport class World implements GameObject {\n    @asset(\"maps/level.png\")\n    private static readonly foreground: HTMLImageElement;\n\n    @asset(\"maps/level_collision.png\", {\n        map: (image: HTMLImageElement) => new Uint32Array(getImageData(image).data.buffer)\n    })\n    private static readonly collisionMap: Uint32Array;\n\n    @asset([\n        \"maps/bg.png\",\n        \"maps/bg2.png\",\n        \"maps/bg3.png\"\n    ])\n    private static readonly backgrounds: HTMLImageElement[];\n\n    /** Background displayed in the debug zoom-out mode because parallax background cannot work there. */\n    @asset(\"maps/bg-debug.png\")\n    private static readonly debugBackground: HTMLImageElement;\n\n    private readonly scene: GameScene;\n\n    @asset(\"images/raindrop.png\")\n    private static readonly raindrop: HTMLImageElement;\n    private readonly rainEmitter: ParticleEmitter;\n    private raining = false;\n\n    public constructor(scene: GameScene) {\n        this.scene = scene;\n\n        const rainSpawnPosition = this.scene.pointsOfInterest.find(\n            o => o.name === \"rain_spawn_position\"\n        );\n\n        if (!rainSpawnPosition) {\n            throw new Error(\"Missing 'rain_spawn_position' point in map data to place rain emitter\");\n        }\n\n        this.rainEmitter = this.scene.particles.createEmitter({\n            position: {x: rainSpawnPosition.x, y: rainSpawnPosition.y},\n            offset: () => ({x: rnd(-1, 1) * 26, y: rnd(-1, 1) * 5}),\n            velocity: () => ({ x: rnd(-1, 1) * 5, y: -rnd(50, 80) }),\n            color: () => World.raindrop,\n            size: 4,\n            gravity: {x: 0, y: -100},\n            lifetime: () => 3,\n            alpha: 0.6,\n            alphaCurve: valueCurves.linear.invert()\n        });\n    }\n\n    public getWidth(): number {\n        return World.foreground.width;\n    }\n\n    public getHeight(): number {\n        return World.foreground.height;\n    }\n\n    public update(): void {\n        if (this.raining) {\n            this.rainEmitter.emit(rndInt(1, 4));\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        const camera = this.scene.camera;\n        const camX = camera.x;\n        const camY = camera.y;\n        const posXMultiplier = 1 - (camX / this.getWidth() * 2);\n        const posYMultiplier = 1 - (camY / this.getHeight() * 2);\n\n        let alpha = 1;\n        if (this.scene.pettingCutscene) {\n            alpha = Math.max(0, 1 - (this.scene.pettingCutsceneTime / PETTING_ENDING_CUTSCENE_DURATION));\n        }\n        if (this.scene.windowCutscene) {\n            alpha = Math.max(0, 1 - (this.scene.windowCutsceneTime / (WINDOW_ENDING_CUTSCENE_DURATION / 1.5 )));\n        }\n\n        this.scene.renderer.add({\n            type: RenderingType.DRAW_IMAGE,\n            layer: RenderingLayer.TILEMAP_MAP,\n            translation: { x: camX, y: -camY },\n            position: { x: -camX, y: -this.getHeight() + camY },\n            asset: World.foreground,\n            alpha: alpha\n        });\n\n        if (camera.isZoomingOut()) {\n            // In debug camera zoom-out stretch a special background image because the parallax background cannot work there\n            const background = World.debugBackground;\n            const bgX = this.getWidth() / background.width;\n            const bgY = this.getHeight() / background.height;\n            this.scene.renderer.add({\n                type: RenderingType.DRAW_IMAGE,\n                layer: RenderingLayer.TILEMAP_BACKGROUND,\n                translation: { x: camX, y: -camY },\n                position: { x: -camX / bgX, y: (-this.getHeight() + camY) / bgY },\n                scale: { x: bgX, y: bgY },\n                asset: background\n            });\n        } else {\n            for (const background of World.backgrounds) {\n                const bgX = this.getWidth() / background.width;\n                const bgY = this.getHeight() / background.height;\n\n                this.scene.renderer.add({\n                    type: RenderingType.DRAW_IMAGE,\n                    layer: RenderingLayer.TILEMAP_BACKGROUND,\n                    translation: { x: camX, y: -camY },\n                    position: {\n                        x: (-camX / bgX) + (-posXMultiplier * (width / 2)),\n                        y: (-this.getHeight() + camY) / bgY - (-posYMultiplier * (height / 2))\n                    },\n                    asset: background,\n                    alpha: alpha\n                });\n            }\n        }\n    }\n\n    public getEnvironment(x: number, y: number): Environment {\n        const index = (this.getHeight() - 1 - Math.round(y)) * this.getWidth() + Math.round(x);\n\n        if (index < 0 || index >= World.collisionMap.length) {\n            return Environment.AIR;\n        }\n\n        return World.collisionMap[index];\n    }\n\n    /**\n     * Checks if the given position collides with the world.\n     *\n     * @param x - X position within the world.\n     * @param y - Y position within the world.\n     * @return 0 if no collision. Anything else is a specific collision type (actually an RGBA color\n     *         which has specific meaning which isn't defined yet).\n     */\n    public collidesWith(\n        x: number, y: number, ignoreObjects: GameObject[] = [], ignore: Environment[] = []\n    ): number {\n        for (const gameObject of this.scene.gameObjects) {\n            if (\n                gameObject !== this\n                && !ignoreObjects.includes(gameObject)\n                && isCollidableGameObject(gameObject)\n            ) {\n                const environment = gameObject.collidesWith(x, y);\n\n                if (environment !== Environment.AIR && !ignore.includes(environment) ) {\n                    return environment;\n                }\n            }\n        }\n\n        const index = (this.getHeight() - 1 - Math.round(y)) * this.getWidth() + Math.round(x);\n\n        if (index < 0 || index >= World.collisionMap.length) {\n            return 0;\n        }\n\n        const environment = this.getEnvironment(x, y);\n\n        if (\n            !validEnvironments.includes(environment)\n            || (ignore != null && ignore.includes(environment))\n        ) {\n            return Environment.AIR;\n        }\n\n        return World.collisionMap[index];\n    }\n\n    /**\n     * Checks if a specific entity (`sourceEntity`) collides with either of of the entities in the\n     * gameObjects array of the GameScene and returns all entities that currently collide.\n     * `Particles` are taken out of this check automatically.\n     *\n     * @param sourceEntity    - The entity to be checked against the other entities\n     * @param margin          - Optional margin added to the bounding boxes of the entities to\n     *                          extend collision radius\n     * @param ignoreEntities  - Array of entities to be ignored with this check\n     * @return                - An array containing all entities that collide with the source\n     *                          entity.\n     */\n    public getEntityCollisions(\n        sourceEntity: Entity, margin = 0, ignoreEntities: Entity[] = []\n    ): Entity[] {\n        const collidesWith: Entity[] = [];\n\n        for (const gameObject of this.scene.gameObjects) {\n            if (\n                gameObject !== sourceEntity\n                && !(gameObject instanceof Particles)\n                && gameObject instanceof Entity\n                && gameObject.isTrigger\n                && !ignoreEntities.includes(gameObject)\n            ) {\n                const colliding = this.boundingBoxesCollide(\n                    sourceEntity.getBounds(margin), gameObject.getBounds(margin)\n                );\n\n                if (colliding) {\n                    collidesWith.push(gameObject);\n                }\n            }\n        }\n\n        return collidesWith;\n    }\n\n    /**\n     * Returns all triggers that do collide with the provided entity\n     * @param sourceEntity Entity to check collisions against trigger boxes\n     */\n    public getTriggerCollisions(sourceEntity: Entity): GameObjectInfo[] {\n        const collidesWith: GameObjectInfo[] = [];\n\n        for (const triggerObject of this.scene.triggerObjects) {\n            const colliding = this.boundingBoxesCollide(\n                sourceEntity.getBounds(), boundsFromMapObject(triggerObject)\n            );\n\n            if (colliding && this.entityIsAvailableInNewGameState(triggerObject.properties.newGamePlus)) {\n                collidesWith.push(triggerObject);\n            }\n        }\n\n        return collidesWith;\n    }\n\n    public entityIsAvailableInNewGameState(newGamePlusProp?: boolean): boolean {\n        return (\n            newGamePlusProp === undefined ||\n            (\n                newGamePlusProp === false && !this.scene.game.campaign.isNewGamePlus ||\n                newGamePlusProp === true && this.scene.game.campaign.isNewGamePlus\n            )\n        );\n    }\n\n    public getGateCollisions(sourceEntity: Entity): GameObjectInfo[] {\n        const collidesWith: GameObjectInfo[] = [];\n\n\n        for (const gateObject of this.scene.gateObjects) {\n            const colliding = this.boundingBoxesCollide(\n                sourceEntity.getBounds(), boundsFromMapObject(gateObject, 0)\n            );\n\n            if (colliding && gateObject.properties.disabled !== true && this.entityIsAvailableInNewGameState(gateObject.properties.newGamePlus)) {\n                collidesWith.push(gateObject);\n            }\n        }\n\n        return collidesWith;\n    }\n\n    public getCameraBounds(sourceEntity: Entity): GameObjectInfo[] {\n        const collidesWith: GameObjectInfo[] = [];\n\n        for (const triggerObject of this.scene.boundObjects) {\n            const colliding = this.boundingBoxesCollide(\n                sourceEntity.getBounds(), boundsFromMapObject(triggerObject)\n            );\n\n            if (colliding) {\n                collidesWith.push(triggerObject);\n            }\n        }\n\n        return collidesWith;\n    }\n\n    /**\n     * Checks if the two provided bounding boxes are touching each other\n     * @param box1 first bounding box\n     * @param box2 second bounding box\n     * @return `true` when the bounding boxes are touching, `false` if not.\n     */\n    public boundingBoxesCollide(box1: Bounds, box2: Bounds): boolean {\n        return !(\n            ((box1.y - box1.height) > (box2.y)) ||\n            (box1.y < (box2.y - box2.height)) ||\n            ((box1.x + box1.width) < box2.x) ||\n            (box1.x > (box2.x + box2.width))\n        );\n    }\n\n    public getObjectAt(\n        x: number, y: number, ignoreObjects: GameObject[] = [], ignore: Environment[] = []\n    ): GameObject | null {\n        for (const gameObject of this.scene.gameObjects) {\n            if (\n                gameObject !== this\n                && !ignoreObjects.includes(gameObject)\n                && isCollidableGameObject(gameObject)\n            ) {\n                const environment = gameObject.collidesWith(x, y);\n\n                if (environment !== Environment.AIR && !ignore.includes(environment)) {\n                    return gameObject;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Check collision of a vertical line with the world.\n     *\n     * @param x      - X position within the world.\n     * @param y      - Y start position of the line in the world.\n     * @param height - The height of the line to check\n     * @return 0 if no collision. Type of first collision along the line otherwise.\n     */\n    public collidesWithVerticalLine(\n        x: number, y: number, height: number, ignoreObjects?: GameObject[], ignore?: Environment[]\n    ): number {\n        for (let i = 0; i < height; i++) {\n            const collision = this.collidesWith(\n                x, y - i, ignoreObjects, ignore\n            );\n\n            if (collision) {\n                return collision;\n            }\n        }\n\n        return 0;\n    }\n\n    /**\n     * Returns the Y coordinate of the ground below the given world coordinate.\n     *\n     * @param x - X coordinate of current position.\n     * @param y - Y coordinate of current position.\n     * @return The Y coordinate of the ground below the given coordinate.\n     */\n    public getGround(\n        x: number, y: number, ignoreObjects?: GameObject[], ignore?: Environment[]\n    ): number {\n        while (\n            y > 0 && !this.collidesWith(x, y, ignoreObjects, ignore)\n        ) {\n            y--;\n        }\n\n        return y;\n    }\n\n    public startRain(): void {\n        this.raining = true;\n    }\n\n    public stopRain(): void {\n        this.raining = false;\n    }\n\n    public isRaining(): boolean {\n        return this.raining;\n    }\n}\n","import { ControllerManager } from \"../input/ControllerManager\";\n\n// Get cross-browser AudioContext (Safari still uses webkitAudioContext…)\nconst AudioContext = window.AudioContext ?? window.webkitAudioContext;\n\nlet audioContext: AudioContext | null = null;\n\n/**\n * Returns the (one and only) audio context in use.\n * If no audio context exists, e.g. when this function is called for the first time, it will be created.\n *\n * @param controllerManager Used to initially resume (start?) the audio context, on the first user interaction.\n * @returns\n *   The one (and only) audio context.\n */\nexport function getAudioContext(controllerManager: ControllerManager = ControllerManager.getInstance()): AudioContext {\n\n    if (audioContext == null) {\n        audioContext = new AudioContext();\n\n        // When audio context is suspended then try to wake it up on next key or pointer press\n        if (audioContext.state === \"suspended\") {\n            const resume = (): void => void audioContext?.resume();\n\n            controllerManager.onButtonDown.connect(resume);\n            document.addEventListener(\"pointerdown\", resume);\n\n            audioContext.addEventListener(\"statechange\", () => {\n                if (audioContext?.state === \"running\") {\n                    controllerManager.onButtonDown.disconnect(resume);\n                    document.removeEventListener(\"pointerdown\", resume);\n                }\n            });\n        }\n    }\n\n    return audioContext;\n}\n","import { Preferences } from \"../preferences/Preferences\";\nimport { clamp } from \"../util\";\nimport { getAudioContext } from \"./AudioContext\";\nimport { type AudioPreferencesStore } from \"./AudioPreferencesStore\";\nimport { MAX_GAIN_VALUE, MIN_GAIN_VALUE } from \"./constants\";\n\nexport class AudioManager {\n\n    static readonly #INSTANCE: AudioManager = new AudioManager(Preferences.getInstance().audio);\n    public static getInstance(): AudioManager {\n        return AudioManager.#INSTANCE;\n    }\n\n    readonly #audioPreferencesStore: AudioPreferencesStore;\n    readonly #musicGainNode: GainNode;\n    readonly #sfxGainNode: GainNode;\n\n    public constructor(audioPreferencesStore: AudioPreferencesStore) {\n        this.#audioPreferencesStore = audioPreferencesStore;\n        const audioContext = getAudioContext();\n        this.#musicGainNode = audioContext.createGain();\n        this.#musicGainNode.connect(audioContext.destination);\n        this.#musicGainNode.gain.value = audioPreferencesStore.music.gain;\n        this.#sfxGainNode = audioContext.createGain();\n        this.#sfxGainNode.connect(audioContext.destination);\n        this.#sfxGainNode.gain.value = audioPreferencesStore.sfx.gain;\n    }\n\n    public get musicGainNode(): GainNode {\n        return this.#musicGainNode;\n    }\n\n    public get sfxGainNode(): GainNode {\n        return this.#sfxGainNode;\n    }\n\n    public get musicGain(): number {\n        return this.#musicGainNode.gain.value;\n    }\n\n    public set musicGain(value: number) {\n        value = clamp(value, MIN_GAIN_VALUE, MAX_GAIN_VALUE);\n        this.#audioPreferencesStore.music.gain = value;\n        if (this.#musicGainNode.gain.value !== value) {\n            this.#musicGainNode.gain.value = value;\n        }\n    }\n\n    public get sfxGain(): number {\n        return this.#sfxGainNode.gain.value;\n    }\n\n    public set sfxGain(value: number) {\n        value = clamp(value, MIN_GAIN_VALUE, MAX_GAIN_VALUE);\n        this.#audioPreferencesStore.sfx.gain = value;\n        if (this.#sfxGainNode.gain.value !== value) {\n            this.#sfxGainNode.gain.value = value;\n        }\n    }\n\n}\n","import { clamp } from \"../util\";\nimport { DEFAULT_GAIN_VALUE, MAX_GAIN_VALUE, MIN_GAIN_VALUE } from \"./constants\";\n\nconst PREFERENCES_MUSIC_GAIN_KEY = \"audio.music.gain\";\nconst PREFERENCES_SFX_GAIN_KEY = \"audio.sfx.gain\";\n\nclass MusicPreferencesStore {\n    public constructor() {\n        if (window.localStorage.getItem(PREFERENCES_MUSIC_GAIN_KEY) == null) {\n            this.gain = DEFAULT_GAIN_VALUE;\n        }\n    }\n\n    public get gain(): number {\n        return clamp((Number(window.localStorage.getItem(PREFERENCES_MUSIC_GAIN_KEY) ?? DEFAULT_GAIN_VALUE)), MIN_GAIN_VALUE, MAX_GAIN_VALUE);\n    }\n\n    public set gain(value: number) {\n        window.localStorage.setItem(PREFERENCES_MUSIC_GAIN_KEY, value.toFixed(2));\n    }\n}\n\nclass SfxPreferencesStore {\n    public constructor() {\n        if (window.localStorage.getItem(PREFERENCES_SFX_GAIN_KEY) == null) {\n            this.gain = DEFAULT_GAIN_VALUE;\n        }\n    }\n\n    public get gain(): number {\n        return clamp((Number(window.localStorage.getItem(PREFERENCES_SFX_GAIN_KEY) ?? DEFAULT_GAIN_VALUE)), MIN_GAIN_VALUE, MAX_GAIN_VALUE);\n    }\n\n    public set gain(value: number) {\n        window.localStorage.setItem(PREFERENCES_SFX_GAIN_KEY, value.toFixed(2));\n    }\n}\n\nexport class AudioPreferencesStore {\n    readonly #music: MusicPreferencesStore;\n    readonly #sfx: SfxPreferencesStore;\n\n    public get music(): MusicPreferencesStore {\n        return this.#music;\n    }\n\n    public get sfx(): SfxPreferencesStore {\n        return this.#sfx;\n    }\n\n    public constructor() {\n        this.#music = new MusicPreferencesStore();\n        this.#sfx = new SfxPreferencesStore();\n    }\n}\n","import { clamp } from \"../util\";\nimport { getAudioContext } from \"./AudioContext\";\nimport { AudioManager } from \"./AudioManager\";\nimport { SoundChannel } from \"./SoundChannel\";\n\nexport class Sound {\n    readonly #audioManager: AudioManager;\n    readonly #channel: SoundChannel;\n    private readonly gainNode: GainNode;\n    private source: AudioBufferSourceNode | null = null;\n    private loop: boolean = false;\n\n    private constructor(private readonly buffer: AudioBuffer, channel: SoundChannel) {\n        this.#audioManager = AudioManager.getInstance();\n        this.#channel = channel;\n        this.gainNode = getAudioContext().createGain();\n        let gainNode: GainNode;\n        switch (this.#channel) {\n            case SoundChannel.MUSIC:\n                gainNode = this.audioManager.musicGainNode;\n                break;\n            case SoundChannel.SFX:\n                gainNode = this.audioManager.sfxGainNode;\n                break;\n            default:\n                throw new Error(`Unknown sound channel: ${channel}.`);\n        }\n        this.gainNode.connect(gainNode);\n    }\n\n    public get audioManager(): AudioManager {\n        return this.#audioManager;\n    }\n\n    public static async load(url: string, channel:  SoundChannel = SoundChannel.SFX): Promise<Sound> {\n        const arrayBuffer = await (await fetch(url)).arrayBuffer();\n        const buffer = await getAudioContext().decodeAudioData(arrayBuffer);\n        return new Sound(buffer, channel);\n    }\n\n    public isPlaying(): boolean {\n        return this.source != null;\n    }\n\n    public play(): void {\n        if (!this.isPlaying()) {\n            const source = getAudioContext().createBufferSource();\n            source.buffer = this.buffer;\n            source.loop = this.loop;\n            source.connect(this.gainNode);\n\n            source.addEventListener(\"ended\", () => {\n                if (this.source === source) {\n                    this.source = null;\n                }\n            });\n\n            this.source = source;\n            source.start();\n        }\n    }\n\n    public stop(): void {\n        if (this.source) {\n            try {\n                this.source.stop();\n            } catch (e) {\n                // Ignored. Happens on Safari sometimes. Can't stop a sound which may not be really playing?\n            }\n\n            this.source = null;\n        }\n    }\n\n    public setLoop(loop: boolean): void {\n        this.loop = loop;\n\n        if (this.source) {\n            this.source.loop = loop;\n        }\n    }\n\n    public setVolume(volume: number): void {\n        const gain = this.gainNode.gain;\n        gain.value = clamp(volume, gain.minValue, gain.maxValue);\n    }\n}\n","/**\n * Enumeration of the different sound channels.\n * Volumes of channels can be set independently.\n */\n export enum SoundChannel {\n    /** Used to identify the channel to output music. */\n    MUSIC = \"music\",\n    /** Used to identity the channel to output sound effects. */\n    SFX = \"sfx\"\n}\n","import { Entity, type EntityArgs } from \"../Entity\";\nimport { type GameObjectInfo } from \"../MapInfo\";\nimport { type AmbientSoundId } from \"../scenes/AmbientSoundId\";\nimport { type GameScene } from \"../scenes/GameScene\";\nimport { calculateVolume } from \"../util\";\nimport { type Sound } from \"./Sound\";\n\nexport interface SoundEmitterArgs extends EntityArgs {\n    sound: Sound;\n    maxVolume: number;\n    intensity: number;\n}\n\n/**\n * Sound emitters are invisible entities that emit a sound in relation to the player distance.\n * Might be better to set the volume according to the camera center in the future.\n */\nexport class SoundEmitter extends Entity {\n    private readonly sound: Sound;\n    private readonly maxVolume: number;\n    private readonly intensity: number;\n\n    public constructor({ sound, maxVolume, intensity, ...args }: SoundEmitterArgs) {\n        super({ width: 1, height: 1, ...args });\n\n        this.sound = sound;\n        this.maxVolume = maxVolume;\n        this.intensity = intensity;\n    }\n\n    public override draw(): void {\n        // Intentionally left empty.\n    }\n\n    public override update(): void {\n        const vol = this.scene.paused ? 0 : calculateVolume(\n            this.distanceToPlayer, this.maxVolume, this.intensity\n        );\n\n        if (vol) {\n            this.sound.setVolume(vol);\n\n            if (!this.sound.isPlaying()) this.sound.play();\n        } else {\n            this.sound.stop();\n        }\n    }\n\n    public static fromGameObjectInfo(\n        scene: GameScene, gameObjectInfo: GameObjectInfo\n    ): SoundEmitter {\n        const soundId = gameObjectInfo.properties.sound;\n        const volume = gameObjectInfo.properties.volume ?? 1;\n        const intensity = gameObjectInfo.properties.intensity ?? 1;\n\n        if (soundId != null) {\n            const sound = scene.ambientSounds[soundId as AmbientSoundId];\n\n            if (sound != null) {\n                return new SoundEmitter({\n                    scene,\n                    x: gameObjectInfo.x,\n                    y: gameObjectInfo.y,\n                    sound,\n                    maxVolume: volume,\n                    intensity\n                });\n            } else {\n                throw new Error(\n                    `Cannot create sound emitter because '${soundId}' is not a valid ambient sound ID.`\n                );\n            }\n        } else {\n            throw new Error(\"Cannot create sound emitter because 'sound' property is empty.\");\n        }\n    }\n}\n","export const MIN_GAIN_VALUE = 0.0;\nexport const MAX_GAIN_VALUE = 1.0;\nexport const DEFAULT_GAIN_VALUE = MAX_GAIN_VALUE;\n","import { type FullscreenManager as IFullscreenManager } from \"../../shared/FullscreenManager\";\nimport { WebFullscreenManager } from \"./WebFullscreenManager\";\n\nexport type FullscreenManager = IFullscreenManager;\nexport namespace FullscreenManager {\n    export const getInstance = (): IFullscreenManager => fullscreenManager;\n}\n\nconst fullscreenManager: IFullscreenManager = new WebFullscreenManager();\n","import { type FullscreenManager } from \"../../shared/FullscreenManager\";\n\n/**\n * Fullscreen management suitable for modern browsers.\n */\nexport class WebFullscreenManager implements FullscreenManager {\n    public async isEnabled(): Promise<boolean> {\n        return Promise.resolve(document.fullscreenEnabled && document.fullscreenElement != null);\n    }\n\n    public async setEnabled(fullscreen: boolean): Promise<void> {\n        const currentFullscreenElement = document.fullscreenElement;\n        if (!document.fullscreenEnabled) {\n            return Promise.resolve();\n        } else if (fullscreen && currentFullscreenElement !== document.documentElement) {\n            return document.documentElement.requestFullscreen({ navigationUI: \"hide\" });\n        } else if (!fullscreen && currentFullscreenElement != null) {\n            return document.exitFullscreen();\n        }\n    }\n}\n","const { PI, cos, sin } = Math;\n\nexport type Easing = (t: number) => number;\n\nexport function linear(t: number): number {\n    return t;\n}\n\nexport function easeInSine(t: number): number {\n    return 1 - cos(t * PI / 2);\n}\n\nexport function easeOutSine(t: number): number {\n    return sin(t * PI / 2);\n}\n\nexport function easeInOutSine(t: number): number {\n    return 0.5 - cos(PI * t) / 2;\n}\n\nexport function easeInQuad(t: number): number {\n    return t * t;\n}\n\nexport function easeOutQuad(t: number): number {\n    return t * (2 - t);\n}\n\nexport function easeInOutQuad(t: number): number {\n    if (t < 0.5) {\n        return 2 * t * t;\n    } else {\n        return 4 * t - 2 * t * t - 1;\n    }\n}\n\nexport function easeInCubic(t: number): number {\n    return t ** 3;\n}\n\nexport function easeOutCubic(t: number): number {\n    return t ** 3 + 3 * (t - t * t);\n}\n\nexport function easeInOutCubic(t: number): number {\n    if (t < 0.5) {\n        return 4 * t ** 3;\n    } else {\n        return 4 * t ** 3 + 12 * (t - t * t) - 3;\n    }\n}\n\nexport function easeInQuart(t: number): number {\n    return t ** 4;\n}\n\nexport function easeOutQuart(t: number): number {\n    return 1 - (t - 1) ** 4;\n}\n\nexport function easeInOutQuart(t: number): number {\n    if (t < 0.5) {\n        return 8 * t ** 4;\n    } else {\n        return 1 - 8 * (t - 1) ** 4;\n    }\n}\n\nexport function easeInQuint(t: number): number {\n    return t ** 5;\n}\n\nexport function easeOutQuint(t: number): number {\n    return 1 + (t - 1) ** 5;\n}\n\nexport function easeInOutQuint(t: number): number {\n    if (t < 0.5) {\n        return 16 * t ** 5;\n    } else {\n        return 1 + 16 * (t - 1) ** 5;\n    }\n}\n\nexport function easeInExpo(t: number): number {\n    if (t <= 0) { return 0; }\n    return 2 ** (10 * (t - 1));\n}\n\nexport function easeOutExpo(t: number): number {\n    if (t >= 1) {\n        return 1;\n    }\n    return 1 - 1 / 1024 ** t;\n}\n\nexport function easeInOutExpo(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    if (t < 0.5) {\n        return 1048576 ** t / 2048;\n    } else {\n        return 1 - 512 / 1048576 ** t;\n    }\n}\n\nexport function easeInCirc(t: number): number {\n    return 1 - (1 - t * t) ** 0.5;\n}\n\nexport function easeOutCirc(t: number): number {\n    return (2 * t - t * t) ** 0.5;\n}\n\nexport function easeInOutCirc(t: number): number {\n    if (t < 0.5) {\n        return 0.5 - (0.25 - t * t) ** 0.5;\n    } else {\n        return ((4 * t * (2 - t) - 3) ** 0.5 + 1) / 2;\n    }\n}\n\nexport function easeInBack(t: number): number {\n    return 2.70158 * t ** 3 - 1.70158 * t * t;\n}\n\nexport function easeOutBack(t: number): number {\n    return 2.70158 * t ** 3 - 6.40316 * t * t + 4.70158 * t;\n}\n\nexport function easeInOutBack(t: number): number {\n    if (t < 0.5) {\n        return 14.379638 * t ** 3 - 5.189819 * t * t;\n    } else {\n        return 14.379638 * t ** 3 - 37.949095 * t * t + 32.759276 * t - 8.189819;\n    }\n}\n\nexport function easeInElastic(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    return 1024 ** (t - 1) * -sin(PI * (20 * t / 3 - 43 / 6));\n}\n\nexport function easeOutElastic(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    return sin(PI * (20 * t / 3 - 0.5)) / (1024 ** t) + 1;\n}\n\nexport function easeInOutElastic(t: number): number {\n    if (t <= 0) {\n        return 0;\n    }\n    if (t >= 1) {\n        return 1;\n    }\n    if (t < 0.5) {\n        return 1048576 ** t / -2048 * sin(PI * (80 * t / 9 - 89 / 18));\n    } else {\n        return 512 / 1048576 ** t * sin(PI * (80 * t / 9 - 89 / 18)) + 1;\n    }\n}\n\nexport function easeOutBounce(t: number): number {\n    if (t < 4 / 11) {\n        return 121 * t * t / 16;\n    } else if (t < 8 / 11) {\n        return 121 * t * t / 16 - 33 * t / 4 + 3;\n    } else if (t < 10 / 11) {\n        return 121 * t * t / 16 - 99 * t / 8 + 6;\n    } else {\n        return 121 * t * t / 16 - 231 * t / 16 + 63 / 8;\n    }\n}\n\nexport function easeInBounce(t: number): number {\n    return 1 - easeOutBounce(1 - t);\n}\n\nexport function easeInOutBounce(t: number): number {\n    if (t < 0.5) {\n        return easeInBounce(t * 2) / 2;\n    } else {\n        return easeOutBounce(t * 2 - 1) / 2 + 0.5;\n    }\n}\n","import { DOUBLE_JUMP_COLORS, GRAVITY, PETTING_ENDING_CUTSCENE_DURATION, PLAYER_ACCELERATION_AIR } from \"../../shared/constants\";\nimport conversation from \"./../../../assets/dialog/bird.dialog.json\";\nimport { Aseprite } from \"./../Aseprite\";\nimport { asset } from \"./../Assets\";\nimport { Sound } from \"./../audio/Sound\";\nimport { Conversation } from \"./../Conversation\";\nimport { entity, EntityArgs } from \"./../Entity\";\nimport { type ParticleEmitter, valueCurves } from \"./../Particles\";\nimport { RenderingLayer } from \"./../Renderer\";\nimport { calculateVolume, rnd, rndItem } from \"./../util\";\nimport { Environment } from \"./../World\";\nimport { NPC } from \"./NPC\";\n\nenum BirdState {\n    WAITING_LEFT,\n    FLYING_RIGHT,\n    WAITING_RIGHT,\n    FLYING_LEFT\n}\n\nconst WAITING_TIME = 5;\nconst JUMP_INTERVAL = 0.3;\nconst MAX_SPEED = 4;\n\n@entity(\"bird\")\nexport class Bird extends NPC {\n    @asset(\"sprites/bird.aseprite.json\")\n    private static readonly sprite: Aseprite;\n    @asset(\"sounds/jumping/jump_neutral.ogg\")\n    private static readonly jumpSound: Sound;\n    private readonly doubleJumpEmitter: ParticleEmitter;\n    private move: 0 | 1 | -1  = 1;\n    private readonly minAltitude: number;\n    private readonly jumpHeight = 1.5;\n    private waitTimer = 0;\n    private state = BirdState.WAITING_LEFT;\n    private jumpTimer = 0;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 28, height: 24, ...args });\n        this.minAltitude = args.y;\n        this.conversation = new Conversation(conversation, this);\n\n        this.doubleJumpEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 90, y: rnd(-1, 0) * 100 }),\n            color: () => rndItem(DOUBLE_JUMP_COLORS),\n            size: rnd(1, 2),\n            gravity: {x: 0, y: -120},\n            lifetime: () => rnd(0.4, 0.6),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n        this.setMaxVelocity(MAX_SPEED);\n    }\n\n    private isWaiting(): boolean {\n        return this.state === BirdState.WAITING_LEFT || this.state === BirdState.WAITING_RIGHT;\n    }\n\n    protected jump(): void {\n        this.jumpTimer = JUMP_INTERVAL;\n        this.setVelocityY(Math.sqrt(2 * this.jumpHeight * GRAVITY));\n        this.doubleJumpEmitter.setPosition(this.x, this.y + 20);\n\n        if (!this.scene.pettingCutscene) {\n            this.doubleJumpEmitter.emit(20);\n\n            const vol = calculateVolume(this.distanceToPlayer, 0.4);\n            if (vol > 0) {\n                Bird.jumpSound.setVolume(vol);\n                Bird.jumpSound.stop();\n                Bird.jumpSound.play();\n            }\n        }\n    }\n\n    protected canJump(): boolean {\n        return this.jumpTimer === 0;\n    }\n\n    protected override updatePosition(newX: number, newY: number): void {\n        this.x = newX;\n        this.y = newY;\n\n        // Check collision with the environment and correct player position and movement\n        if (this.pullOutOfGround() !== 0 || this.pullOutOfCeiling() !== 0) {\n            this.setVelocityY(0);\n        }\n\n        if (this.pullOutOfWall() !== 0) {\n            this.setVelocityX(0);\n        }\n    }\n\n    private pullOutOfGround(): number {\n        let pulled = 0, col = 0;\n\n        if (this.getVelocityY() <= 0) {\n            const world = this.scene.world;\n            const height = world.getHeight();\n            col = world.collidesWith(this.x, this.y, [ this ], [ Environment.WATER ]);\n\n            while (this.y < height && col) {\n                pulled++;\n                this.y++;\n                col = world.collidesWith(this.x, this.y);\n            }\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfCeiling(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        while (\n            this.y > 0\n            && world.collidesWith(\n                this.x, this.y + this.height,\n                [ this ],\n                [ Environment.PLATFORM, Environment.WATER ]\n            )\n        ) {\n            pulled++;\n            this.y--;\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfWall(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        if (this.getVelocityX() > 0) {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x + this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x--;\n                pulled++;\n            }\n        } else {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x - this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x++;\n                pulled++;\n            }\n        }\n\n        return pulled;\n    }\n\n    private nextState(): void {\n        if (this.state === BirdState.FLYING_LEFT) {\n            this.state = BirdState.WAITING_LEFT;\n        } else {\n            this.state = this.state + 1;\n        }\n    }\n\n    public override isReadyForConversation(): boolean | null {\n        const superResult = super.isReadyForConversation();\n        return (superResult === true && this.isWaiting());\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        let alpha: number | undefined;\n        if (this.scene.pettingCutscene) {\n            alpha = Math.max(0, 1 - (this.scene.pettingCutsceneTime / PETTING_ENDING_CUTSCENE_DURATION));\n        }\n\n        this.scene.renderer.addAseprite(Bird.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES, this.direction, undefined, alpha);\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n        this.move = 0;\n\n        // Triggers\n        const triggerCollisions = this.scene.world.getTriggerCollisions(this);\n\n        if (this.jumpTimer > 0) {\n            this.jumpTimer -= dt;\n            if (this.jumpTimer < 0) {\n                this.jumpTimer = 0;\n            }\n        }\n\n        if ((this.state === BirdState.WAITING_LEFT || this.state === BirdState.WAITING_RIGHT) && !this.hasActiveConversation()) {\n            this.waitTimer += dt;\n            if (this.waitTimer >= WAITING_TIME) {\n                this.waitTimer = 0;\n                this.nextState();\n            }\n        }\n\n        if (this.state === BirdState.FLYING_RIGHT || this.state === BirdState.FLYING_LEFT) {\n            this.move = this.state === BirdState.FLYING_RIGHT ? 1 : -1;\n            if (this.y < this.minAltitude && this.canJump()) {\n                this.jump();\n            }\n\n            if (this.state === BirdState.FLYING_RIGHT && triggerCollisions.length > 0 && triggerCollisions.find(t => t.name === \"bird_nest_right\")) {\n                this.nextState();\n            }\n\n            if (this.state === BirdState.FLYING_LEFT && triggerCollisions.length > 0 && triggerCollisions.find(t => t.name === \"bird_nest_left\")) {\n                this.nextState();\n            }\n        }\n\n        // Bird acceleration\n        if (this.move !== 0) {\n            this.direction = this.move;\n            this.accelerateX(PLAYER_ACCELERATION_AIR * dt * this.move);\n        } else {\n            if (this.getVelocityX() > 0) {\n                this.decelerateX(PLAYER_ACCELERATION_AIR * dt);\n            } else {\n                this.decelerateX(-PLAYER_ACCELERATION_AIR * dt);\n            }\n        }\n\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { Environment } from \"../World\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\n\n@entity(\"bone\")\nexport class Bone extends PhysicsEntity {\n    @asset(\"sprites/bone.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/throwing/success.mp3\")\n    private static readonly successSound: Sound;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 20, height: 10, ...args });\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(Bone.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        const player = this.scene.player;\n\n        if (!this.isCarried() && this.distanceTo(player) < 20) {\n            player.carry(this);\n        }\n\n        if (!this.isCarried() && this.scene.world.collidesWith(this.x, this.y - 5) === Environment.WATER) {\n            const vx = this.getVelocityX();\n            this.setVelocity(vx, 10);\n        }\n\n        if (Conversation.getGlobals()[\"$gotBoneQuest\"] && !this.isCarried() && this.distanceTo(this.scene.powerShiba) < 20) {\n            Bone.successSound.play();\n            this.scene.powerShiba.feed();\n            this.scene.removeGameObject(this);\n        }\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Entity, entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\n\n@entity(\"campfire\")\nexport class Campfire extends Entity {\n    @asset(\"sprites/campfire.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 14, height: 28, isTrigger: false, ...args });\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(\n            Campfire.sprite,\n            \"idle\",\n            this.x, this.y - 2,\n            RenderingLayer.ENTITIES\n        );\n    }\n\n    public override update(): void {}\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { NPC } from \"./NPC\";\n\n@entity(\"caveman\")\nexport class Caveman extends NPC {\n    @asset(\"sprites/caveman.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 18, height: 24, ...args });\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            Caveman.sprite,\n            \"idle\",\n            this.x, this.y,\n            RenderingLayer.ENTITIES,\n            this.direction\n        );\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import conversation from \"../../../assets/dialog/chicken.dialog.json\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { NPC } from \"./NPC\";\n\n@entity(\"chicken\")\nexport class Chicken extends NPC {\n    @asset(\"sprites/chicken.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 24, height: 18, ...args });\n        this.lookAtPlayer = false;\n        this.conversation = new Conversation(conversation, this);\n    }\n\n    public override getInteractionText(): string {\n        if (!this.met) {\n            return \"Touch\";\n        } else {\n            return \"Talk\";\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            Chicken.sprite,\n            \"idle\",\n            this.x, this.y,\n            RenderingLayer.ENTITIES,\n            this.direction\n        );\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { PIXEL_PER_METER } from \"../../shared/constants\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { type ParticleEmitter, valueCurves } from \"../Particles\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { rnd, rndInt, timedRnd } from \"../util\";\nimport { Environment } from \"../World\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\n\n/** Cloud entity constructor arguments */\nexport interface CloudArgs extends EntityArgs {\n    /** Set to true to allow the cloud to rain. Defaults to false. */\n    canRain?: boolean;\n}\n\n@entity(\"cloud\")\nexport class Cloud extends PhysicsEntity {\n    @asset(\"sprites/cloud3.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"images/raindrop.png\")\n    private static readonly raindrop: HTMLImageElement;\n\n    private readonly rainEmitter: ParticleEmitter;\n    private raining = 0;\n    private readonly isRainCloud;\n\n    public constructor({ canRain = false, ...args }: CloudArgs) {\n        super({ width: 74, height: 5, ...args });\n        this.setFloating(true);\n        this.isRainCloud = canRain;\n        this.rainEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            offset: () => ({x: rnd(-1, 1) * 26, y: rnd(-1, 1) * 5}),\n            velocity: () => ({\n                x: this.getVelocityX() * PIXEL_PER_METER + rnd(-1, 1) * 5,\n                y: this.getVelocityY() * PIXEL_PER_METER - rnd(50, 80)\n            }),\n            color: () => Cloud.raindrop,\n            size: 4,\n            gravity: {x: 0, y: -100},\n            lifetime: () => rnd(0.7, 1.2),\n            alpha: 0.6,\n            alphaCurve: valueCurves.linear.invert()\n        });\n    }\n\n    public startRain(time: number = Infinity): void {\n        this.raining = time;\n    }\n\n    public isRaining(): boolean {\n        return this.raining > 0;\n    }\n\n    public canRain(): boolean {\n        return this.isRainCloud;\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(\n            Cloud.sprite,\n            \"idle\",\n            this.x, this.y,\n            RenderingLayer.PLATFORMS\n        );\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        if (this.raining) {\n            this.raining -= dt;\n\n            if (this.raining <= 0) {\n                this.raining = 0;\n            } else {\n                if (timedRnd(dt, 0.1)) {\n                    this.rainEmitter.setPosition(this.x, this.y);\n                    this.rainEmitter.emit(rndInt(1, 4));\n                }\n            }\n        }\n    }\n\n    public collidesWith(x: number, y: number): number {\n        if (\n            x >= this.x - this.width / 2\n            && x <= this.x + this.width / 2\n            && y >= this.y\n            && y <= this.y + this.height\n        ) {\n            return Environment.PLATFORM;\n        }\n\n        return Environment.AIR;\n    }\n}\n","import { Conversation } from \"../Conversation\";\nimport { type EntityArgs } from \"../Entity\";\nimport { NPC } from \"./NPC\";\n\nexport interface ConversationProxyArgs extends EntityArgs {\n    content?: string;\n}\n\nexport class ConversationProxy extends NPC {\n    public override conversation: Conversation;\n\n    public constructor({ content, ...args }: ConversationProxyArgs) {\n        super({ width: 16, height: 16, ...args });\n\n        this.conversation = this.generateConversation(this.prepareContent(content));\n        this.scene.addGameObject(this);\n    }\n\n    private prepareContent(content?: string ): string[] {\n        if (content == null) {\n            return [\"Nothing…\"];\n        }\n\n        return content.split(\":::\");\n    }\n\n    private generateConversation(lines: string[]): Conversation {\n        const json: Record<string, string[]> = { \"entry\": [] };\n\n        lines.forEach((line, index) => {\n            if (index === lines.length - 1) {\n                line += \" @entry !end\";\n            }\n\n            json.entry.push(line);\n        });\n\n        return new Conversation(json, this);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(): void {\n        if (!this.hasActiveConversation()) {\n            this.scene.removeGameObject(this);\n        }\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { Entity, entity, type EntityArgs } from \"../Entity\";\n\nenum PortalAnimationState { OFF, FADEIN, IDLE }\n\n@entity(\"exitportal\")\nexport class ExitPortal extends Entity {\n    @asset(\"sprites/portal.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/portal/portal.ogg\")\n    private static readonly sound: Sound;\n\n    private animationState = PortalAnimationState.OFF;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 32, height: 50, isTrigger: false, ...args });\n        this.animator.assignSprite(ExitPortal.sprite);\n    }\n\n    public activate(): void {\n        if (this.animationState === PortalAnimationState.OFF) {\n            ExitPortal.sound.play();\n            this.nextAnimationState();\n        }\n    }\n\n    private nextAnimationState(): void {\n        this.animationState++;\n    }\n\n    public draw(): void {\n        switch (this.animationState) {\n            case PortalAnimationState.OFF:\n                this.animator.play(\"empty\", 1);\n                break;\n            case PortalAnimationState.FADEIN:\n                this.animator.play(\"fadein\", 1, { loop: false, callback: this.nextAnimationState.bind(this) });\n                break;\n            case PortalAnimationState.IDLE:\n                this.animator.play(\"idle\", 1);\n                break;\n        }\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n    }\n}\n","import { PIXEL_PER_METER } from \"../../shared/constants\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { SoundEmitter } from \"../audio/SoundEmitter\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { EyeType, Face, FaceModes } from \"../Face\";\nimport { FireGfx } from \"../FireGfx\";\nimport { type ParticleEmitter, valueCurves } from \"../Particles\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { RenderingLayer, RenderingType } from \"../Renderer\";\nimport { rnd, rndInt, shiftValue, sleep } from \"../util\";\nimport { FireState } from \"./FireState\";\nimport { NPC } from \"./NPC\";\nimport { ShibaState } from \"./ShibaState\";\nimport { type Wood } from \"./Wood\";\n\nexport const SHRINK_SIZE = 2;\n\n@entity(\"fire\")\nexport class Fire extends NPC {\n    @asset(\"images/smoke.png\")\n    private static readonly smokeImage: HTMLImageElement;\n\n    @asset(\"images/steam.png\")\n    private static readonly steamImage: HTMLImageElement;\n\n    @asset(\"sounds/fire/fire.ogg\")\n    private static readonly fireAmbience: Sound;\n    private readonly soundEmitter: SoundEmitter;\n\n    public intensity = 5;\n\n    public state = FireState.IDLE;\n\n    public angry = false; // fire will be angry once wood was fed\n\n    public beingPutOut = false;\n\n    public growthTarget = 5;\n\n    public growth = 1;\n\n    private readonly averageParticleDelay = 0.1;\n    private readonly averageSteamDelay = 0.05;\n\n    private isVisible = true;\n\n    private readonly fireGfx = new FireGfx();\n\n    private readonly sparkEmitter: ParticleEmitter;\n    private readonly smokeEmitter: ParticleEmitter;\n    private readonly steamEmitter: ParticleEmitter;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 1.5 * PIXEL_PER_METER, height: 1.85 * PIXEL_PER_METER, ...args });\n\n        this.soundEmitter = new SoundEmitter({\n            scene: this.scene,\n            x: this.x,\n            y: this.y,\n            sound: Fire.fireAmbience,\n            maxVolume: 0.7,\n            intensity: 0.2\n        });\n\n        this.smokeEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            offset: () => ({ x: rnd(-1, 1) * 3 * this.intensity, y: rnd(2) * this.intensity }),\n            velocity: () => ({ x: rnd(-1, 1) * 15, y: 4 + rnd(3) }),\n            color: () => Fire.smokeImage,\n            size: () => rndInt(24, 32),\n            gravity: {x: 0, y: 8},\n            lifetime: () => rnd(5, 8),\n            alpha: () => rnd(0.2, 0.45),\n            angleSpeed: () => rnd(-1, 1) * 1.5,\n            blendMode: \"source-over\",\n            alphaCurve: valueCurves.cos(0.1, 0.5),\n            breakFactor: 0.85\n        });\n\n        this.steamEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x + 10, y: this.y},\n            offset: () => ({ x: rnd(-1, 1) * 3, y: 0 }),\n            velocity: () => ({ x: rnd(-1, 2) * 5, y: 50 + rnd(3) }),\n            color: () => Fire.steamImage,\n            size: () => rndInt(12, 18),\n            gravity: {x: 0, y: 8},\n            lifetime: () => rnd(1, 3),\n            alpha: () => rnd(0.5, 0.8),\n            angleSpeed: () => rnd(-1, 1) * 3,\n            blendMode: \"source-over\",\n            alphaCurve: valueCurves.cos(0.1, 0.5),\n            renderingLayer: RenderingLayer.ENTITIES,\n            zIndex: 1,\n            breakFactor: 0.5\n        });\n\n        this.sparkEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 30, y: rnd(50, 100) }),\n            color: () => FireGfx.gradient.getCss(rnd() ** 0.5),\n            size: 2,\n            gravity: {x: 0, y: -100},\n            lifetime: () => rnd(1, 1.5),\n            blendMode: \"screen\",\n            alpha: () => rnd(0.3, 1),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n\n        this.face = new Face(this.scene, this, EyeType.STANDARD, 0, 6);\n    }\n\n    public override showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.JUST_ARRIVED ||\n            (\n                this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.GOT_WOOD &&\n                this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.TALKED_TO_FIRE_WITH_WOOD\n            ) ||\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.THROWN_WOOD_INTO_FIRE ||\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() === QuestATrigger.BEAT_FIRE\n        );\n    }\n\n    public isRendered(): boolean {\n        return this.isVisible;\n    }\n\n    public isAngry(): boolean {\n        return this.state === FireState.ANGRY;\n    }\n\n    public isBeingPutOut(): boolean {\n        return this.state === FireState.BEING_PUT_OUT;\n    }\n\n    public isPutOut(): boolean {\n        return this.state === FireState.PUT_OUT;\n    }\n\n    public setState(state: FireState): void {\n        this.state = state;\n        if (state === FireState.BEING_PUT_OUT || state === FireState.PUT_OUT) {\n            Fire.fireAmbience.stop();\n        }\n    }\n\n    public drawToCanvas(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n        ctx.translate(this.x, -this.y);\n        ctx.scale(this.intensity / 5, this.intensity / 5);\n        this.fireGfx.draw(ctx, 0, 0);\n\n        ctx.restore();\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (!this.isVisible) {\n            return;\n        }\n\n        this.scene.renderer.add({ type: RenderingType.FIRE, layer: RenderingLayer.ENTITIES, entity: this });\n        this.drawFace(ctx);\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        if (this.thinkBubble) {\n            this.thinkBubble.draw(ctx);\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        if (this.state === FireState.ANGRY && !this.beingPutOut) {\n            this.face?.setMode(FaceModes.ANGRY);\n        } else if (this.state === FireState.BEING_PUT_OUT) {\n            this.face?.setMode(FaceModes.DISGUSTED);\n        }\n\n        if (this.intensity !== this.growthTarget) {\n            this.intensity = shiftValue(this.intensity, this.growthTarget, this.growth * dt);\n        }\n\n        if (\n            this.scene.friendshipCutscene\n            && this.scene.shiba.getState() === ShibaState.KILLING_FIRE\n            && this.intensity <= SHRINK_SIZE\n        ) {\n            this.scene.shiba.nextState();\n        }\n\n        if (!this.scene.camera.isPointVisible(this.x, this.y, 200)) {\n            this.isVisible = false;\n            return;\n        }\n\n        this.isVisible = true;\n\n        if (!this.isBeingPutOut() && !this.isPutOut()) {\n            let particleChance = dt - rnd() * this.averageParticleDelay;\n\n            while (particleChance > 0) {\n                if (rnd() < 0.5) {\n                    this.sparkEmitter.emit();\n                }\n\n                if (rnd() < 0.32) {\n                    this.smokeEmitter.emit();\n                }\n\n                particleChance -= rnd() * this.averageParticleDelay;\n            }\n\n            this.soundEmitter.update();\n        }\n\n        if (this.isBeingPutOut()) {\n            let steamParticleChance = dt - rnd() * this.averageSteamDelay;\n\n            while (steamParticleChance > 0) {\n                this.steamEmitter.emit();\n                steamParticleChance -= rnd() * this.averageSteamDelay;\n            }\n        }\n\n        if (this.isVisible) {\n            this.fireGfx.update();\n        }\n\n        if (this.showDialoguePrompt()) {\n            this.dialoguePrompt.update(dt, this.x, this.y + 32);\n        }\n\n        this.speechBubble.update(this.x, this.y);\n    }\n\n    public async feed(wood: Wood): Promise<void> {\n        wood.remove();\n\n        this.scene.setGateDisabled(\"shadowgate_door_1\", false);\n\n        // Handle end of the world\n        this.state = FireState.ANGRY;\n        this.growthTarget = 14;\n\n        this.scene.startApocalypseMusic();\n\n        // Disable remaining dialogs\n        this.conversation = null;\n\n        // Remove any reachable NPCs\n        for (const npc of [this.scene.shadowPresence]) {\n            if (npc != null) {\n                this.scene.removeGameObject(npc);\n            }\n        }\n\n        // Player thoughts (Though message, Delay in milliseconds, duration in milliseconds)\n        const thoughts = [\n            [\"What…\", 2000, 2000],\n            [\"What have I done?\", 2000, 3000],\n            [\"I trusted you! I helped you!\", 2000, 3000]\n        ] as const;\n        for (const [ thought, delay, duration ] of thoughts) {\n            await sleep(delay);\n            await this.scene.player.think(thought, duration);\n        }\n        await sleep(500);\n        this.scene.game.campaign.runAction(\"enable\", null, [\"fire\", \"fire2\"]);\n    }\n}\n","export enum FireState {\n    IDLE,\n    ANGRY,\n    BEING_PUT_OUT,\n    PUT_OUT\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { SoundEmitter } from \"../audio/SoundEmitter\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { EyeType, Face, FaceModes } from \"../Face\";\nimport { type GameObjectInfo } from \"../MapInfo\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { rndItem } from \"../util\";\nimport { ScriptableNPC } from \"./ScriptableNPC\";\nimport { type Wood } from \"./Wood\";\n\nexport enum FlameBoyState {\n    VENDOR,\n    WAITING_FOR_DIALOG,\n    IDLE\n}\n\nconst IDLE_DURATION = [2, 3, 4];\nconst WALK_DURATION = [1, 1.5, 2];\nconst ACCELERATION = 15;\n\n@entity(\"flameboy\")\nexport class FlameBoy extends ScriptableNPC {\n    @asset(\"sprites/flameboy.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/fire/fire2.ogg\")\n    private static readonly fireAmbience: Sound;\n    private readonly soundEmitter: SoundEmitter;\n\n    private state = FlameBoyState.VENDOR;\n    private idleTimer: number | null = rndItem(IDLE_DURATION);\n    private walkTimer: number | null = null;\n    private autoMoveDirection: 1 | -1 = 1;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 26, height: 54, ...args });\n        this.setMaxVelocity(3);\n        this.face = new Face(this.scene, this, EyeType.FLAMEBOY, 0, 5);\n        this.defaultFaceMode = FaceModes.BORED;\n        this.face.setMode(this.defaultFaceMode);\n        this.soundEmitter = new SoundEmitter({\n            scene: this.scene,\n            x: this.x,\n            y: this.y,\n            sound: FlameBoy.fireAmbience,\n            maxVolume: 0.7,\n            intensity: 0.2\n        });\n    }\n\n    public setState(state: FlameBoyState): void {\n        this.state = state;\n    }\n\n    public getState(): FlameBoyState {\n        return this.state;\n    }\n\n    public feed(wood: Wood): void {\n        wood.remove();\n        this.scene.game.campaign.runAction(\"giveWoodToFlameboy\");\n        void this.think(\"Well, that was unexpected…\", 2000);\n        this.nextState();\n    }\n\n    public nextState(): void {\n        this.state++;\n        if (this.state === FlameBoyState.WAITING_FOR_DIALOG) {\n            this.defaultFaceMode = FaceModes.NEUTRAL;\n            this.face = new Face(this.scene, this, EyeType.FLAMEBOY2, 0, 2);\n        }\n    }\n\n    protected override showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        const thrownStoneIntoWater = (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.THROWN_STONE_INTO_WATER\n            && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_MULTIJUMP\n        );\n        const waitingForWoodDialog = this.state === FlameBoyState.WAITING_FOR_DIALOG;\n\n        return thrownStoneIntoWater || waitingForWoodDialog;\n    }\n\n    private getAnimationTag(): string {\n        switch (this.state) {\n            case FlameBoyState.VENDOR: return \"idle\";\n            default: return \"idle2\";\n        }\n    }\n\n    private walkRandomly(triggerCollisions: GameObjectInfo[], dt: number): void {\n        if (triggerCollisions.length > 0) {\n            const event = triggerCollisions.find(t => t.name === \"flameboy_action\");\n\n            if (event != null && event.properties.velocity != null) {\n                this.autoMoveDirection = event.properties.velocity > 0 ? 1 : -1;\n                this.move = this.autoMoveDirection;\n            }\n        }\n\n        if (this.idleTimer !== null && this.idleTimer >= 0) {\n            this.idleTimer -= dt;\n        }\n\n        if (this.walkTimer !== null && this.walkTimer >= 0) {\n            this.walkTimer -= dt;\n        }\n\n        if (this.idleTimer != null && this.idleTimer <= 0 && this.walkTimer === null) {\n            this.walkTimer = rndItem(WALK_DURATION);\n            this.idleTimer = null;\n            this.move = this.autoMoveDirection;\n        }\n\n        if (this.walkTimer != null && this.walkTimer <= 0 && this.idleTimer === null) {\n            this.idleTimer = rndItem(IDLE_DURATION);\n            this.walkTimer = null;\n            this.move = 0;\n        }\n    }\n\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (this.move === 0) {\n            this.scene.renderer.addAseprite(\n                FlameBoy.sprite, this.getAnimationTag(), this.x, this.y, RenderingLayer.ENTITIES, this.direction\n            );\n        } else {\n            this.scene.renderer.addAseprite(\n                FlameBoy.sprite, \"walk\", this.x, this.y, RenderingLayer.ENTITIES, this.direction\n            );\n        }\n\n        this.drawFace(ctx, false);\n\n        if (this.thinkBubble) {\n            this.thinkBubble.draw(ctx);\n        }\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        // Triggers\n        const triggerCollisions = this.scene.world.getTriggerCollisions(this);\n\n        if (this.hasActiveConversation()) {\n            this.move = 0;\n        } else {\n            if (this.state === FlameBoyState.IDLE) {\n                this.walkRandomly(triggerCollisions, dt);\n            }\n        }\n\n        if (this.move !== 0) {\n            this.direction = this.move;\n            this.accelerateX(ACCELERATION * dt * this.move);\n        } else {\n            if (this.getVelocityX() > 0) {\n                this.decelerateX(ACCELERATION * dt);\n            } else {\n                this.decelerateX(-ACCELERATION * dt);\n            }\n        }\n\n        if (this.thinkBubble) {\n            this.thinkBubble.update(this.x, this.y);\n        }\n\n        this.dialoguePrompt.update(dt, this.x, this.y + 32);\n        this.speechBubble.update(this.x, this.y);\n        this.soundEmitter.update();\n    }\n}\n","import conversation from \"../../../assets/dialog/mimic.dialog.json\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { NPC } from \"./NPC\";\n\nenum MimicState { SLEEPING, OPEN_UP, IDLE }\n\n@entity(\"mimic\")\nexport class Mimic extends NPC {\n    @asset(\"sprites/mimic.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/item/chest.ogg\")\n    private static readonly openingSound: Sound;\n\n    private state = MimicState.SLEEPING;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 46, height: 24, ...args });\n        this.lookAtPlayer = false;\n        this.direction = 1;\n        this.conversation = new Conversation(conversation, this);\n        this.animator.assignSprite(Mimic.sprite);\n    }\n\n    public nextState(): void {\n        this.state++;\n\n        if (this.state === MimicState.OPEN_UP) {\n            Mimic.openingSound.play();\n        }\n    }\n\n    public override getInteractionText(): string {\n        if (!this.met) {\n            return \"Open\";\n        } else {\n            return \"Talk\";\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        switch (this.state) {\n            case MimicState.SLEEPING:\n                this.animator.play(\"sleeping\", this.direction);\n                break;\n            case MimicState.OPEN_UP:\n                this.animator.play(\"open\", this.direction, { loop: false, callback: this.nextState.bind(this) });\n                break;\n            case MimicState.IDLE:\n                this.animator.play(\"idle\", this.direction);\n                break;\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { PIXEL_PER_METER } from \"../../shared/constants\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { type CollidableGameObject } from \"../scenes/GameObject\";\nimport { Environment } from \"../World\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\n\n/** Platform movement direction. */\nexport type CloudDirection = \"up\" | \"down\" | \"right\" | \"left\";\n\n/** Moving platform entity constructor arguments */\nexport interface MovingEntityArgs extends EntityArgs {\n    /** Initial movement direction of the platform. Defaults to \"up\". */\n    direction?: CloudDirection;\n\n    /** Platform movement velocity. Defaults to 0. */\n    velocity?: number;\n\n    /** How far the platform moves before it changes movement into opposite direction. Defaults to 0. */\n    distance?: number;\n}\n\n@entity(\"movingplatform\")\nexport class MovingPlatform extends PhysicsEntity implements CollidableGameObject {\n    @asset(\"sprites/stoneplatform.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    private readonly startX: number;\n    private readonly startY: number;\n    private readonly targetX: number;\n    private readonly targetY: number;\n    private readonly velocity: number;\n\n    public constructor({ direction = \"up\",  velocity = 0, distance = 0, ...args }: MovingEntityArgs) {\n        super({ width: 68, height: 12, ...args });\n        this.setFloating(true);\n        const { x, y } = this;\n        this.startX = this.targetX = x;\n        this.startY = this.targetY = y;\n        this.velocity = velocity / PIXEL_PER_METER;\n        if (direction === \"right\") {\n            this.targetX = x + distance;\n            this.setVelocityX(this.velocity);\n        } else if (direction === \"left\") {\n            this.targetX = x - distance;\n            this.setVelocityX(-this.velocity);\n        } else if (direction === \"up\") {\n            this.targetY = y + distance;\n            this.setVelocityY(this.velocity);\n        } else if (direction === \"down\") {\n            this.targetY = y - distance;\n            this.setVelocityY(-this.velocity);\n        }\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(MovingPlatform.sprite, \"idle\", this.x, this.y, RenderingLayer.PLATFORMS);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        if (this.getVelocityY() > 0) {\n            if (this.y >= Math.max(this.startY, this.targetY)) {\n                this.y = Math.max(this.startY, this.targetY);\n                this.setVelocityY(-this.velocity);\n            }\n        } else if (this.getVelocityY() < 0) {\n            if (this.y <= Math.min(this.startY, this.targetY)) {\n                this.y = Math.min(this.startY, this.targetY);\n                this.setVelocityY(this.velocity);\n            }\n        }\n\n        if (this.getVelocityX() > 0) {\n            if (this.x >= Math.max(this.targetX, this.startX)) {\n                this.x = Math.max(this.targetX, this.startX);\n                this.setVelocityX(-this.velocity);\n            }\n        } else if (this.getVelocityX() < 0) {\n            if (this.x <= Math.min(this.startX, this.targetX)) {\n                this.x = Math.min(this.startX, this.targetX);\n                this.setVelocityX(this.velocity);\n            }\n        }\n    }\n\n    public collidesWith(x: number, y: number): number {\n        if (\n            x >= this.x - this.width / 2\n            && x <= this.x + this.width / 2\n            && y >= this.y\n            && y <= this.y + this.height\n        ) {\n            return Environment.PLATFORM;\n        }\n\n        return Environment.AIR;\n    }\n}\n","import { type Conversation } from \"../Conversation\";\nimport { DialoguePrompt } from \"../DialoguePrompt\";\nimport { type Face, FaceModes } from \"../Face\";\nimport { type Greeting } from \"../Greeting\";\nimport { SpeechBubble } from \"../SpeechBubble\";\nimport { sleep } from \"../util\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\n\n// Seconds NPC can't be talked to after a conversation has ended\nconst PAUSE_AFTER_CONVERSATION = 1.5;\n\nexport abstract class NPC extends PhysicsEntity {\n    public direction = 1;\n    public face: Face | null = null;\n    public defaultFaceMode = FaceModes.NEUTRAL;\n    public greeting: Greeting | null = null;\n    public conversation: Conversation | null = null;\n    public thinkBubble: SpeechBubble | null = null;\n    public speechBubble = new SpeechBubble(this.scene, this.x, this.y);\n    public lookAtPlayer = true;\n    public dialoguePrompt = new DialoguePrompt(this.scene, this.x, this.y);\n    private lastEndedConversation = -Infinity;\n    protected met = false;\n\n    protected drawFace(ctx: CanvasRenderingContext2D, lookAtPlayer = true): void {\n        if (this.face) {\n            // Look at player\n            if (lookAtPlayer) {\n                const dx = this.scene.player.x - this.x;\n                this.face.toggleDirection((dx > 0) ? 1 : -1);\n                this.face.draw(ctx);\n            } else {\n                this.face.setDirection(this.direction);\n                this.face.draw(ctx);\n            }\n        }\n    }\n\n    public async think(message: string, time: number): Promise<void> {\n        if (this.thinkBubble) {\n            this.thinkBubble.hide();\n            this.thinkBubble = null;\n        }\n\n        const thinkBubble = this.thinkBubble = new SpeechBubble(this.scene, this.x, this.y);\n        void thinkBubble.setMessage(message);\n        thinkBubble.show();\n\n        await sleep(time);\n\n        if (this.thinkBubble === thinkBubble) {\n            thinkBubble.hide();\n            this.thinkBubble = null;\n        }\n    }\n\n    public hasMet(): boolean {\n        return false;\n    }\n\n    public meet(): void {\n        this.met = true;\n    }\n\n    public getInteractionText(): string {\n        return \"Talk\";\n    }\n\n    protected showDialoguePrompt(): boolean {\n        if (this.hasActiveConversation() || !this.scene.player.isControllable) {\n            return false;\n        }\n\n        return true;\n    }\n\n    protected drawDialoguePrompt(): void {\n        this.dialoguePrompt.draw();\n    }\n\n    protected drawGreeting(ctx: CanvasRenderingContext2D): void {\n        this.greeting?.draw(ctx);\n    }\n\n    protected updateGreeting(): void {\n        this.greeting?.update();\n    }\n\n    public registerEndedConversation(): void {\n        this.lastEndedConversation = this.scene.gameTime;\n    }\n\n    public isReadyForConversation(): boolean | null {\n        return (\n            this.conversation\n            && !this.scene.player.isCarrying(this)\n            && this.scene.gameTime - this.lastEndedConversation > PAUSE_AFTER_CONVERSATION\n        );\n    }\n\n    public hasActiveConversation(): boolean {\n        return (this.scene.player.playerConversation !== null && this.scene.player.playerConversation.npc === this);\n    }\n\n    public toggleDirection(direction = this.direction > 0 ? -1 : 1): void {\n        if (direction !== this.direction) {\n            this.direction = direction;\n        }\n    }\n\n    public override update(dt: number): void {\n        if (this.lookAtPlayer) {\n            const dx = this.scene.player.x - this.x;\n            this.toggleDirection((dx > 0) ? 1 : -1);\n        }\n\n        super.update(dt);\n    }\n}\n","import { DROWNING_VELOCITY, GRAVITY, PIXEL_PER_METER, TERMINAL_VELOCITY } from \"../../shared/constants\";\nimport { Entity, type EntityArgs } from \"../Entity\";\nimport { type GameObject } from \"../scenes/GameObject\";\nimport { Environment } from \"../World\";\n\nexport interface PhysicsEntityArgs extends EntityArgs {\n    velocityX?: number;\n    velocityY?: number;\n    maxVelocityX?: number;\n    maxVelocityY?: number;\n}\n\nexport abstract class PhysicsEntity extends Entity {\n    private velocityX = 0;\n    private velocityY = 0;\n    private maxVelocityX = Infinity;\n    private maxVelocityY = Infinity;\n    private floating = false;\n    private ground: GameObject | null = null;\n\n    // This property describes how much the player hitbox grows when\n    // this entity is carried. Defaults to the entities own height.\n    public carryHeight = this.height;\n\n    protected lastGroundPosition = { x: 0, y: 0 };\n\n    public constructor({ velocityX = 0, velocityY = 0, maxVelocityX = Infinity, maxVelocityY = Infinity, ...args }: PhysicsEntityArgs) {\n        super(args);\n        this.velocityX = velocityX;\n        this.velocityY = velocityY;\n        this.maxVelocityX = velocityX;\n        this.maxVelocityY = velocityY;\n    }\n\n    public setFloating(floating: boolean): void {\n        this.floating = floating;\n\n        if (floating) {\n            this.setVelocity(0, 0);\n        }\n    }\n\n    public isFloating(): boolean {\n        return this.floating;\n    }\n\n    public setMaxVelocity(maxVelocityX: number, maxVelocityY = maxVelocityX): void {\n        this.maxVelocityX = maxVelocityX;\n        this.maxVelocityY = maxVelocityY;\n    }\n\n    public accelerate(x: number, y: number): void {\n        this.accelerateX(x);\n        this.accelerateY(y);\n    }\n\n    public accelerateX(x: number): void {\n        if (x > 0) {\n            this.velocityX = Math.min(this.maxVelocityX, this.velocityX + x);\n        } else {\n            this.velocityX = Math.max(-this.maxVelocityX, this.velocityX + x);\n        }\n    }\n\n    public accelerateY(y: number): void {\n        this.velocityY = Math.min(this.maxVelocityY, this.velocityY + y);\n    }\n\n    public decelerate(x: number, y: number): void {\n        this.decelerateX(x);\n        this.decelerateY(y);\n    }\n\n    public decelerateX(x: number): void {\n        if (x > 0) {\n            this.velocityX = Math.max(0, this.velocityX - x);\n        } else {\n            this.velocityX = Math.min(0, this.velocityX - x);\n        }\n    }\n\n    public decelerateY(y: number): void {\n        this.velocityY = Math.max(0, this.velocityY - y);\n    }\n\n    public setVelocity(x: number, y: number): void {\n        this.velocityX = x;\n        this.velocityY = y;\n    }\n\n    public setVelocityX(x: number): void {\n        this.velocityX = x;\n    }\n\n    public setVelocityY(y: number): void {\n        this.velocityY = y;\n    }\n\n    public getVelocityX(): number {\n        return this.velocityX;\n    }\n\n    public getVelocityY(): number {\n        return this.velocityY;\n    }\n\n    private checkCollision(x: number, y: number, ignore?: Environment[]): Environment {\n        return this.scene.world.collidesWith(x, y, [ this ], ignore);\n    }\n\n    private checkCollisionBox(x: number, y: number, ignore?: Environment[]): Environment {\n        for (let i = -this.width / 2; i < this.width / 2; i++) {\n            let env = this.checkCollision(x + i, y, ignore);\n\n            if (env !== Environment.AIR) {\n                return env;\n            }\n\n            env = this.checkCollision(x + i, y + this.height, ignore);\n\n            if (env !== Environment.AIR) {\n                return env;\n            }\n        }\n\n        for (let i = 0; i < this.height; i++) {\n            let env = this.checkCollision(x - this.width / 2, y + i, ignore);\n\n            if (env !== Environment.AIR) {\n                return env;\n            }\n\n            env = this.checkCollision(x + this.width / 2, y + i, ignore);\n\n            if (env !== Environment.AIR) {\n                return env;\n            }\n        }\n\n        return Environment.AIR;\n    }\n\n    protected updatePosition(newX: number, newY: number): void {\n\n        if (this.floating) {\n            this.x = newX;\n            this.y = newY;\n        } else {\n            const env = this.checkCollisionBox(\n                newX, newY, newY > this.y ? [ Environment.PLATFORM ] : []\n            );\n\n            if (env === Environment.AIR || env === Environment.WATER) {\n                this.x = newX;\n                this.y = newY;\n            } else {\n                this.setVelocity(0, 0);\n            }\n        }\n    }\n\n    /**\n     * Overridden by Player class to indicate Player is jumping down.\n     */\n    protected isJumpDown(): boolean {\n        return false;\n    }\n\n    /**\n     * Overridden by Player class to indicate that\n     */\n    protected isPlayer(): boolean {\n        return false;\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        const world = this.scene.world;\n        const ground = world.getObjectAt(this.x, this.y - 5, [ this ]);\n\n        if (ground instanceof PhysicsEntity) {\n            this.x += ground.getVelocityX() * PIXEL_PER_METER * dt;\n            this.y += ground.getVelocityY() * PIXEL_PER_METER * dt;\n        }\n\n        this.ground = ground;\n\n        this.updatePosition(\n            this.x + this.velocityX * PIXEL_PER_METER * dt,\n            this.y + this.velocityY * PIXEL_PER_METER * dt\n        );\n\n        // Object dropping down when there is no ground below\n        if (!this.floating) {\n            const environment = world.collidesWith(\n                this.x, this.y - 1,\n                [ this ],\n                this.isJumpDown() ? [ Environment.PLATFORM ] : []\n            );\n\n            if (environment === Environment.AIR) {\n                this.velocityY -= this.getGravity() * dt;\n\n                // Apply terminal velocity to falling entities\n                if (this.velocityY < 0) {\n                    this.velocityY = Math.max(this.velocityY, TERMINAL_VELOCITY);\n                }\n            } else if (environment === Environment.WATER) {\n                this.velocityY = DROWNING_VELOCITY;\n                this.velocityX = 0;\n            } else if (this.velocityY < 0) {\n                this.velocityY = 0;\n\n                if (!(this.isPlayer())) {\n                    this.velocityX = 0;\n                }\n                this.x = Math.round(this.x);\n                this.y = Math.round(this.y);\n            } else {\n                // is on ground\n                this.lastGroundPosition.x = this.x;\n                this.lastGroundPosition.y = this.y;\n            }\n        }\n    }\n\n    protected getGravity(): number {\n        return GRAVITY;\n    }\n\n    public getGround(): GameObject | null {\n        return this.ground;\n    }\n}\n","import {\n    DIALOG_FONT, DOUBLE_JUMP_COLORS, GRAVITY, MAX_PLAYER_RUNNING_SPEED, MAX_PLAYER_SPEED,\n    PLAYER_ACCELERATION, PLAYER_ACCELERATION_AIR, PLAYER_BOUNCE_HEIGHT, PLAYER_CARRY_HEIGHT,\n    PLAYER_HEIGHT, PLAYER_JUMP_HEIGHT, PLAYER_JUMP_TIMING_THRESHOLD, PLAYER_WIDTH,\n    SHORT_JUMP_GRAVITY\n} from \"../../shared/constants\";\nimport { type Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { CharacterAsset, type VoiceAsset } from \"../Campaign\";\nimport { CharacterSounds } from \"../CharacterSounds\";\nimport { Conversation } from \"../Conversation\";\nimport { Dance } from \"../Dance\";\nimport { type Bounds, type Entity, entity, type EntityArgs } from \"../Entity\";\nimport { type ControllerEvent } from \"../input/ControllerEvent\";\nimport { ControllerAnimationTags, ControllerSpriteMap } from \"../input/ControllerFamily\";\nimport { ControllerManager } from \"../input/ControllerManager\";\nimport { type GameObjectInfo } from \"../MapInfo\";\nimport { type ParticleEmitter, valueCurves } from \"../Particles\";\nimport { PlayerConversation } from \"../PlayerConversation\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { RenderingLayer, RenderingType } from \"../Renderer\";\nimport { type BgmId } from \"../scenes/BgmId\";\nimport { FadeDirection } from \"../scenes/FadeDirection\";\nimport { GotItemScene, Item } from \"../scenes/GotItemScene\";\nimport { SpeechBubble } from \"../SpeechBubble\";\nimport { boundsFromMapObject, isDev, rnd, rndInt, rndItem, sleep, timedRnd } from \"../util\";\nimport { Environment } from \"../World\";\nimport { Cloud } from \"./Cloud\";\nimport { ConversationProxy } from \"./ConversationProxy\";\nimport { NPC } from \"./NPC\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\nimport { Seed, SeedState } from \"./Seed\";\nimport { Sign } from \"./Sign\";\nimport { Snowball } from \"./Snowball\";\nimport { Stone, StoneState } from \"./Stone\";\nimport { Wall } from \"./Wall\";\nimport { Wood, WoodState } from \"./Wood\";\n\nconst groundColors = [\n    \"#806057\",\n    \"#504336\",\n    \"#3C8376\",\n    \"#908784\"\n];\n\nconst bounceColors = [\n    \"#f06060\",\n    \"#e87f7f\",\n    \"#ff7070\"\n];\n\nconst drownThoughts = [\n    { message: \"OK, I'm not Jesus. Noted!\", duration: 4000 },\n    { message: \"Looks like I can't swim… But I can respawn, nice!\", duration: 5000 },\n    { message: \"Well, that was strange… And wet.\", duration: 4000 }\n];\n\nconst drowningThoughts = [\n    { message: \"Waah!\", duration: 1000 },\n    { message: \"Help!\", duration: 1000 },\n    { message: \"Mama!\", duration: 1000 },\n    { message: \"Ieeh!\", duration: 1000 },\n    { message: \"Argh!\", duration: 1000 }\n];\n\n/** The number of seconds until player gets a hint. */\nconst HINT_TIMEOUT = 90;\n\ninterface PlayerSpriteMetadata {\n    carryOffsetFrames?: number[];\n}\n\ntype AutoMove = {\n    destinationX: number;\n    lastX: number;\n    turnAround: boolean;\n};\n\n@entity(\"player\")\nexport class Player extends PhysicsEntity {\n    @asset([\n        \"sprites/pc/female.aseprite.json\",\n        \"sprites/pc/male.aseprite.json\",\n        \"sprites/pc/patient.aseprite.json\"\n    ])\n    public static playerSprites: Aseprite[];\n\n    @asset([\n        \"sprites/buttons_keyboard.aseprite.json\",\n        \"sprites/buttons_xbox.aseprite.json\",\n        \"sprites/buttons_playstation.aseprite.json\",\n        \"sprites/buttons_stadia.aseprite.json\"\n    ])\n    public static buttons: Aseprite[];\n\n    public controllerSpriteMapRecords: Record<ControllerSpriteMap, Aseprite> = {\n        [ControllerSpriteMap.KEYBOARD]: Player.buttons[0],\n        [ControllerSpriteMap.XBOX]: Player.buttons[1],\n        [ControllerSpriteMap.PLAYSTATION]: Player.buttons[2],\n        [ControllerSpriteMap.STADIA]: Player.buttons[3]\n    };\n\n    @asset(\"sounds/feet-walking/steps_single.mp3\")\n    private static readonly walkingSound: Sound;\n\n    @asset(\"sounds/gate/door_open.mp3\")\n    private static readonly enterGateSound: Sound;\n\n    @asset(\"sounds/portal/enter-portal.ogg\")\n    private static readonly enterPortalSound: Sound;\n\n    @asset(\"sounds/gate/door_close.mp3\")\n    private static readonly leaveGateSound: Sound;\n\n    @asset(\"sounds/jumping/squish.mp3\")\n    private static readonly bouncingSound: Sound;\n\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    private lastHint = Date.now();\n    private flying = false;\n    public direction = 1;\n    private playerSpriteMetadata: PlayerSpriteMetadata[] | null = null;\n    public animation = \"idle\";\n    private moveLeft: boolean = false;\n    private moveRight: boolean = false;\n    private visible = false;\n\n    private running: boolean = false;\n\n    private jumpThresholdTimer = PLAYER_JUMP_TIMING_THRESHOLD;\n\n    public jumpDown: boolean = false;\n    private jumpKeyPressed: boolean | null = false;\n    private drowning = 0;\n    private dance: Dance | null = null;\n    private currentFailAnimation = 1;\n    private carrying: PhysicsEntity | null = null;\n    private canRun = false;\n    private jumpDisabled = false;\n    private canRainDance = false;\n    private doubleJump = false;\n    private multiJump = false;\n    private hasFriendship = false;\n    private usedJump = false;\n    private usedDoubleJump = false;\n    private autoMove: AutoMove | null = null;\n    public isControllable: boolean = true;\n    private readonly showHints = false;\n    private isPettingDog = false;\n    private walkingSpeed = MAX_PLAYER_SPEED;\n\n    private characterAsset: CharacterAsset;\n    private readonly voiceAsset: VoiceAsset;\n\n    public playerConversation: PlayerConversation | null = null;\n\n    public speechBubble = new SpeechBubble(this.scene, this.x, this.y, true);\n\n    public thinkBubble: SpeechBubble | null = null;\n\n    private closestNPC: NPC | null = null;\n    private readableTrigger?: GameObjectInfo;\n    private readonly dustEmitter: ParticleEmitter;\n    private readonly bounceEmitter: ParticleEmitter;\n    private readonly doubleJumpEmitter: ParticleEmitter;\n    private disableParticles = false;\n\n    public constructor(args: EntityArgs) {\n        super({ width: PLAYER_WIDTH, height: PLAYER_HEIGHT, ...args });\n\n        this.isControllable = false;\n        this.setFloating(true);\n\n        // Apply selected character traits\n        this.characterAsset = this.scene.game.campaign.selectedCharacter;\n        this.voiceAsset = this.scene.game.campaign.selectedVoice;\n        Conversation.setGlobal(\"ismale\", this.characterAsset === CharacterAsset.MALE ? \"true\" : \"false\");\n\n        setTimeout(() => {\n            this.isControllable = true;\n            this.visible = true;\n            this.setFloating(false);\n        }, 2200);\n\n        document.addEventListener(\"keydown\", event => this.handleKeyDown(event));\n\n        if (isDev()) {\n            console.log(\n                \"Dev mode, press “C” to dance anywhere, “P” to spawn the stone, “O” to spawn the \"\n                + \"seed, “I” to spawn wood, “T” to throw useless snowball, “K” to learn all \"\n                + \"abilities, “M” to show bounds of entities and triggers.\"\n            );\n        }\n\n        this.setMaxVelocity(MAX_PLAYER_RUNNING_SPEED);\n\n        this.dustEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 26, y: rnd(0.7, 1) * 45 }),\n            color: () => rndItem(groundColors),\n            size: rnd(1, 2),\n            gravity: {x: 0, y: -100},\n            lifetime: () => rnd(0.5, 0.8),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n\n        this.bounceEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 90, y: rnd(0.7, 1) * 60 }),\n            color: () => rndItem(bounceColors),\n            size: rnd(1.5, 3),\n            gravity: {x: 0, y: -120},\n            lifetime: () => rnd(0.4, 0.6),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n\n        this.doubleJumpEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 90, y: rnd(-1, 0) * 100 }),\n            color: () => rndItem(DOUBLE_JUMP_COLORS),\n            size: rnd(1.5, 3),\n            gravity: {x: 0, y: -120},\n            lifetime: () => rnd(0.4, 0.6),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n    }\n\n    public getControllable(): boolean {\n        return this.isControllable;\n    }\n\n    public setControllable(isControllable: boolean): void {\n        this.isControllable = isControllable;\n    }\n\n    public startAutoMove(x: number, turnAround: boolean): void {\n        if (!this.autoMove) {\n            this.autoMove = {\n                destinationX: x,\n                lastX: this.x,\n                turnAround\n            };\n        }\n\n        // Failsafe to stop automove after 1 second.\n        setTimeout(() => {\n            if (this.autoMove) this.stopAutoMove();\n        }, 1000);\n    }\n\n    public stopAutoMove(): void {\n        if (this.autoMove?.turnAround === true) {\n            this.direction = this.direction * -1;\n        }\n\n        this.autoMove = null;\n        this.moveRight = false;\n        this.moveLeft = false;\n    }\n\n    public startPettingDog(): void {\n        this.isPettingDog = true;\n        this.x = this.scene.shiba.direction > 0 ? this.scene.shiba.x + 18 : this.scene.shiba.x - 18;\n    }\n\n    public stopPettingDog(): void {\n        this.isPettingDog = false;\n    }\n\n    public enableRunning(silent = false): void {\n        this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_RUNNING_ABILITY);\n\n        if (!this.canRun) {\n            if (!silent) {\n                void this.scene.scenes.pushScene(GotItemScene, Item.RUNNING);\n            }\n            this.canRun = true;\n        }\n    }\n\n    public enableRainDance(silent = false): void {\n        this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.LEARNED_RAIN_DANCE);\n\n        if (!this.canRainDance) {\n            if (!silent) {\n                void this.scene.scenes.pushScene(GotItemScene, Item.RAINDANCE);\n            }\n            this.canRainDance = true;\n        }\n    }\n\n    public enableDoubleJump(silent = false): void {\n        Conversation.setGlobal(\"hasDoubleJump\", \"true\");\n        this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_QUEST_FROM_TREE);\n\n        if (!this.doubleJump) {\n            if (!silent) {\n                void this.scene.scenes.pushScene(GotItemScene, Item.DOUBLEJUMP);\n            }\n            this.doubleJump = true;\n        }\n    }\n\n    public enableMultiJump(silent = false): void {\n        this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_MULTIJUMP);\n\n        if (!this.multiJump) {\n            if (!silent) {\n                void this.scene.scenes.pushScene(GotItemScene, Item.MULTIJUMP);\n            }\n            this.multiJump = true;\n        }\n    }\n\n    public disableMultiJump(): void {\n        this.multiJump = false;\n    }\n\n    public enableFriendship(): void {\n        if (!this.hasFriendship) {\n            void this.scene.scenes.pushScene(GotItemScene, Item.FRIENDSHIP);\n            this.hasFriendship = true;\n            Conversation.setGlobal(\"hasFriendship\", \"true\");\n            this.scene.removeGameObject(this.scene.powerShiba);\n        }\n    }\n\n    public removePowerUps(): void {\n        this.multiJump = false;\n        this.doubleJump = false;\n        this.canRun = false;\n    }\n\n    public removeMultiJump(): void {\n        this.multiJump = false;\n    }\n\n    public switchToReality(): void {\n        this.canRun = false;\n        this.multiJump = false;\n        this.jumpDisabled = true;\n        this.walkingSpeed = 3;\n        this.characterAsset = CharacterAsset.PATIENT;\n        this.direction = -1;\n    }\n\n    public enterShadowCave(): void {\n        this.canRun = false;\n        this.walkingSpeed = 3;\n        this.jumpDisabled = true;\n        this.multiJump = false;\n    }\n\n    public getDance(): Dance | null {\n        return this.dance;\n    }\n\n    public cancelDance(): void {\n        this.dance = null;\n    }\n\n    public async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (this.scene.paused || !this.isControllable || this.autoMove) {\n            return;\n        }\n\n        if (this.isPettingDog) {\n            if (event.isPlayerMoveLeft || event.isPlayerMoveRight || event.isPlayerAction) {\n                this.scene.cancelPatEnding();\n            }\n            return;\n        }\n\n        if (this.dance) {\n            this.dance.handleButtonDown(event);\n            return;\n        }\n\n        if (!this.scene.camera.isOnTarget() || event.repeat) {\n            return;\n        }\n\n        if (this.playerConversation) {\n            this.playerConversation.handleButton(event);\n            return;\n        }\n\n        if (this.canRun && event.isPlayerRun) {\n            this.running = true;\n        }\n\n        if (event.isPlayerMoveRight) {\n            this.moveRight = true;\n            this.moveLeft = false;\n        } else if (event.isPlayerMoveLeft) {\n            this.moveLeft = true;\n            this.moveRight = false;\n        } else if (event.isPlayerEnterDoor) {\n            if (!this.canEnterDoor()) return;\n            const gate = this.scene.world.getGateCollisions(this)[0];\n            await this.enterGate(gate);\n        } else if (event.isPlayerInteract) {\n            // Check for gates / doors\n            if (!this.flying) {\n                if (\n                    this.closestNPC\n                    && this.closestNPC.isReadyForConversation() === true\n                    && this.closestNPC.conversation\n                ) {\n                    const conversation = this.closestNPC.conversation;\n\n                    // Disable auto movement to a safe talking distance for the stone in the river\n                    const autoMove = (\n                        this.closestNPC instanceof Sign\n                        || (\n                            this.closestNPC instanceof Stone\n                            && this.closestNPC.state !== StoneState.DEFAULT\n                        ) ? false : true\n                    );\n\n                    this.playerConversation = new PlayerConversation(\n                        this, this.closestNPC, conversation, autoMove\n                    );\n                } else if (this.readableTrigger) {\n                    const proxy = new ConversationProxy({\n                        scene: this.scene,\n                        x: this.x,\n                        y: this.y,\n                        content: this.readableTrigger.properties.content\n                    });\n\n                    this.playerConversation = new PlayerConversation(\n                        this, proxy, proxy.conversation, false\n                    );\n                } else if (this.canDanceToMakeRain()) {\n                    this.startDance(this.scene.apocalypse ? 3 : 2);\n                    this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.MADE_RAIN);\n                }\n            }\n        } else if (event.isPlayerAction) {\n            if (this.isCarrying()) this.throw();\n        } else if (event.isPlayerJump && this.canJump()) {\n            this.jumpKeyPressed = true;\n            this.jump();\n        } else if (event.isPlayerDrop) {\n            this.jumpDown = true;\n        }\n    }\n\n    public throw(): void {\n        if (!this.carrying || (this.carrying instanceof Stone && !this.canThrowStoneIntoWater())) {\n            return;\n        }\n\n        if (this.carrying instanceof Stone) {\n            this.carrying.setVelocity(10 * this.direction, 10);\n        } else {\n            this.carrying.setVelocity(5 * this.direction, 5);\n        }\n\n        this.height = PLAYER_HEIGHT;\n        this.carrying = null;\n\n        CharacterSounds.playRandomCharacterSound(\"throw\", this.voiceAsset);\n    }\n\n    // Used in dev mode to enable some special keys that can only be triggered by using a keyboard.\n    public handleKeyDown(event: KeyboardEvent): void {\n        if (this.scene.paused) {\n            return;\n        }\n\n        if (!this.scene.camera.isOnTarget() || event.repeat) {\n            return;\n        }\n\n        if (isDev()) {\n            if (event.key === \"c\") {\n                // TODO Just for debugging. Real dancing is with action key on rain cloud\n                this.startDance(3);\n            } else if (event.key === \"p\" && !this.carrying) {\n                // TODO Just for debugging, this must be removed later\n                this.carry(this.scene.stone);\n            } else if (event.key === \"o\" && !this.carrying) {\n                this.carry(this.scene.tree.spawnSeed());\n            } else if (event.key === \"u\" && !this.carrying) {\n                this.carry(this.scene.bone);\n            } else if (event.key === \"i\" && !this.carrying) {\n                this.carry(this.scene.tree.seed.spawnWood());\n            } else if (event.key === \"t\") {\n                this.scene.addGameObject(\n                    new Snowball({\n                        scene: this.scene,\n                        x: this.x,\n                        y: this.y + this.height * 0.75,\n                        velocityX: 20 * this.direction,\n                        velocityY: 10\n                    })\n                );\n\n                CharacterSounds.playRandomCharacterSound(\"throw\", this.voiceAsset);\n            } else if (event.key === \"k\") {\n                this.multiJump = true;\n                this.doubleJump = true;\n                this.canRun = true;\n                this.canRainDance = true;\n                void this.think(\"I can do everything now.\", 1500);\n            } else if (event.key === \"m\") {\n                this.scene.showBounds = !this.scene.showBounds;\n                void this.think(\"Toggling bounds.\", 1500);\n            }\n        }\n    }\n\n    public async think(message: string, time: number): Promise<void> {\n        if (this.thinkBubble) {\n            this.thinkBubble.hide();\n            this.thinkBubble = null;\n        }\n\n        const thinkBubble = this.thinkBubble = new SpeechBubble(this.scene, this.x, this.y);\n\n        void thinkBubble.setMessage(message);\n        thinkBubble.show();\n\n        await sleep(time);\n\n        if (this.thinkBubble === thinkBubble) {\n            thinkBubble.hide();\n            this.thinkBubble = null;\n        }\n    }\n\n    public startDance(difficulty: number = 1): void {\n        if (!this.dance) {\n            switch (difficulty) {\n                case 1:\n                    this.dance = new Dance(\n                        this.scene,\n                        this.x, this.y - 25,\n                        100,\n                        \"  1 1 2 2 1 2 1 3\",\n                        undefined,\n                        1,\n                        undefined,\n                        true,\n                        0\n                    );\n                    break;\n                case 2:\n                    this.dance = new Dance(\n                        this.scene,\n                        this.x, this.y - 25,\n                        192,\n                        \"1   2   1 1 2 2 121 212 121 212 3    \",\n                        undefined,\n                        3\n                    );\n                    break;\n                case 3:\n                    this.dance = new Dance(\n                        this.scene,\n                        this.x, this.y - 25,\n                        192,\n                        \"112 221 312 123 2121121 111 222 3    \",\n                        undefined,\n                        4\n                    );\n                    break;\n                default:\n                    this.dance = new Dance(\n                        this.scene,\n                        this.x, this.y - 25,\n                        192,\n                        \"3\"\n                    );\n            }\n        }\n    }\n\n    /**\n     * Teleport the player from the source gate to it's corresponding target gate.\n     * The teleport is not instant but accompanied by a fade to black to obscure the teleportation.\n     * Also sets the camera bounds to the target position\n     * @param gate the source the player enters\n     */\n    private async enterGate(gate: GameObjectInfo): Promise<void> {\n        if (gate != null && gate.properties.target != null) {\n            this.isControllable = false;\n            this.moveRight = false;\n            this.moveLeft = false;\n\n            const targetGate = this.scene.gateObjects.find(\n                target => target.name === gate.properties.target\n            );\n\n            const targetBgmId = gate.properties.bgm;\n\n            if (targetGate) {\n                if (gate.properties.enterSound != null) {\n                    if (gate.properties.enterSound === \"portal\") {\n                        Player.enterPortalSound.stop();\n                        Player.enterPortalSound.play();\n                    }\n                } else {\n                    Player.enterGateSound.stop();\n                    Player.enterGateSound.play();\n                }\n\n                await this.scene.fadeToBlack(0.8, FadeDirection.FADE_OUT);\n                if (targetBgmId != null) {\n                    this.scene.setActiveBgmTrack(targetBgmId as BgmId);\n                }\n\n                if (targetGate.properties.exitSound != null) {\n                    if (targetGate.properties.exitSound === \"portal\") {\n                        Player.enterPortalSound.stop();\n                        Player.enterPortalSound.play();\n                    }\n                } else {\n                    Player.leaveGateSound.stop();\n                    Player.leaveGateSound.play();\n                }\n\n                this.x = targetGate.x + (targetGate.width / 2);\n                this.y = targetGate.y - targetGate.height;\n\n                this.scene.camera.setBounds(this.getCurrentMapBounds());\n\n                if (targetGate.name === \"exitportaldoor_2\") {\n                    this.switchToReality();\n                }\n\n                if (targetGate.name === \"shadowgate_door_2\") {\n                    this.enterShadowCave();\n                }\n\n                if (targetGate.properties.exitSleepTime != null) {\n                    await sleep(targetGate.properties.exitSleepTime * 1000);\n                }\n\n                const fadeInTime = targetGate.properties.exitFadeTime ?? 0.8;\n                await this.scene.fadeToBlack(fadeInTime, FadeDirection.FADE_IN);\n                this.isControllable = true;\n            }\n        }\n    }\n\n    /**\n     * For debugging purposes. Teleports the player to the given entity.\n     *\n     * Example usage: `game.campaign.gameScene.player.teleportTo(game.campaign.gameScene.powerShiba)`\n     *\n     * @param entity - The game entity to teleport to.\n     */\n    public teleportTo(entity: Entity): void {\n        this.x = entity.x;\n        this.y = entity.y;\n\n        this.scene.camera.setBounds(this.getCurrentMapBounds());\n    }\n\n    private canJump(): boolean {\n        if (this.jumpDisabled) return false;\n        if (this.multiJump) {\n            return true;\n        } else if (!this.usedJump && this.jumpThresholdTimer > 0) {\n            return true;\n        } else if (this.doubleJump) {\n            return !this.usedDoubleJump;\n        }\n\n        return !this.flying;\n    }\n\n    private jump(): void {\n        if (this.drowning > 0) return;\n\n        this.setVelocityY(Math.sqrt(2 * PLAYER_JUMP_HEIGHT * GRAVITY));\n        CharacterSounds.playRandomCharacterSound(\"jump\", this.voiceAsset);\n\n        if (this.flying && this.usedJump) {\n            this.usedDoubleJump = true;\n            if (!this.disableParticles && this.visible) {\n                this.doubleJumpEmitter.setPosition(this.x, this.y + 20);\n                this.doubleJumpEmitter.emit(20);\n            }\n        }\n\n        this.usedJump = true;\n    }\n\n    public handleButtonUp(event: ControllerEvent): void {\n        if (this.scene.paused || !this.isControllable || this.autoMove) {\n            return;\n        }\n\n        if (event.isPlayerMoveRight) {\n            this.moveRight = false;\n        } else if (event.isPlayerMoveLeft) {\n            this.moveLeft = false;\n        } else if (event.isPlayerJump) {\n            this.jumpKeyPressed = false;\n        } else if (event.isPlayerDrop) {\n            this.jumpDown = false;\n        } else if (event.isPlayerRun) {\n            this.running = false;\n        }\n    }\n\n    private drawTooltip(\n        text: string, buttonTag: ControllerAnimationTags = ControllerAnimationTags.ACTION\n    ): void {\n        if (!this.isControllable) return;\n\n        const controllerSprite = ControllerManager.getInstance().controllerSprite;\n        const measure = Player.font.measureText(text);\n        const gap = 6;\n        const offsetY = 12;\n        const textPositionX = Math.round(Math.round(this.x) - ((measure.width - this.controllerSpriteMapRecords[controllerSprite].width + gap) / 2));\n        const textPositionY = -this.y + offsetY;\n\n\n        this.scene.renderer.add({\n            type: RenderingType.ASEPRITE,\n            layer: RenderingLayer.UI,\n            position: {\n                x: textPositionX - this.controllerSpriteMapRecords[controllerSprite].width - gap,\n                y: textPositionY\n            },\n            asset: this.controllerSpriteMapRecords[controllerSprite],\n            animationTag: buttonTag,\n        });\n\n        this.scene.renderer.add({\n            type: RenderingType.TEXT,\n            layer: RenderingLayer.UI,\n            text,\n            textColor: \"white\",\n            outlineColor: \"black\",\n            position: {\n                x: textPositionX,\n                y: textPositionY\n            },\n            asset: Player.font,\n        });\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (!this.visible) {\n            return;\n        }\n\n        const sprite = Player.playerSprites[this.characterAsset];\n        let animation = this.animation;\n\n        // TODO: Implement animation state concept instead of `animation === \"idle\" || animation === \"walk\" || …`\n        if (\n            this.carrying\n            && (animation === \"idle\" || animation === \"walk\" || animation === \"jump\" || animation === \"fall\")\n        ) {\n            animation = animation + \"-carry\";\n        }\n\n        this.scene.renderer.addAseprite(\n            sprite,\n            animation,\n            this.x, this.y - 1,\n            RenderingLayer.PLAYER,\n            this.direction\n        );\n\n        if (\n            this.closestNPC\n            && !this.dance\n            && !this.playerConversation\n            && this.closestNPC.isReadyForConversation() === true\n        ) {\n            this.drawTooltip(this.closestNPC.getInteractionText(), ControllerAnimationTags.INTERACT);\n        } else if (this.readableTrigger) {\n            this.drawTooltip(\"Examine\", ControllerAnimationTags.INTERACT);\n        } else if (this.canEnterDoor()) {\n            this.drawTooltip(\"Enter\", ControllerAnimationTags.OPEN_DOOR);\n        } else if (this.canThrowStoneIntoWater()) {\n            this.drawTooltip(\"Throw stone\", ControllerAnimationTags.ACTION);\n        } else if (this.canThrowSeedIntoSoil()) {\n            this.drawTooltip(\"Plant seed\", ControllerAnimationTags.ACTION);\n        } else if (this.canDanceToMakeRain()) {\n            this.drawTooltip(\"Dance\", ControllerAnimationTags.INTERACT);\n        }\n\n        if (this.dance) {\n            this.dance.addDanceToRenderQueue();\n        }\n\n        this.speechBubble.draw(ctx);\n\n        if (this.thinkBubble) {\n            this.thinkBubble.draw(ctx);\n        }\n    }\n\n    private canThrowStoneIntoWater(): boolean {\n        return (\n            this.carrying instanceof Stone\n            && (\n                this.direction === -1\n                && this.scene.world.collidesWith(\n                    this.x - 30, this.y - 20\n                ) === Environment.WATER\n            )\n        );\n    }\n\n    private canThrowSeedIntoSoil(): boolean {\n        return (\n            this.carrying instanceof Seed\n            && (\n                this.direction === -1\n                && this.scene.world.collidesWith(this.x - 30, this.y + 2) === Environment.SOIL\n            )\n        );\n    }\n\n    public debugCollisions(): void {\n        console.log(\"Entities: \", this.scene.world.getEntityCollisions(this));\n        console.log(\"Triggers: \", this.scene.world.getTriggerCollisions(this));\n        console.log(\"Gates: \", this.scene.world.getGateCollisions(this));\n    }\n\n    private getReadableTrigger(): GameObjectInfo | undefined {\n        const triggers = this.scene.world.getTriggerCollisions(this);\n        if (triggers.length === 0) return undefined;\n\n        return triggers.find(t => t.name === \"readable\");\n    }\n\n    private canDanceToMakeRain(): boolean {\n        if (!this.canRainDance) return false;\n\n        const ground = this.getGround();\n\n        return (\n            (\n                this.isCollidingWithTrigger(\"raincloud_sky\")\n                && !this.scene.world.isRaining()\n                && this.carrying === null\n                && !this.scene.apocalypse\n            ) || (\n                ground instanceof Cloud\n                && this.scene.apocalypse\n                && !ground.isRaining()\n                && ground.canRain()\n            )\n        );\n    }\n\n    private canEnterDoor(): boolean {\n        return !this.flying && !this.carrying && this.scene.world.getGateCollisions(this).length > 0;\n    }\n\n    /**\n     * Returns the bounds of the map area the player currently resides in\n     */\n    public getCurrentMapBounds(): Bounds | undefined {\n        const collisions = this.scene.world.getCameraBounds(this);\n        if (collisions.length === 0) return undefined;\n        return boundsFromMapObject(collisions[0]);\n    }\n\n    private respawn(): void {\n        this.x = this.lastGroundPosition.x;\n        this.y = this.lastGroundPosition.y + 10;\n        this.setVelocity(0, 0);\n    }\n\n    private getPlayerSpriteMetadata(): PlayerSpriteMetadata[] {\n        if (this.playerSpriteMetadata == null) {\n            this.playerSpriteMetadata = Player.playerSprites.map(sprite => {\n                const metaDataJSON = sprite.getLayer(\"Meta\")?.data;\n                return metaDataJSON != null && metaDataJSON !== \"\" ? JSON.parse(metaDataJSON) as PlayerSpriteMetadata : {};\n            });\n        }\n\n        return this.playerSpriteMetadata;\n    }\n\n    private resetJumps(): void {\n        this.usedJump = false;\n        this.usedDoubleJump = false;\n        this.jumpThresholdTimer = PLAYER_JUMP_TIMING_THRESHOLD;\n    }\n\n    private isOutOfBounds(): boolean {\n        if (!this.isControllable) return false;\n        const mapBounds = this.scene.camera.getBounds();\n        if (!mapBounds) return false;\n\n        return !this.scene.world.boundingBoxesCollide(this.getBounds(), {\n            x: mapBounds.x + 4,\n            y: mapBounds.y - 4,\n            width: mapBounds.width - 8,\n            height: mapBounds.height - 8\n        });\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n        const triggerCollisions = this.scene.world.getTriggerCollisions(this);\n\n        // Check if the player left the current map bounds and teleport him back to a valid position.\n        if (this.isOutOfBounds()) {\n            const pos = this.scene.apocalypse ?\n                this.scene.pointsOfInterest.find(poi => poi.name === \"boss_spawn\") :\n                this.scene.pointsOfInterest.find(poi => poi.name === \"player_reset_position\");\n            if (pos) {\n                this.x = pos.x;\n                this.y = pos.y;\n                this.scene.camera.setBounds(this.getCurrentMapBounds());\n            }\n        }\n\n        this.speechBubble.update(this.x, this.y);\n\n        if (this.thinkBubble) {\n            this.thinkBubble.update(this.x, this.y);\n        }\n\n        if (this.playerConversation) {\n            this.playerConversation.update();\n        }\n\n        if (this.showHints) {\n            if ((Date.now() - this.lastHint) / 1000 > HINT_TIMEOUT) {\n                this.showHint();\n            }\n        }\n\n        if (this.carrying) {\n            if (this.running) {\n                this.running = false;\n                this.animation = \"walk\";\n            }\n\n            this.carrying.x = this.x;\n\n            const currentFrameIndex = Player.playerSprites[this.characterAsset].getTaggedFrameIndex(\n                this.animation + \"-carry\",\n                this.scene.gameTime * 1000\n            );\n\n            const carryOffsetFrames = this.getPlayerSpriteMetadata()[this.characterAsset].carryOffsetFrames ?? [];\n            const offset = carryOffsetFrames.includes(currentFrameIndex + 1) ? 0 : -1;\n            this.carrying.y = this.y + (this.height - this.carrying.carryHeight) - offset;\n\n            if (this.carrying instanceof Stone) {\n                this.carrying.direction = this.direction;\n            }\n        }\n\n        const isDrowning = this.scene.world.collidesWith(this.x, this.y) === Environment.WATER;\n\n        if (isDrowning) {\n            if (!this.thinkBubble) {\n                const thought = drowningThoughts[rndInt(0, drowningThoughts.length)];\n                void this.think(thought.message, thought.duration);\n            }\n\n            if (this.carrying instanceof Stone) {\n                this.carrying.setVelocity(-2, 10);\n                this.carrying = null;\n            }\n\n            if (this.drowning === 0) {\n                CharacterSounds.playRandomCharacterSound(\"drown\", this.voiceAsset);\n            }\n\n            this.setVelocityX(0);\n            this.drowning += dt;\n\n            if (this.drowning > 3) {\n                CharacterSounds.stopCharacterSound(\"drown\", this.voiceAsset);\n                this.respawn();\n                const thought = drownThoughts[rndInt(0, drownThoughts.length)];\n                void this.think(thought.message, thought.duration);\n            }\n        } else {\n            this.drowning = 0;\n        }\n\n        const world = this.scene.world;\n        const wasFlying = this.flying;\n        const prevVelocity = this.getVelocityY();\n\n        // Apply auto movement\n        if (this.autoMove) {\n            if (\n                (this.autoMove.lastX - this.autoMove.destinationX) * (this.x - this.autoMove.destinationX) <= 0\n            ) {\n                // Reached or overreached destination\n                this.stopAutoMove();\n            } else {\n                // Not yet reached, keep going\n                this.autoMove.lastX = this.x;\n\n                if (this.x < this.autoMove.destinationX) {\n                    this.moveRight = true;\n                    this.moveLeft = false;\n                } else {\n                    this.moveRight = false;\n                    this.moveLeft = true;\n                }\n            }\n        }\n\n        // Player movement\n        if (!this.scene.camera.isOnTarget()) {\n            this.moveRight = false;\n            this.moveLeft = false;\n        }\n\n        const acceleration = this.flying ? PLAYER_ACCELERATION_AIR : PLAYER_ACCELERATION;\n\n        if (!isDrowning) {\n            if (this.running) {\n                this.setMaxVelocity(MAX_PLAYER_RUNNING_SPEED);\n            } else {\n                this.setMaxVelocity(this.walkingSpeed);\n                // this.setMaxVelocity(this.characterAsset === CharacterAsset.PATIENT ? 3 : MAX_PLAYER_SPEED);\n            }\n\n            if (this.moveRight) {\n                this.direction = 1;\n\n                if (!this.flying) {\n                    Player.walkingSound.play();\n                }\n\n                this.accelerateX(acceleration * dt);\n            } else if (this.moveLeft) {\n                this.direction = -1;\n\n                if (!this.flying) {\n                    Player.walkingSound.play();\n                }\n\n                this.accelerateX(-acceleration * dt);\n            } else {\n                Player.walkingSound.stop();\n\n                if (this.getVelocityX() > 0) {\n                    this.decelerateX(acceleration * dt);\n                } else {\n                    this.decelerateX(-acceleration * dt);\n                }\n            }\n        }\n\n        // Set sprite index depending on movement\n        if (this.getVelocityX() === 0 && this.getVelocityY() === 0) {\n            this.animation = \"idle\";\n            this.flying = false;\n            this.resetJumps();\n        } else {\n            if (this.getVelocityY() > 0) {\n                this.animation = \"jump\";\n                this.flying = true;\n            } else if (\n                isDrowning\n                || (\n                    this.getVelocityY() < 0\n                    && this.y - world.getGround(this.x, this.y) > 10\n                )\n            ) {\n                if (this.jumpThresholdTimer < 0 || this.usedJump) {\n                    this.animation = \"fall\";\n                }\n\n                this.flying = true;\n            } else {\n                this.animation = (this.running && !this.carrying) ? \"run\" : \"walk\";\n                this.flying = false;\n                this.resetJumps();\n            }\n        }\n\n        if (wasFlying && !this.flying) {\n            CharacterSounds.playRandomCharacterSound(\"land\", this.voiceAsset);\n        }\n\n        // Reduce jump threshold timer when player did not jump yet when falling off an edge\n        if (this.flying && !this.usedJump && this.jumpThresholdTimer > 0) {\n            this.jumpThresholdTimer -= dt;\n        }\n\n        // Check for NPC's that can be interacted with. Reset closestNPC and get all entities that\n        // collide with the player with an added 5 px of margin. If there are multiple NPCs\n        // colliding, the closest one will be chosen.\n        this.closestNPC = null;\n        const entities = this.scene.world.getEntityCollisions(this, 5);\n\n        if (entities.length > 0) {\n            const closestEntity = entities.length > 1 ? this.getClosestEntity() : entities[0];\n\n            if (closestEntity instanceof NPC) {\n                this.closestNPC = closestEntity;\n            }\n        }\n\n        // Check for readables in player trigger collisions\n        this.readableTrigger = this.getReadableTrigger();\n\n        // Spawn random dust particles while walking\n        if (!this.disableParticles && this.visible) {\n            if (!this.flying && (Math.abs(this.getVelocityX()) > 1 || wasFlying)) {\n                if (timedRnd(dt, 0.2) || wasFlying) {\n                    this.dustEmitter.setPosition(this.x, this.y);\n                    const count = wasFlying ? Math.ceil(Math.abs(prevVelocity) / 5) : 1;\n                    this.dustEmitter.emit(count);\n                }\n            }\n        }\n\n        // Reset jump key state when on ground\n        if (!this.flying && this.jumpKeyPressed != null) {\n            this.jumpKeyPressed = null;\n        }\n\n        // Bounce\n        if (\n            this.scene.world.collidesWith(\n                this.x, this.y - 2,\n                [ this ]\n            ) === Environment.BOUNCE\n        ) {\n            this.bounce();\n        }\n\n        // Dance\n        if (this.dance) {\n            if (this.dance.hasStarted()) {\n                // Basic dancing or error?\n                const err = this.dance.getTimeSinceLastMistake();\n                const suc = this.dance.getTimeSinceLastSuccess();\n\n                if (err < 1 || suc < 3) {\n                    if (err <= suc) {\n                        if (err === 0) {\n                            this.currentFailAnimation = rndInt(1, 3);\n                        }\n\n                        this.animation = \"dance-fluke-\" + this.currentFailAnimation;\n                    } else {\n                        this.animation = \"dance\";\n                    }\n                }\n            }\n\n            this.dance.setPosition(this.x, this.y - 16);\n            const done = this.dance.update();\n\n            if (done) {\n                // On cloud -> make it rain\n                if (this.dance.wasSuccessful()) {\n                    // (Useless because wrong cloud but hey…)\n                    const ground = this.getGround();\n\n                    if (ground && ground instanceof Cloud) {\n                        ground.startRain(this.scene.apocalypse ? Infinity : 15);\n\n                        // Camera focus to boss for each triggered rain cloud\n                        const bossPointer = this.scene.pointsOfInterest.find(\n                            poi => poi.name === \"boss_spawn\"\n                        );\n\n                        if (bossPointer) {\n                            void this.scene.camera.focusOn(\n                                3,\n                                bossPointer.x, bossPointer.y + 60,\n                                1,\n                                0,\n                                valueCurves.cos(0.35)\n                            );\n                        }\n\n                        // Remove a single boss fight barrier\n                        const rainingCloudCount = this.scene.gameObjects.filter(\n                            o => o instanceof Cloud && o.isRaining()\n                        ).length;\n\n                        const wallIdentifier = `wall${rainingCloudCount - 1}`;\n\n                        const targetWall = this.scene.gameObjects.find(\n                            o => o instanceof Wall && o.identifier === wallIdentifier\n                        ) as Wall | undefined;\n\n                        if (targetWall) {\n                            targetWall.crumble();\n                        }\n                    }\n\n                    if (this.isCollidingWithTrigger(\"raincloud_sky\")) {\n                        this.scene.world.startRain();\n                    }\n                }\n                this.dance = null;\n            }\n        }\n\n        this.disableParticles = false;\n\n        // Pet Dog Animation\n        if (this.isPettingDog) {\n            this.animation = \"petting\";\n        }\n\n        // Logic from triggers\n        if (triggerCollisions.length > 0) {\n            triggerCollisions.forEach(trigger => {\n                // Handle MountainRiddle logic\n                if (trigger.name === \"reset_mountain\") {\n                    this.scene.mountainRiddle.resetRiddle();\n                }\n\n                if (trigger.name === \"mountaingate\") {\n                    const row = trigger.properties.row;\n                    const col = trigger.properties.col;\n\n                    if (col != null && row != null) {\n                        this.scene.mountainRiddle.checkGate(col, row);\n                    }\n                }\n\n                if (\n                    trigger.name === \"teleporter\"\n                    && this.scene.mountainRiddle.isFailed()\n                    && !this.scene.mountainRiddle.isCleared()\n                ) {\n                    const teleportY = trigger.properties.teleportY;\n\n                    if (teleportY != null) {\n                        this.y -= teleportY;\n                    }\n                }\n\n                if (trigger.name === \"finish_mountain_riddle\") {\n                    this.scene.mountainRiddle.clearRiddle();\n                }\n\n                // Disable particle effects while in trigger\n                const disableParticles = trigger.properties.disableParticles;\n\n                if (disableParticles === true) {\n                    this.disableParticles = true;\n                }\n\n                // Set Global Conversation Variables from map triggers\n                const globalConversationProps = {\n                    key: trigger.properties.setGlobalKey,\n                    value: trigger.properties.setGlobalVal\n                };\n\n                if (globalConversationProps.key != null && globalConversationProps.value != null) {\n                    Conversation.setGlobal(globalConversationProps.key, globalConversationProps.value);\n                }\n\n                // Enable Conversion Trees from map triggers\n                const enableConversationProps = {\n                    key: trigger.properties.setDialogEntity,\n                    value: trigger.properties.setDialogValue\n                };\n\n                if (enableConversationProps.key != null && enableConversationProps.value != null) {\n                    this.scene.game.campaign.runAction(\n                        \"enable\", null, [enableConversationProps.key, enableConversationProps.value]\n                    );\n                }\n            });\n        }\n    }\n\n\n    /**\n     * If given coordinate collides with the world then the first free y coordinate above is\n     * returned. This can be used to unstuck an object after a new position was set.\n     *\n     * @param x - X coordinate of current position.\n     * @param y - Y coordinate of current position.\n     * @return The Y coordinate of the ground below the given coordinate.\n     */\n    private pullOutOfGround(): number {\n        let pulled = 0, col = 0;\n\n        if (this.getVelocityY() <= 0) {\n            const world = this.scene.world;\n            const height = world.getHeight();\n\n            col = world.collidesWith(\n                this.x, this.y,\n                [ this ],\n                this.jumpDown ? [ Environment.PLATFORM, Environment.WATER ] : [ Environment.WATER ]\n            );\n\n            while (this.y < height && col) {\n                pulled++;\n                this.y++;\n                col = world.collidesWith(this.x, this.y);\n            }\n        }\n\n        return pulled;\n    }\n\n    private bounce(): void {\n        this.setVelocityY(Math.sqrt(2 * PLAYER_BOUNCE_HEIGHT * GRAVITY));\n        // Nice bouncy particles\n        this.bounceEmitter.setPosition(this.x, this.y - 12);\n        this.bounceEmitter.emit(20);\n        this.dustEmitter.clear();\n\n        Player.bouncingSound.stop();\n        Player.bouncingSound.play();\n    }\n\n    /**\n     * If given coordinate collides with the world then the first free y coordinate above is\n     * returned. This can be used to unstuck an object after a new position was set.\n     *\n     * @param x - X coordinate of current position.\n     * @param y - Y coordinate of current position.\n     * @return The Y coordinate of the ground below the given coordinate.\n     */\n    private pullOutOfCeiling(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        while (\n            this.y > 0\n            && world.collidesWith(\n                this.x, this.y + this.height,\n                [ this ],\n                [ Environment.PLATFORM, Environment.WATER ]\n            )\n        ) {\n            pulled++;\n            this.y--;\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfWall(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        if (this.getVelocityX() > 0) {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x + this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x--;\n                pulled++;\n            }\n        } else {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x - this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x++;\n                pulled++;\n            }\n        }\n\n        return pulled;\n    }\n\n    protected override updatePosition(newX: number, newY: number): void {\n        this.x = newX;\n        this.y = newY;\n\n        // Check collision with the environment and correct player position and movement\n        if (this.pullOutOfGround() !== 0 || this.pullOutOfCeiling() !== 0) {\n            this.setVelocityY(0);\n        }\n\n        if (this.pullOutOfWall() !== 0) {\n            this.setVelocityX(0);\n        }\n    }\n\n    protected override getGravity(): number {\n        if (this.flying && this.jumpKeyPressed === false && this.getVelocityY() > 0) {\n            return SHORT_JUMP_GRAVITY;\n        } else {\n            return GRAVITY;\n        }\n    }\n\n    public carry(object: PhysicsEntity): void {\n        if (!this.carrying) {\n            this.height = PLAYER_HEIGHT + object.carryHeight + PLAYER_CARRY_HEIGHT;\n\n            if (\n                object instanceof Seed\n                && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_SEED\n            ) {\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_SEED);\n            }\n\n            if (\n                object instanceof Wood\n                && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_WOOD\n            ) {\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_WOOD);\n                this.scene.game.campaign.runAction(\"enable\", null, [\"fire\", \"fire1\"]);\n            }\n\n            if (\n                object instanceof Stone\n                && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_STONE\n            ) {\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.GOT_STONE);\n            }\n\n            this.carrying = object;\n            object.setFloating(false);\n\n            if (object instanceof Stone) {\n                object.state = StoneState.DEFAULT;\n            }\n\n            if (object instanceof Seed) {\n                object.state = SeedState.FREE;\n            }\n\n            if (object instanceof Wood) {\n                object.state = WoodState.FREE;\n            }\n            object.x = this.x;\n            object.y = this.y + this.height;\n            object.setVelocity(0, 0);\n        }\n    }\n\n    public isCarrying(object?: PhysicsEntity): boolean {\n        if (object) {\n            return this.carrying === object;\n        } else {\n            return this.carrying != null;\n        }\n    }\n\n    public showHint(): void {\n        if (this.playerConversation === null) {\n            switch (this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex()) {\n                case QuestATrigger.JUST_ARRIVED:\n                    void this.think(\"I should talk to someone.\", 3000);\n                    break;\n                case QuestATrigger.TALKED_TO_FIRE:\n                    void this.think(\"I think the fire needs my help.\", 3000);\n                    break;\n                case QuestATrigger.GOT_QUEST_FROM_FIRE:\n                    void this.think(\"The fire told me to visit the tree in the east.\", 3000);\n                    break;\n                case QuestATrigger.TALKED_TO_TREE:\n                    void this.think(\"Maybe I should talk to the tree again.\", 3000);\n                    break;\n                case QuestATrigger.GOT_QUEST_FROM_TREE:\n                    void this.think(\"I need to pick up the seed by the tree.\", 3000);\n                    break;\n                case QuestATrigger.GOT_SEED:\n                    void this.think(\"I should check the mountains for a good place for the seed.\", 3000);\n                    break;\n                case QuestATrigger.PLANTED_SEED:\n                    void this.think(\"The seed needs something to grow, I think.\", 3000);\n                    break;\n                case QuestATrigger.TALKED_TO_STONE:\n                    void this.think(\"I should talk to that crazy stone again.\", 3000);\n                    break;\n                case QuestATrigger.GOT_STONE:\n                    void this.think(\"My arms get heavy. I really should throw that thing in the river.\", 3000);\n                    break;\n                case QuestATrigger.THROWN_STONE_INTO_WATER:\n                    void this.think(\"There must be something interesting west of the river.\", 3000);\n                    break;\n                case QuestATrigger.GOT_MULTIJUMP:\n                    void this.think(\"I should check the clouds. The seed still needs something to grow.\", 3000);\n                    break;\n                case QuestATrigger.MADE_RAIN:\n                    void this.think(\"I should talk to that singing tree again.\", 3000);\n                    break;\n                case QuestATrigger.GOT_WOOD:\n                    void this.think(\"Quick! The fire needs wood!\", 3000);\n                    break;\n            }\n        }\n\n        this.lastHint = Date.now();\n    }\n\n    protected override isJumpDown(): boolean {\n        return this.jumpDown;\n    }\n\n    protected override isPlayer(): boolean {\n        return true;\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { Entity, entity, type EntityArgs } from \"../Entity\";\n\nenum PortalAnimationState { WAITING, FADEIN, IDLE, FADEOUT, GONE }\n\n@entity(\"portal\")\nexport class Portal extends Entity {\n    @asset(\"sprites/portal.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/portal/portal.ogg\")\n    private static readonly sound: Sound;\n\n    private animationState = PortalAnimationState.WAITING;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 32, height: 50, isTrigger: false, ...args });\n        this.animator.assignSprite(Portal.sprite);\n    }\n\n    private nextAnimationState(): void {\n        this.animationState++;\n    }\n\n    public draw(): void {\n        switch (this.animationState) {\n            case PortalAnimationState.WAITING:\n                this.animator.play(\"empty\", 1);\n                break;\n            case PortalAnimationState.FADEIN:\n                this.animator.play(\"fadein\", 1, { loop: false, callback: this.nextAnimationState.bind(this) });\n                break;\n            case PortalAnimationState.IDLE:\n                this.animator.play(\"idle\", 1);\n                break;\n            case PortalAnimationState.FADEOUT:\n                this.animator.play(\"fadeout\", 1, { loop: false, callback: this.nextAnimationState.bind(this) });\n                break;\n            case PortalAnimationState.GONE:\n                this.animator.play(\"empty\", 1);\n                break;\n        }\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        if (this.animationState === PortalAnimationState.WAITING) {\n            if (this.timeAlive >= 1) {\n                this.nextAnimationState();\n                Portal.sound.play();\n            }\n        } else if (this.animationState === PortalAnimationState.IDLE) {\n            if (this.timeAlive >= 4) {\n                this.nextAnimationState();\n            }\n        } else if (this.animationState === PortalAnimationState.GONE) {\n            this.scene.removeGameObject(this);\n        }\n    }\n}\n","import powershiba1 from \"../../../assets/dialog/powershiba1.dialog.json\";\nimport powershiba3 from \"../../../assets/dialog/powershiba3.dialog.json\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { NPC } from \"./NPC\";\n\nexport enum PowerShibaState {\n    IN_CLOUDS,\n    ON_MOUNTAIN,\n    CONSUMED\n}\n\n@entity(\"powershiba\")\nexport class PowerShiba extends NPC {\n    @asset(\"sprites/powershiba.aseprite.json\")\n    private static readonly sprite: Aseprite;\n    private state = PowerShibaState.IN_CLOUDS;\n\n    private floatAmount = 4;\n    private floatSpeed = 2;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 22, height: 22, ...args });\n        this.conversation = new Conversation(powershiba1, this);\n    }\n\n    public nextState(): void {\n        this.state++;\n\n        if (this.state === PowerShibaState.ON_MOUNTAIN) {\n            const spawn = this.scene.pointsOfInterest.find(poi => poi.name === \"powershiba_mountain_spawn\");\n\n            if (!spawn) throw new Error(\"PowerShiba mountain spawn missing\");\n\n            this.floatSpeed = 2;\n            this.floatAmount = 4;\n            this.x = spawn.x;\n            this.y = spawn.y;\n            this.conversation = new Conversation(powershiba3, this);\n        }\n    }\n\n    protected override showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) return false;\n        else if (Conversation.getGlobals()[\"$gaveBoneToPowerShiba\"] && !Conversation.getGlobals()[\"$seedgrown\"]) return true;\n        else if (Conversation.getGlobals()[\"$gaveBoneToPowerShiba\"] && Conversation.getGlobals()[\"$seedgrown\"]\n            && !Conversation.getGlobals()[\"$gotPowerShibaQuest\"]) return true;\n        else if (this.state === PowerShibaState.ON_MOUNTAIN) return true;\n        return false;\n    }\n\n\n    public feed(): void {\n        this.floatSpeed = 3;\n        this.floatAmount = 5;\n        this.scene.game.campaign.runAction(\"giveBone\");\n        void this.think(\"Oh… I remember…\", 3000);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const floatOffsetY = Math.sin(this.timeAlive * this.floatSpeed) * this.floatAmount;\n\n        this.scene.renderer.addAseprite(\n            PowerShiba.sprite, \"idle\", this.x, this.y - floatOffsetY,\n            RenderingLayer.ENTITIES\n        );\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        if (this.thinkBubble) {\n            this.thinkBubble.draw(ctx);\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n        this.dialoguePrompt.update(dt, this.x, this.y + 16);\n        this.speechBubble.update(this.x, this.y);\n\n        if (this.thinkBubble) {\n            this.thinkBubble.update(this.x, this.y);\n        }\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Entity, entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\n\n@entity(\"radio\")\nexport class Radio extends Entity {\n    @asset(\"sprites/radio.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 24, height: 24, ...args, isTrigger: false });\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(Radio.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n    }\n\n    public override update(): void {}\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Entity, entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\n\n/** Riddle stone constructor arguments. */\nexport interface RiddleStoneArgs extends EntityArgs {\n    /** The column of this riddle stone. Defaults to 0. */\n    col?: number;\n\n    /** The row of this riddle stone. Defaults to 0. */\n    row?: number;\n}\n\n@entity(\"riddlestone\")\nexport class RiddleStone extends Entity {\n    @asset(\"sprites/riddlestone.aseprite.json\")\n    private static readonly sprite: Aseprite;\n    private readonly col: number;\n    private readonly row: number;\n\n    public constructor({ col = 0, row = 0, ...args }: RiddleStoneArgs) {\n        super({ width: 16, height: 16,  isTrigger: false, ...args });\n        this.col = col;\n        this.row = row;\n    }\n\n    public draw(): void {\n        if (this.scene.mountainRiddle.isCorrectGate(this.col, this.row)) {\n            this.scene.renderer.addAseprite(RiddleStone.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n        }\n    }\n\n    public override update(): void {}\n}\n","import { Environment } from \"../World\";\nimport { NPC } from \"./NPC\";\n\nexport abstract class ScriptableNPC extends NPC {\n    protected move: 0 | 1 | -1  = 0;\n\n    protected override updatePosition(newX: number, newY: number): void {\n        this.x = newX;\n        this.y = newY;\n\n        // Check collision with the environment and correct player position and movement\n        if (this.pullOutOfGround() !== 0 || this.pullOutOfCeiling() !== 0) {\n            this.setVelocityY(0);\n        }\n\n        if (this.pullOutOfWall() !== 0) {\n            this.setVelocityX(0);\n        }\n    }\n\n    private pullOutOfGround(): number {\n        let pulled = 0, col = 0;\n\n        if (this.getVelocityY() <= 0) {\n            const world = this.scene.world;\n            const height = world.getHeight();\n            col = world.collidesWith(this.x, this.y, [ this ], [ Environment.WATER ]);\n\n            while (this.y < height && col) {\n                pulled++;\n                this.y++;\n                col = world.collidesWith(this.x, this.y);\n            }\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfCeiling(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        while (\n            this.y > 0\n            && world.collidesWith(\n                this.x, this.y + this.height,\n                [ this ],\n                [ Environment.PLATFORM, Environment.WATER ]\n            )\n        ) {\n            pulled++;\n            this.y--;\n        }\n\n        return pulled;\n    }\n\n    private pullOutOfWall(): number {\n        let pulled = 0;\n        const world = this.scene.world;\n\n        if (this.getVelocityX() > 0) {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x + this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x--;\n                pulled++;\n            }\n        } else {\n            while (\n                world.collidesWithVerticalLine(\n                    this.x - this.width / 2, this.y + this.height * 3 / 4,\n                    this.height / 2,\n                    [ this ],\n                    [ Environment.PLATFORM, Environment.WATER ]\n                )\n            ) {\n                this.x++;\n                pulled++;\n            }\n        }\n\n        return pulled;\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { EyeType, Face } from \"../Face\";\nimport { type GameObjectInfo } from \"../MapInfo\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { now } from \"../util\";\nimport { Environment } from \"../World\";\nimport { NPC } from \"./NPC\";\nimport { Wood } from \"./Wood\";\n\nexport enum SeedState {\n    FREE = 0,\n    PLANTED = 1,\n    SWIMMING = 2,\n    GROWN = 3\n}\n\n@entity(\"seed\")\nexport class Seed extends NPC {\n    @asset(\"sprites/seed.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/throwing/success.mp3\")\n    private static readonly successSound: Sound;\n\n    public state = SeedState.FREE;\n    private readonly wood: Wood;\n    private readonly floatingPosition: GameObjectInfo;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 24, height: 24, ...args });\n        this.wood = new Wood({ scene: this.scene, x: this.x, y: this.y });\n        this.face = new Face(this.scene, this, EyeType.STANDARD, 0, 8);\n\n        const floatingPosition = this.scene.pointsOfInterest.find(poi => poi.name === \"recover_floating_position\");\n\n        if (!floatingPosition) {\n            throw new Error(\"Could not find “recover_floating_position” point of interest in game scene.\");\n        }\n\n        this.floatingPosition = floatingPosition;\n    }\n\n    public resetState(): void {\n        this.setFloating(false);\n        this.state = SeedState.FREE;\n    }\n\n    public bury(): void {\n        const seedPosition = this.scene.pointsOfInterest.find(poi => poi.name === \"seedposition\");\n        if (!seedPosition) throw new Error(\"Seed position is missing in points of interest array\");\n\n        this.x = seedPosition.x;\n        this.y = seedPosition.y;\n    }\n\n    private getSpriteTag(): string {\n        switch (this.state) {\n            case SeedState.PLANTED:\n                return \"planted\";\n            case SeedState.GROWN:\n                return \"grown\";\n            default:\n                return \"free\";\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            Seed.sprite,\n            this.getSpriteTag(),\n            this.x, this.y - 1,\n            RenderingLayer.ENTITIES,\n            undefined\n        );\n\n        if (this.state === SeedState.GROWN) {\n            this.drawFace(ctx);\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public grow(): void {\n        if (this.state === SeedState.PLANTED) {\n            this.state = SeedState.GROWN;\n            this.scene.seed = this;\n            Conversation.setGlobal(\"seedgrown\", \"true\");\n            this.scene.game.campaign.runAction(\"enable\", null, [\"tree\", \"tree2\"]);\n            this.scene.game.campaign.runAction(\"enable\", null, [\"seed\", \"seed1\"]);\n        }\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        if (this.state === SeedState.SWIMMING) {\n            const diffX = this.floatingPosition.x - this.x;\n            const moveX = Math.min(20, Math.abs(diffX)) * Math.sign(diffX);\n            this.x += moveX * dt;\n            this.setVelocityY(Math.abs(((now() % 2000) - 1000) / 1000) - 0.5);\n        }\n\n        if (this.state === SeedState.FREE || this.state === SeedState.SWIMMING) {\n            const player = this.scene.player;\n\n            if (!this.isCarried() && this.distanceTo(player) < 20) {\n                player.carry(this);\n            }\n            if (\n                !this.isCarried()\n                && this.scene.world.collidesWith(this.x, this.y - 8) === Environment.SOIL\n            ) {\n                const seedPosition = this.scene.pointsOfInterest.find(poi => poi.name === \"seedposition\");\n\n                if (!seedPosition) throw new Error(\"Seed position is missing in points of interest array\");\n\n                this.state = SeedState.PLANTED;\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.PLANTED_SEED);\n                this.setFloating(true);\n                this.x = seedPosition.x;\n                this.y = seedPosition.y;\n\n                Seed.successSound.play();\n                Conversation.setGlobal(\"seedplanted\", \"true\");\n            }\n\n            if (\n                !this.isCarried()\n                && this.state !== SeedState.SWIMMING\n                && this.scene.world.collidesWith(this.x, this.y - 5) === Environment.WATER\n            ) {\n                this.state = SeedState.SWIMMING;\n                this.setVelocity(0, 0);\n                this.setFloating(true);\n                this.y = this.floatingPosition.y;\n            }\n        } else if (this.state === SeedState.PLANTED) {\n            if (this.scene.world.isRaining()) {\n                this.grow();\n            }\n        } else if (this.state === SeedState.GROWN) {\n            // TODO Special update behavior when grown\n        }\n\n        this.speechBubble.update(this.x, this.y);\n    }\n\n    public spawnWood(): Wood {\n        if (!this.scene.gameObjects.includes(this.wood)) {\n            this.scene.addGameObject(this.wood);\n        }\n        this.wood.x = this.x;\n        this.wood.y = this.y + this.height / 2;\n        this.wood.setVelocity(-5, 0);\n\n        return this.wood;\n    }\n\n    public startDialog(): void {}\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { SoundEmitter } from \"../audio/SoundEmitter\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { RenderingLayer, RenderingType } from \"../Renderer\";\nimport { NPC } from \"./NPC\";\n\nenum AnimationTag {\n    INVISIBLE = \"invisible\",\n    IDLE = \"idle\"\n}\n\n@entity(\"shadowpresence\")\nexport class ShadowPresence extends NPC {\n    @asset(\"sprites/shadowpresence.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/ambient/cave.ogg\")\n    private static readonly caveAmbience: Sound;\n    private readonly soundEmitter: SoundEmitter;\n\n    private isNearPlayer = false;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 12, height: 46, ...args });\n        this.direction = -1;\n        this.lookAtPlayer = false;\n        this.soundEmitter = new SoundEmitter({\n            scene: this.scene,\n            x: this.x,\n            y: this.y,\n            sound: ShadowPresence.caveAmbience,\n            maxVolume: 0.3,\n            intensity: 1\n        });\n    }\n\n    protected override showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.isNearPlayer\n            && this.scene.game.campaign.getQuest(QuestKey.A).isTriggered(QuestATrigger.TALKED_TO_FIRE)\n            && !this.scene.game.campaign.getQuest(QuestKey.A).isTriggered(QuestATrigger.GOT_RUNNING_ABILITY)\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const scale = this.direction < 0 ? { x: -1, y: 1 } : undefined;\n        const animationTag = this.isNearPlayer ? AnimationTag.IDLE : AnimationTag.INVISIBLE;\n\n        this.scene.renderer.add({\n            type: RenderingType.ASEPRITE,\n            layer: RenderingLayer.ENTITIES,\n            translation: { x: this.x, y: -this.y },\n            position: {\n                x: -ShadowPresence.sprite.width >> 1,\n                y: -ShadowPresence.sprite.height\n            },\n            scale,\n            asset: ShadowPresence.sprite,\n            animationTag,\n            time: this.scene.gameTime * 1000\n        });\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public checkPlayerDistance(): void {\n        this.isNearPlayer = false;\n        if (this.distanceTo(this.scene.player) < 60) {\n            this.isNearPlayer = true;\n        }\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        this.checkPlayerDistance();\n        this.dialoguePrompt.update(dt, this.x, this.y + 48);\n        this.speechBubble.update(this.x, this.y + 12);\n        this.soundEmitter.update();\n    }\n}\n","import conversation from \"../../../assets/dialog/bird.dialog.json\";\nimport shiba1 from \"../../../assets/dialog/shiba1.dialog.json\";\nimport { DOUBLE_JUMP_COLORS, GRAVITY } from \"../../shared/constants\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { FaceModes } from \"../Face\";\nimport { type GameObjectInfo } from \"../MapInfo\";\nimport { type ParticleEmitter, valueCurves } from \"../Particles\";\nimport { QuestKey } from \"../Quests\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { calculateVolume, rnd, rndItem } from \"../util\";\nimport { Environment } from \"../World\";\nimport { SHRINK_SIZE } from \"./Fire\";\nimport { FireState } from \"./FireState\";\nimport { ScriptableNPC } from \"./ScriptableNPC\";\nimport { ShibaState } from \"./ShibaState\";\n\nconst IDLE_DURATION = [2, 3, 4];\nconst WALK_DURATION = [0.5, 1, 1.2, 1.5];\nconst ACCELERATION = 15;\n\nconst FLYING_DURATION = 8;\nconst JUMP_INTERVAL = 0.3;\nconst HEART_PARTICLE_DELAY = 0.5;\n\n@entity(\"shiba\")\nexport class Shiba extends ScriptableNPC {\n    @asset(\"sprites/shiba.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/ending/putout.mp3\")\n    private static readonly putOutSound: Sound;\n\n    @asset(\"sounds/jumping/jump_neutral.ogg\")\n    private static readonly jumpSound: Sound;\n\n    @asset(\"sprites/heart.aseprite.json\")\n    private static readonly heartImage: Aseprite;\n\n    private state = ShibaState.ON_TREE;\n    private idleTimer: number | null = rndItem(IDLE_DURATION);\n    private walkTimer: number | null = null;\n    private autoMoveDirection: 1 | -1 = 1;\n\n    private readonly doubleJumpEmitter: ParticleEmitter;\n    private readonly heartEmitter: ParticleEmitter;\n    private minAltitude: number;\n    private readonly jumpHeight = 1.5;\n    private jumpTimer = 0;\n    private flyingTime = 0;\n    private saidFarewell = false;\n    public peeing = false;\n    public isBeingPetted = false;\n    private nextHeartParticle = HEART_PARTICLE_DELAY;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 28, height: 24, ...args });\n\n        this.minAltitude = this.y;\n        this.conversation = new Conversation(conversation, this);\n        this.setMaxVelocity(2);\n        this.conversation = new Conversation(shiba1, this);\n\n        this.doubleJumpEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            velocity: () => ({ x: rnd(-1, 1) * 90, y: rnd(-1, 0) * 100 }),\n            color: () => rndItem(DOUBLE_JUMP_COLORS),\n            size: rnd(1, 2),\n            gravity: {x: 0, y: -120},\n            lifetime: () => rnd(0.4, 0.6),\n            alphaCurve: valueCurves.trapeze(0.05, 0.2)\n        });\n\n        this.heartEmitter = this.scene.particles.createEmitter({\n            position: {x: this.x, y: this.y},\n            offset: () => ({x: rnd(-8, 8), y: 18}),\n            velocity: () => ({ x: 0, y: 5 }),\n            color: () => Shiba.heartImage,\n            size: Math.max(Shiba.heartImage.width, Shiba.heartImage.height),\n            gravity: {x: 0, y: 0},\n            lifetime: () => rnd(1.5, 3),\n            blendMode: \"source-over\",\n            alphaCurve: valueCurves.cos(0.1, 0.5),\n        });\n    }\n\n    public setState(state: ShibaState): void {\n        this.state = state;\n    }\n\n    public getState(): ShibaState {\n        return this.state;\n    }\n\n    public nextState(): void {\n        this.state++;\n\n        if (this.state === ShibaState.FLYING_AWAY) {\n            this.lookAtPlayer = false;\n            this.scene.player.disableMultiJump();\n            this.setMaxVelocity(3);\n        } else if (this.state === ShibaState.ON_MOUNTAIN) {\n            this.move = 0;\n\n            const spawn = this.scene.pointsOfInterest.find(\n                poi => poi.name === \"shiba_mountain_spawn\"\n            );\n\n            if (!spawn) throw new Error(\"Shiba mountain spawn missing\");\n            this.x = spawn.x;\n            this.y = spawn.y;\n            this.scene.game.campaign.runAction(\"enable\", null, [\"shiba\", \"shiba4\"]);\n            this.scene.powerShiba.nextState();\n        } else if (this.state === ShibaState.GOING_TO_FIRE) {\n            this.scene.camera.setCinematicBar(1);\n\n            const shibaSpawnPos = this.scene.pointsOfInterest.find(\n                poi => poi.name === \"friendship_shiba_spawn\"\n            );\n\n            this.lookAtPlayer = false;\n            this.setMaxVelocity(2);\n\n            this.scene.startFriendshipMusic();\n\n            if (!shibaSpawnPos) throw new Error(\"'friendship_shiba_spawn' point in map is missing\");\n            this.x = shibaSpawnPos.x;\n            this.y = shibaSpawnPos.y;\n        } else if (this.state === ShibaState.KILLING_FIRE) {\n            this.move = 0;\n\n            setTimeout(() => this.think(\"Wow!\", 1500), 500);\n            setTimeout(() => (this.direction = 1), 1000);\n\n            setTimeout(() => {\n                void this.think(\"Bad fire!\", 2000);\n                this.scene.fire.setState(FireState.BEING_PUT_OUT);\n                this.scene.fire.growthTarget = SHRINK_SIZE;\n                this.peeing = true;\n                Shiba.putOutSound.setVolume(.3);\n                Shiba.putOutSound.play();\n            }, 2000);\n\n            setTimeout(() => this.scene.fire.think(\"Oh God…\", 2000), 4500);\n            setTimeout(() => this.scene.fire.think(\"Disgusting…\", 3000), 8000);\n        } else if (this.state === ShibaState.FIRE_KILLED) {\n            this.peeing = false;\n            this.scene.fire.state = FireState.PUT_OUT;\n            Shiba.putOutSound.stop();\n\n            setTimeout(() => (this.direction = -1), 1000);\n            setTimeout(() => this.think(\"I help friend!\", 1500), 1500);\n\n            setTimeout(() => {\n                void this.scene.fire.think(\"Yeah, great.\", 2000);\n                this.scene.fire.face?.setMode(FaceModes.BORED);\n                this.scene.player.isControllable = true;\n                this.scene.friendshipCutscene = false;\n                this.lookAtPlayer = true;\n                this.scene.game.campaign.runAction(\"enable\", null, [\"fire\", \"fire4\"]);\n                this.scene.game.campaign.runAction(\"enable\", null, [\"shiba\", \"shiba5\"]);\n                this.scene.game.campaign.getQuest(QuestKey.B).finish();\n            }, 3500);\n        }\n    }\n\n    protected jump(): void {\n        this.jumpTimer = JUMP_INTERVAL;\n        this.setVelocityY(Math.sqrt(2 * this.jumpHeight * GRAVITY));\n        this.doubleJumpEmitter.setPosition(this.x, this.y + 20);\n        this.doubleJumpEmitter.emit(20);\n\n        const vol = calculateVolume(this.distanceToPlayer, 0.4);\n\n        if (vol > 0) {\n            Shiba.jumpSound.setVolume(vol);\n            Shiba.jumpSound.stop();\n            Shiba.jumpSound.play();\n        }\n    }\n\n    protected canJump(): boolean {\n        return this.jumpTimer === 0;\n    }\n\n    public startBeingPetted(): void {\n        this.isBeingPetted = true;\n        const x = this.direction > 0 ? this.x + 5 : this.x - 5;\n        this.heartEmitter.setPosition(x, this.y);\n    }\n\n    public stopBeingPetted(): void {\n        this.isBeingPetted = false;\n    }\n\n    public getAnimationTag(): string {\n        if (this.peeing) return \"peeing\";\n        if (this.isBeingPetted) return \"petted\";\n        return \"idle\";\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        if (this.move === 0) {\n            this.scene.renderer.addAseprite(\n                Shiba.sprite, this.getAnimationTag(), this.x, this.y, RenderingLayer.ENTITIES, this.direction\n            );\n        } else {\n            this.scene.renderer.addAseprite(\n                Shiba.sprite, \"walk\", this.x, this.y, RenderingLayer.ENTITIES, this.direction\n            );\n        }\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        if (this.thinkBubble) {\n            this.thinkBubble.draw(ctx);\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) return false;\n\n        return false;\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        // Heart Emitter\n        if (this.isBeingPetted) {\n            this.nextHeartParticle -= dt;\n\n            if (this.nextHeartParticle < 0) {\n                this.heartEmitter.emit(1);\n                this.nextHeartParticle = HEART_PARTICLE_DELAY;\n            }\n            this.heartEmitter.update(dt);\n        }\n\n        // Triggers\n        const triggerCollisions = this.scene.world.getTriggerCollisions(this);\n\n        if (this.hasActiveConversation() || this.isBeingPetted) {\n            this.move = 0;\n        } else {\n            if (this.state === ShibaState.ON_TREE) {\n                this.onTreeUpdateLogic(triggerCollisions, dt);\n            } else if (this.state === ShibaState.FLYING_AWAY) {\n                this.flyingAwayUpdateLogic(dt);\n            } else if (this.state === ShibaState.GOING_TO_FIRE) {\n                this.walkToFireLogic(triggerCollisions);\n            }\n        }\n\n        if (this.move !== 0) {\n            this.direction = this.move;\n            this.accelerateX(ACCELERATION * dt * this.move);\n        } else {\n            if (this.getVelocityX() > 0) {\n                this.decelerateX(ACCELERATION * dt);\n            } else {\n                this.decelerateX(-ACCELERATION * dt);\n            }\n        }\n\n        this.dialoguePrompt.update(dt, this.x, this.y + 20);\n        this.speechBubble.update(this.x, this.y);\n\n        if (this.thinkBubble) {\n            this.thinkBubble.update(this.x, this.y);\n        }\n    }\n\n    public override isReadyForConversation(): boolean | null {\n        const superResult = super.isReadyForConversation();\n        return (superResult === true && this.state !== ShibaState.FLYING_AWAY && !this.isBeingPetted);\n    }\n\n    private walkToFireLogic(triggerCollisions: GameObjectInfo[]): void {\n        this.move = -1;\n\n        if (\n            this.scene.world.collidesWithVerticalLine(\n                this.x - (this.width / 2), this.y + this.height,\n                this.height,\n                [ this ],\n                [ Environment.PLATFORM, Environment.WATER ]\n            )\n        ) {\n            this.jump();\n        }\n\n        if (triggerCollisions.length > 0) {\n            const event = triggerCollisions.find(t => t.name === \"shiba_stop\");\n\n            if (event) {\n                this.nextState();\n            }\n        }\n    }\n\n    private onTreeUpdateLogic(triggerCollisions: GameObjectInfo[], dt: number): void {\n        if (triggerCollisions.length > 0) {\n            const event = triggerCollisions.find(t => t.name === \"shiba_action\");\n\n            if (event != null && event.properties.velocity != null) {\n                this.autoMoveDirection = event.properties.velocity > 0 ? 1 : -1;\n                this.move = this.autoMoveDirection;\n            }\n        }\n\n        if (this.idleTimer !== null && this.idleTimer >= 0) {\n            this.idleTimer -= dt;\n        }\n\n        if (this.walkTimer !== null && this.walkTimer >= 0) {\n            this.walkTimer -= dt;\n        }\n\n        if (this.idleTimer != null && this.idleTimer <= 0 && this.walkTimer === null) {\n            this.walkTimer = rndItem(WALK_DURATION);\n            this.idleTimer = null;\n            this.move = this.autoMoveDirection;\n        }\n\n        if (this.walkTimer != null && this.walkTimer <= 0 && this.idleTimer === null) {\n            this.idleTimer = rndItem(IDLE_DURATION);\n            this.walkTimer = null;\n            this.move = 0;\n        }\n\n        // Check if bone is near\n        if (\n            Conversation.getGlobals()[\"$gotBoneQuest\"]\n            && !Conversation.getGlobals()[\"$broughtBone\"]\n            && this.distanceTo(this.scene.bone) < 100\n        ) {\n            Conversation.setGlobal(\"broughtBone\", \"true\");\n            void this.think(\"Wow! Bone!!!\", 2000);\n            this.scene.game.campaign.runAction(\"enable\", null, [\"shiba\", \"shiba2\"]);\n        }\n    }\n\n    private flyingAwayUpdateLogic(dt: number): void {\n        this.move = 1;\n        this.minAltitude += 20 * dt;\n\n        if (this.jumpTimer > 0) {\n            this.jumpTimer -= dt;\n            if (this.jumpTimer < 0) {\n                this.jumpTimer = 0;\n            }\n        }\n\n        if (this.y < this.minAltitude && this.canJump()) {\n            this.jump();\n        }\n\n        this.flyingTime += dt;\n\n        if (!this.saidFarewell && this.flyingTime > 2) {\n            this.saidFarewell = true;\n            void this.think(\"See you on the mountain!\", 3000);\n        }\n\n        if (this.flyingTime >= FLYING_DURATION) {\n            this.nextState();\n        }\n    }\n}\n","export enum ShibaState {\n    ON_TREE,\n    FLYING_AWAY,\n    ON_MOUNTAIN,\n    GOING_TO_FIRE,\n    KILLING_FIRE,\n    FIRE_KILLED\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer, RenderingType } from \"../Renderer\";\nimport { NPC } from \"./NPC\";\n\nexport interface SignArgs extends EntityArgs {\n    content?: string;\n}\n\n@entity(\"sign\")\nexport class Sign extends NPC {\n    @asset(\"sprites/sign.aseprite.json\")\n    private static readonly sprite: Aseprite;\n    public override conversation: Conversation;\n\n    public constructor({ content, ...args }: SignArgs) {\n        super({ width: 16, height: 16, ...args });\n        this.conversation = this.generateConversation(this.prepareContent(content));\n    }\n\n    private prepareContent(content?: string): string[] {\n        if (content == null) {\n            return [\"The sign is empty.\"];\n        }\n\n        return content.split(\":::\");\n    }\n\n    public override getInteractionText(): string {\n        return \"Read sign\";\n    }\n\n    private generateConversation(lines: string[]): Conversation {\n        const json: Record<string, string[]> = { \"entry\": [] };\n\n        lines.forEach((line, index) => {\n            if (index === lines.length - 1) {\n                line += \" @entry !end\";\n            }\n            json.entry.push(line);\n        });\n\n        return new Conversation(json, this);\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.add({\n            type: RenderingType.ASEPRITE,\n            layer: RenderingLayer.ENTITIES,\n            translation: { x: this.x, y: -this.y },\n            position: {\n                x: -Sign.sprite.width >> 1,\n                y: -Sign.sprite.height\n            },\n            asset: Sign.sprite,\n            animationTag: \"idle\",\n            time: this.scene.gameTime * 1000\n        });\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(): void {}\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\n\n@entity(\"skull\")\nexport class Skull extends PhysicsEntity {\n    @asset(\"sprites/skull.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 16, height: 16, ...args });\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(Skull.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        const player = this.scene.player;\n\n        if (!this.isCarried() && this.distanceTo(player) < 20) {\n            player.carry(this);\n        }\n    }\n}\n","import { PIXEL_PER_METER } from \"../../shared/constants\";\nimport { entity } from \"../Entity\";\nimport { RenderingLayer, RenderingType } from \"../Renderer\";\nimport { PhysicsEntity, type PhysicsEntityArgs } from \"./PhysicsEntity\";\n\n@entity(\"snowball\")\nexport class Snowball extends PhysicsEntity {\n    public constructor(args: PhysicsEntityArgs) {\n        super({ width: 0.25 * PIXEL_PER_METER, height: 0.25 * PIXEL_PER_METER, ...args });\n    }\n\n    public draw(): void {\n        this.scene.renderer.add({\n            type: RenderingType.RAW,\n            layer: RenderingLayer.ENTITIES,\n            draw: (ctx: CanvasRenderingContext2D) => {\n                ctx.save();\n                ctx.beginPath();\n                ctx.translate(this.x, -this.y);\n                ctx.strokeStyle = \"black\";\n                ctx.fillStyle = \"white\";\n                ctx.beginPath();\n                ctx.arc(0, -this.height / 2, this.width / 2, 0, Math.PI * 2, false);\n                ctx.fill();\n                ctx.stroke();\n                ctx.restore();\n            }\n        });\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { EyeType, Face, FaceModes } from \"../Face\";\nimport { type GameObjectInfo } from \"../MapInfo\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { type CollidableGameObject } from \"../scenes/GameObject\";\nimport { now } from \"../util\";\nimport { Environment } from \"../World\";\nimport { NPC } from \"./NPC\";\n\nexport enum StoneState {\n    DEFAULT = 0,\n    SWIMMING = 1,\n    FLOATING = 2\n}\n\n@entity(\"stone\")\nexport class Stone extends NPC implements CollidableGameObject {\n    @asset(\"sprites/stone.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/throwing/success.mp3\")\n    private static readonly successSound: Sound;\n\n    private readonly floatingPosition: GameObjectInfo;\n\n    public state: StoneState = StoneState.DEFAULT;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 26, height: 50, ...args });\n\n        this.direction = -1;\n        this.face = new Face(this.scene, this, EyeType.STONE, 0, 21);\n        this.lookAtPlayer = false;\n        this.carryHeight = 16;\n\n        const floatingPosition = this.scene.pointsOfInterest.find(\n            poi => poi.name === \"stone_floating_position\"\n        );\n\n        if (!floatingPosition) {\n            throw new Error(\"Could not find \\\"stone_floating_position\\\" point of interest in game scene\");\n        }\n\n        this.floatingPosition = floatingPosition;\n    }\n\n    protected override showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.PLANTED_SEED &&\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_STONE\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            Stone.sprite,\n            \"idle\",\n            this.x, this.y - 1,\n            RenderingLayer.ENTITIES,\n            this.direction\n        );\n\n        this.drawFace(ctx, false);\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        if (this.state === StoneState.DEFAULT) {\n            if (\n                this.scene.world.collidesWith(this.x, this.y - 5) === Environment.WATER\n            ) {\n                this.scene.game.campaign.getQuest(QuestKey.A).trigger(\n                    QuestATrigger.THROWN_STONE_INTO_WATER\n                );\n\n                this.state = StoneState.SWIMMING;\n                this.setVelocity(0, 0);\n                this.setFloating(true);\n                this.y = this.floatingPosition.y;\n                Stone.successSound.play();\n                this.scene.game.campaign.runAction(\"enable\", null, [\"stone\", \"stone2\"]);\n                this.scene.game.campaign.runAction(\"enable\", null, [\"flameboy\", \"flameboy2\"]);\n                this.scene.game.campaign.runAction(\"enable\", null, [\"caveman\", \"caveman2\"]);\n            }\n        } else if (this.state === StoneState.SWIMMING) {\n            const diffX = this.floatingPosition.x - this.x;\n            this.direction = Math.sign(diffX);\n            const moveX = Math.min(20, Math.abs(diffX)) * Math.sign(diffX);\n            this.x += moveX * dt;\n\n            if (Math.abs(moveX) < 2) {\n                this.state = StoneState.FLOATING;\n            }\n\n            this.setVelocityY(Math.abs(((now() % 2000) - 1000) / 1000) - 0.5);\n        } else if (this.state === StoneState.FLOATING) {\n            this.x = this.floatingPosition.x;\n            this.direction = -1;\n            this.setVelocityY(Math.abs(((now() % 2000) - 1000) / 1000) - 0.5);\n        }\n\n        this.dialoguePrompt.update(dt, this.x, this.y + 48);\n        this.speechBubble.update(this.x, this.y);\n    }\n\n    public collidesWith(x: number, y: number): number {\n        if (this.state === StoneState.FLOATING || this.state === StoneState.SWIMMING) {\n            if (\n                x >= this.x - this.width / 2\n                && x <= this.x + this.width / 2\n                && y >= this.y\n                && y <= this.y + this.height\n            ) {\n                return Environment.SOLID;\n            }\n        }\n\n        return Environment.AIR;\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public pickUp(): void {\n        this.face?.setMode(FaceModes.AMUSED);\n        this.scene.player.carry(this);\n        this.scene.game.campaign.runAction(\"enable\", null, [\"flameboy\", \"flameboy4\"]);\n    }\n\n    public dropInWater(): void {\n        this.x = this.floatingPosition.x;\n        this.y = this.floatingPosition.y;\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { EyeType, Face } from \"../Face\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { NPC } from \"./NPC\";\n\n@entity(\"stonedisciple\")\nexport class StoneDisciple extends NPC {\n    @asset(\"sprites/stonedisciple.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 32, height: 26, ...args });\n        this.direction = -1;\n        this.lookAtPlayer = true;\n        this.face = new Face(this.scene, this, EyeType.STONEDISCIPLE, 0, 0);\n    }\n\n    protected override showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        const talkedToStoneDisciple = Conversation.getGlobals()[\"$talkedToStoneDisciple\"];\n        const talkedToStoneDiscipleAgain = Conversation.getGlobals()[\"$talkedToStoneDiscipleAgain\"];\n        const gotTeleported = Conversation.getGlobals()[\"$gotTeleported\"];\n\n        return (\n            talkedToStoneDisciple === undefined\n            || (gotTeleported !== undefined && talkedToStoneDiscipleAgain === undefined)\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(\n            StoneDisciple.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES, this.direction\n        );\n\n        this.drawFace(ctx, false);\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        this.dialoguePrompt.update(dt, this.x, this.y + this.height);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import conversation from \"../../../assets/dialog/superthrow.dialog.json\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { NPC } from \"./NPC\";\n\n@entity(\"superthrow\")\nexport class SuperThrow extends NPC {\n    @asset(\"sprites/superthrow.aseprite.json\")\n    private static readonly sprite: Aseprite;\n    private readonly floatAmount = 4;\n    private readonly floatSpeed = 2;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 18, height: 22, ...args });\n        this.lookAtPlayer = false;\n        this.conversation = new Conversation(conversation, this);\n    }\n\n    public override getInteractionText(): string {\n        if (!this.met) {\n            return \"Touch\";\n        } else {\n            return \"Talk\";\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const floatOffsetY = Math.sin(this.timeAlive * this.floatSpeed) * this.floatAmount;\n\n        this.scene.renderer.addAseprite(\n            SuperThrow.sprite,\n            \"idle\",\n            this.x, this.y - floatOffsetY,\n            RenderingLayer.ENTITIES,\n            this.direction\n        );\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { EyeType, Face } from \"../Face\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { NPC } from \"./NPC\";\nimport { Seed } from \"./Seed\";\nimport { Wood } from \"./Wood\";\n\n@entity(\"tree\")\nexport class Tree extends NPC {\n    @asset(\"sprites/tree.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    public seed: Seed;\n    private readonly wood: Wood;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 78, height: 140, ...args });\n\n        this.face = new Face(this.scene, this, EyeType.TREE, 5, 94);\n        this.seed = new Seed({ scene: this.scene, x: this.x, y: this.y });\n        this.wood = new Wood({ scene: this.scene, x: this.x, y: this.y });\n\n        this.startDialog();\n    }\n\n    public override showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.GOT_QUEST_FROM_FIRE\n            && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.GOT_QUEST_FROM_TREE\n        ) || (\n            this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() >= QuestATrigger.MADE_RAIN\n            && this.scene.game.campaign.getQuest(QuestKey.A).getHighestTriggerIndex() < QuestATrigger.TREE_DROPPED_WOOD\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.scene.renderer.addAseprite(Tree.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n\n        this.drawFace(ctx);\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        if (this.showDialoguePrompt()) {\n            this.dialoguePrompt.update(dt, this.x + 4, this.y + 128);\n        }\n    }\n\n    public startDialog(): void {\n        this.speechBubble.update(this.x, this.y);\n    }\n\n    public spawnSeed(): Seed {\n        if (!this.scene.gameObjects.includes(this.seed)) {\n            this.scene.addGameObject(this.seed);\n        }\n\n        this.seed.resetState();\n        this.seed.x = this.x;\n        this.seed.y = this.y + this.height / 2;\n        this.seed.setVelocity(5, 0);\n\n        return this.seed;\n    }\n\n    public spawnWood(): Wood {\n        if (!this.scene.gameObjects.includes(this.wood)) {\n            this.scene.addGameObject(this.wood);\n        }\n\n        this.wood.resetState();\n        this.wood.x = this.x;\n        this.wood.y = this.y + this.height / 2;\n        this.wood.setVelocity(5, 0);\n\n        return this.wood;\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Entity, entity, type EntityArgs } from \"../Entity\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { type CollidableGameObject } from \"../scenes/GameObject\";\nimport { Environment } from \"../World\";\n\nenum WallState { SOLID, CRUMBLED }\n\nexport interface WallArgs extends EntityArgs {\n    identifier?: string;\n}\n\n@entity(\"wall\")\nexport class Wall extends Entity implements CollidableGameObject {\n    @asset(\"sprites/wall.aseprite.json\")\n    private static readonly sprite: Aseprite;\n    public readonly identifier: string;\n    private state = WallState.SOLID;\n\n    public constructor({ identifier, ...args }: WallArgs) {\n        super({ width: 24, height: 72, isTrigger: false, ...args });\n\n        if (identifier == null) {\n            throw new Error(\"Cannot create Wall entity with no identifier property\");\n        }\n\n        this.identifier = identifier;\n    }\n\n    public draw(): void {\n        const animationTag = this.state === WallState.SOLID ? \"solid\" : \"crumbled\";\n        this.scene.renderer.addAseprite(Wall.sprite, animationTag, this.x, this.y, RenderingLayer.ENTITIES);\n    }\n\n    public override update(): void {}\n\n    public crumble(): void {\n        this.state = WallState.CRUMBLED;\n    }\n\n    public collidesWith(x: number, y: number): number {\n        if (\n            this.state === WallState.SOLID\n            && x >= this.x - this.width / 2\n            && x <= this.x + this.width / 2\n            && y >= this.y\n            && y <= this.y + this.height\n        ) {\n            return Environment.SOLID;\n        }\n\n        return Environment.AIR;\n    }\n}\n","import { Conversation } from \"../Conversation\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport conversation from \"./../../../assets/dialog/window.dialog.json\";\nimport { NPC } from \"./NPC\";\n\n@entity(\"window\")\nexport class Window extends NPC {\n    public override conversation: Conversation;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 16, height: 16, ...args });\n        this.conversation = new Conversation(conversation, this);\n    }\n\n    public override getInteractionText(): string {\n        return \"Check window\";\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(): void {}\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { NPC } from \"./NPC\";\n\n@entity(\"wing\")\nexport class Wing extends NPC {\n    @asset(\"sprites/wing.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    private readonly floatAmount = 4;\n    private readonly floatSpeed = 2;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 24, height: 24, ...args });\n    }\n\n    protected override showDialoguePrompt(): boolean {\n        if (!super.showDialoguePrompt()) {\n            return false;\n        }\n\n        return (\n            this.scene.game.campaign.getQuest(QuestKey.A).isTriggered(QuestATrigger.PLANTED_SEED)\n            && !this.scene.game.campaign.getQuest(QuestKey.A).isTriggered(QuestATrigger.LEARNED_RAIN_DANCE)\n        );\n    }\n\n    public draw(ctx: CanvasRenderingContext2D): void {\n        const floatOffsetY = Math.sin(this.timeAlive * this.floatSpeed) * this.floatAmount;\n\n        this.scene.renderer.addAseprite(\n            Wing.sprite,\n            \"idle\",\n            this.x, this.y - floatOffsetY,\n            RenderingLayer.ENTITIES\n        );\n\n        if (this.showDialoguePrompt()) {\n            this.drawDialoguePrompt();\n        }\n\n        this.speechBubble.draw(ctx);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        this.dialoguePrompt.update(dt, this.x, this.y + 16);\n        this.speechBubble.update(this.x, this.y);\n    }\n}\n","import { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { entity, type EntityArgs } from \"../Entity\";\nimport { type GameObjectInfo } from \"../MapInfo\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { RenderingLayer } from \"../Renderer\";\nimport { now } from \"../util\";\nimport { Environment } from \"../World\";\nimport { PhysicsEntity } from \"./PhysicsEntity\";\n\nexport enum WoodState {\n    FREE = 0,\n    SWIMMING = 1\n}\n\n@entity(\"wood\")\nexport class Wood extends PhysicsEntity {\n    @asset(\"sprites/wood.aseprite.json\")\n    private static readonly sprite: Aseprite;\n\n    @asset(\"sounds/throwing/success.mp3\")\n    private static readonly successSound: Sound;\n    private readonly floatingPosition: GameObjectInfo;\n\n    public state = WoodState.FREE;\n\n    public constructor(args: EntityArgs) {\n        super({ width: 26, height: 16, ...args });\n\n        const floatingPosition = this.scene.pointsOfInterest.find(\n            poi => poi.name === \"recover_floating_position\"\n        );\n\n        if (!floatingPosition) {\n            throw new Error(\"Could not find \\\"recover_floating_position\\\" point of interest in game scene.\");\n        }\n\n        this.floatingPosition = floatingPosition;\n    }\n\n    public resetState(): void {\n        this.setFloating(false);\n        this.state = WoodState.FREE;\n    }\n\n    public draw(): void {\n        this.scene.renderer.addAseprite(Wood.sprite, \"idle\", this.x, this.y, RenderingLayer.ENTITIES);\n    }\n\n    public isCarried(): boolean {\n        return this.scene.player.isCarrying(this);\n    }\n\n    public override update(dt: number): void {\n        super.update(dt);\n\n        if (this.state === WoodState.SWIMMING) {\n            const diffX = this.floatingPosition.x - this.x;\n            const moveX = Math.min(20, Math.abs(diffX)) * Math.sign(diffX);\n            this.x += moveX * dt;\n            this.setVelocityY(Math.abs(((now() % 2000) - 1000) / 1000) - 0.5);\n        }\n\n        if (this.state === WoodState.FREE || this.state === WoodState.SWIMMING) {\n            const player = this.scene.player;\n\n            if (!this.isCarried() && this.distanceTo(player) < 20) {\n                player.carry(this);\n            }\n\n            if (\n                !this.isCarried()\n                && this.state !== WoodState.SWIMMING\n                && this.scene.world.collidesWith(this.x, this.y - 5) === Environment.WATER\n            ) {\n                this.state = WoodState.SWIMMING;\n                this.setVelocity(0, 0);\n                this.setFloating(true);\n                this.y = this.floatingPosition.y + 8;\n            }\n        }\n\n        if (!this.isCarried() && this.distanceTo(this.scene.fire) < 20) {\n            void this.scene.fire.feed(this);\n            this.scene.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.THROWN_WOOD_INTO_FIRE);\n            Wood.successSound.play();\n        }\n\n        if (!this.isCarried() && this.distanceTo(this.scene.flameboy) < 20) {\n            this.scene.flameboy.feed(this);\n            Wood.successSound.play();\n        }\n    }\n}\n","export enum Direction {\n    CENTER = 0,\n    LEFT = 1,\n    RIGHT = 2,\n    TOP = 4,\n    BOTTOM = 8,\n    TOP_LEFT = TOP | LEFT,\n    BOTTOM_LEFT = BOTTOM | LEFT,\n    TOP_RIGHT = TOP | RIGHT,\n    BOTTOM_RIGHT = BOTTOM | RIGHT\n}\n\nexport namespace Direction {\n    export function isLeft(direction: Direction): boolean {\n        return (direction & Direction.LEFT) !== 0;\n    }\n\n    export function isRight(direction: Direction): boolean {\n        return (direction & Direction.RIGHT) !== 0;\n    }\n\n    export function isTop(direction: Direction): boolean {\n        return (direction & Direction.TOP) !== 0;\n    }\n\n    export function isBottom(direction: Direction): boolean {\n        return (direction & Direction.BOTTOM) !== 0;\n    }\n\n    export function isHorizontal(direction: Direction): boolean {\n        return isLeft(direction) || isRight(direction);\n    }\n\n    export function isVertical(direction: Direction): boolean {\n        return isTop(direction) || isBottom(direction);\n    }\n\n    export function isEdge(direction: Direction): boolean {\n        return direction === Direction.LEFT\n            || direction === Direction.RIGHT\n            || direction === Direction.TOP\n            || direction === Direction.BOTTOM;\n    }\n\n    export function isCorner(direction: Direction): boolean {\n        return direction === Direction.TOP_LEFT\n            || direction === Direction.TOP_RIGHT\n            || direction === Direction.BOTTOM_LEFT\n            || direction === Direction.BOTTOM_RIGHT;\n    }\n\n    export function getX(direction: Direction): number {\n        return isLeft(direction) ? -1 : isRight(direction) ? 1 : 0;\n    }\n\n    export function getY(direction: Direction): number {\n        return isTop(direction) ? -1 : isBottom(direction) ? 1 : 0;\n    }\n}\n","import { GAME_CANVAS_HEIGHT, GAME_CANVAS_WIDTH } from \"../shared/constants\";\n\n/** Canvas used by the game to render stuff. It's a singleton... */\nlet gameCanvas: HTMLCanvasElement;\n\nexport async function loadImage(source: string | URL): Promise<HTMLImageElement> {\n    const img = new Image();\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n        img.onload = () => {\n            resolve(img);\n        };\n        img.onerror = () => {\n            reject(new Error(`Unable to load image '${source.toString()}'`));\n        };\n        img.src = source instanceof URL ? source.href : `assets/${source}`;\n    });\n}\n\nexport function createCanvas(width: number, height: number): HTMLCanvasElement {\n    const c = document.createElement(\"canvas\");\n    if (c == null) {\n        throw new Error(\"No canvas support\");\n    }\n    c.width = width;\n    c.height = height;\n\n    return c;\n}\n\nexport function getGameCanvas(width: number = GAME_CANVAS_WIDTH, height: number = GAME_CANVAS_HEIGHT): HTMLCanvasElement {\n    if (gameCanvas == null) {\n        gameCanvas = createCanvas(width, height);\n        gameCanvas.id = \"game\";\n    }\n    return gameCanvas;\n}\n\nexport function getRenderingContext(canvas: HTMLCanvasElement, contextId: \"2d\",\n    options?: CanvasRenderingContext2DSettings): CanvasRenderingContext2D;\nexport function getRenderingContext(canvas: HTMLCanvasElement, contextId: string, options?: unknown): RenderingContext {\n    const ctx = canvas.getContext(contextId, options);\n    if (ctx == null) {\n        throw new Error(`Canvas doesn't support context with id '${contextId}'`);\n    }\n    return ctx;\n}\n\nexport function createContext2D(width: number, height: number): CanvasRenderingContext2D {\n    return getRenderingContext(createCanvas(width, height), \"2d\");\n}\n\nexport function getImageData(image: HTMLImageElement): ImageData {\n    const ctx = createContext2D(image.width, image.height);\n    ctx.drawImage(image, 0, 0, image.width, image.height);\n\n    return ctx.getImageData(0, 0, image.width, image.height);\n}\n","/**\n * Affine transformation matrix. It behaves like a 3x3 matrix where the third row is always assumed to be 0 0 1.\n * This matrix is useful for 2D transformations and is compatible to the transformations done in a Canvas for example.\n */\nexport class AffineTransform {\n    /**\n     * Creates a matrix initialized to an identity matrix.\n     */\n    public constructor();\n\n    /**\n     * Creates a new matrix initialized to the given component values.\n     *\n     * @param m11 - The horizontal scaling. A value of 1 results in no scaling.\n     * @param m12 - The vertical skewing.\n     * @param m21 - The horizontal skewing.\n     * @param m22 - The vertical scaling. A value of 1 results in no scaling.\n     * @param dx  - The horizontal translation (moving).\n     * @param dy  - The vertical translation (moving).\n     */\n    public constructor(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number);\n\n    public constructor(\n        public m11: number = 1,\n        public m12: number = 0,\n        public m21: number = 0,\n        public m22: number = 1,\n        public dx: number = 0,\n        public dy: number = 0,\n    ) {}\n\n    /**\n     * Creates a new affine transformation from the given DOM matrix object.\n     *\n     * @aram domMatrix - The DOM matrix object. Must be a 2D matrix.\n     * @return The created affine transformation.\n     */\n    public static fromDOMMatrix(domMatrix: DOMMatrix): AffineTransform {\n        if (!domMatrix.is2D) {\n            throw new Error(\"Can only create Matrix3 from 2D DOMMatrix\");\n        }\n        return new AffineTransform(\n            domMatrix.a, domMatrix.b,\n            domMatrix.c, domMatrix.d,\n            domMatrix.e, domMatrix.f\n        );\n    }\n\n    /**\n     * Returns a clone of this matrix.\n     *\n     * @return The cloned matrix.\n     */\n    public clone(): AffineTransform {\n        return new AffineTransform(this.m11, this.m12, this.m21, this.m22, this.dx, this.dy);\n    }\n\n    /**\n     * Converts this matrix into a DOM matrix.\n     *\n     * @return The created DOM matrix.\n     */\n    public toDOMMatrix(): DOMMatrix {\n        return new DOMMatrix([ this.m11, this.m12, this.m21, this.m22, this.dx, this.dy ]);\n    }\n\n    /**\n     * Returns a human-readable string representation of the matrix.\n     *\n     * @return The human-readable string representation of the matrix.\n     */\n    public toString(): string {\n        return `[ ${this.m11}, ${this.m12}, ${this.m21}, ${this.m22}, ${this.dx}, ${this.dy} ]`;\n    }\n\n    /**\n     * Sets the matrix component values.\n     *\n     * @param m11 - The horizontal scaling. A value of 1 results in no scaling.\n     * @param m12 - The vertical skewing.\n     * @param m21 - The horizontal skewing.\n     * @param m22 - The vertical scaling. A value of 1 results in no scaling.\n     * @param dx  - The horizontal translation (moving).\n     * @param dy  - The vertical translation (moving).\n     */\n    public setComponents(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): this {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.dx = dx;\n        this.dy = dy;\n        return this;\n    }\n\n    /**\n     * Sets the matrix component values from another matrix.\n     *\n     * @param matrix - The matrix to copy the component values from.\n     */\n    public setMatrix(matrix: AffineTransform): this {\n        this.m11 = matrix.m11;\n        this.m12 = matrix.m12;\n        this.m21 = matrix.m21;\n        this.m22 = matrix.m22;\n        this.dx = matrix.dx;\n        this.dy = matrix.dy;\n        return this;\n    }\n\n    /**\n     * Checks if matrix is identity.\n     *\n     * @return True if identity, false if not.\n     */\n    public isIdentity(): boolean {\n        return this.m11 === 1\n            && this.m12 === 0\n            && this.m21 === 0\n            && this.m22 === 1\n            && this.dx === 0\n            && this.dy === 0;\n    }\n\n    /**\n     * Resets this matrix to identity.\n     */\n    public reset(): this {\n        this.m11 = 1;\n        this.m12 = 0;\n        this.m21 = 0;\n        this.m22 = 1;\n        this.dx = 0;\n        this.dy = 0;\n        return this;\n    }\n\n    /**\n     * Multiplies this matrix with the specified matrix (`this = this * other`).\n     *\n     * @param other - The other matrix to multiply this one with.\n     */\n    public mul(other: AffineTransform): this {\n        const a11 = this.m11, a12 = this.m12;\n        const a21 = this.m21, a22 = this.m22;\n        const a31 = this.dx, a32 = this.dy;\n        const b11 = other.m11, b12 = other.m12;\n        const b21 = other.m21, b22 = other.m22;\n        const b31 = other.dx, b32 = other.dy;\n        this.m11 = a11 * b11 + a21 * b12;\n        this.m12 = a12 * b11 + a22 * b12;\n        this.m21 = a11 * b21 + a21 * b22;\n        this.m22 = a12 * b21 + a22 * b22;\n        this.dx = a11 * b31 + a21 * b32 + a31;\n        this.dy = a12 * b31 + a22 * b32 + a32;\n        return this;\n    }\n\n    /**\n     * Divides this matrix by the specified matrix (`this = this / other` which is the same as\n     * `this = this * inverse(other)`).\n     *\n     * @param other - The other matrix to divide this one by.\n     */\n    public div(other: AffineTransform): this {\n        // a = this, b = other\n        const a11 = this.m11, a12 = this.m12;\n        const a21 = this.m21, a22 = this.m22;\n        const a31 = this.dx, a32 = this.dy;\n        const b11 = other.m11, b12 = other.m12;\n        const b21 = other.m21, b22 = other.m22;\n        const b31 = other.dx, b32 = other.dy;\n\n        // d = determinant(b)\n        const d = b11 * b22 - b21 * b12;\n\n        // c = invert(b)\n        const c11 = b22 / d;\n        const c12 = -b12 / d;\n        const c21 = -b21 / d;\n        const c22 = b11 / d;\n        const c31 = (b21 * b32 - b31 * b22) / d;\n        const c32 = (b31 * b12 - b11 * b32) / d;\n\n        // this = this * c\n        this.m11 = a11 * c11 + a21 * c12;\n        this.m12 = a12 * c11 + a22 * c12;\n        this.m21 = a11 * c21 + a21 * c22;\n        this.m22 = a12 * c21 + a22 * c22;\n        this.dx = a11 * c31 + a21 * c32 + a31;\n        this.dy = a12 * c31 + a22 * c32 + a32;\n\n        return this;\n    }\n\n    /**\n     * Returns the determinant of this matrix.\n     *\n     * @return The determinant of this matrix.\n     */\n    public getDeterminant(): number {\n        return this.m11 * this.m22 - this.m21 * this.m12;\n    }\n\n    /**\n     * Inverts this matrix.\n     */\n    public invert(): this {\n        const m11 = this.m11, m12 = this.m12;\n        const m21 = this.m21, m22 = this.m22;\n        const m31 = this.dx, m32 = this.dy;\n\n        const d = m11 * m22 - m21 * m12;\n\n        this.m11 = m22 / d;\n        this.m12 = -m12 / d;\n        this.m21 = -m21 / d;\n        this.m22 = m11 / d;\n        this.dx = (m21 * m32 - m31 * m22) / d;\n        this.dy = (m31 * m12 - m11 * m32) / d;\n\n        return this;\n    }\n\n    /**\n     * Translates this matrix by the specified values.\n     *\n     * @param dx - The X translation.\n     * @param dy - The Y translation.\n     */\n    public translate(dx: number, dy: number): this {\n        this.dx += dx * this.m11 + dy * this.m21;\n        this.dy += dx * this.m12 + dy * this.m22;\n        return this;\n    }\n\n    /**\n     * Translates this matrix by the specified X delta.\n     *\n     * @param d - The X translation delta.\n     */\n    public translateX(d: number): this {\n        this.dx += d * this.m11;\n        this.dy += d * this.m12;\n        return this;\n    }\n\n    /**\n     * Returns the X translation of the matrix.\n     *\n     * @return The X translation.\n     */\n    public getTranslationX(): number {\n        return this.dx;\n    }\n\n    /**\n     * Translates this matrix by the specified Y delta.\n     *\n     * @param d - The Y translation delta.\n     */\n    public translateY(d: number): this {\n        this.dx += d * this.m21;\n        this.dy += d * this.m22;\n        return this;\n    }\n\n    /**\n     * Returns the Y translation of the matrix.\n     *\n     * @return The Y translation.\n     */\n    public getTranslationY(): number {\n        return this.dy;\n    }\n\n    /**\n     * Sets matrix to a translation matrix.\n     *\n     * @param dx - The X translation.\n     * @param dy - The Y translation.\n     */\n    public setTranslation(dx: number, dy: number): this {\n        this.m11 =  1; this.m12 =  0;\n        this.m21 =  0; this.m22 =  1;\n        this.dx = dx; this.dy = dy;\n        return this;\n    }\n\n    /**\n     * Creates matrix initialized to a translation matrix.\n     *\n     * @param dx - The X translation.\n     * @param dy - The Y translation.\n     */\n    public static createTranslation(dx: number, dy: number): AffineTransform {\n        return new AffineTransform().setTranslation(dx, dy);\n    }\n\n    /**\n     * Scales this matrix by the specified factor.\n     *\n     * @param sx - The X scale factor.\n     * @param sy - The Y scale factor. Defaults to X scale factor.\n     */\n    public scale(sx: number, sy = sx): this {\n        this.m11 *= sx;\n        this.m12 *= sx;\n        this.m21 *= sy;\n        this.m22 *= sy;\n        return this;\n    }\n\n    /**\n     * Sets matrix to a scale matrix.\n     *\n     * @param sx - The X scale factor.\n     * @param sy - The Y scale factor. Defaults to X scale factor.\n     */\n    public setScale(sx: number, sy = sx): this {\n        this.m11 = sx; this.m12 =  0;\n        this.m21 =  0; this.m22 = sy;\n        this.dx =  0; this.dy =  0;\n        return this;\n    }\n\n    /**\n     * Scales this matrix by the specified factor along the X axis.\n     *\n     * @param s - The scale factor.\n     */\n    public scaleX(s: number): this {\n        this.m11 *= s;\n        this.m12 *= s;\n        return this;\n    }\n\n    /**\n     * Returns the X scale factor of the matrix.\n     *\n     * @return The X scale factor of the matrix.\n     */\n    public getScaleX(): number {\n        return Math.hypot(this.m11, this.m21);\n    }\n\n    /**\n     * Scales this matrix by the specified factor along the Y axis.\n     *\n     * @param s - The scale factor.\n     */\n    public scaleY(s: number): this {\n        this.m21 *= s;\n        this.m22 *= s;\n        return this;\n    }\n\n    /**\n     * Returns the Y scale factor of the matrix.\n     *\n     * @return The Y scale factor of the matrix.\n     */\n    public getScaleY(): number {\n        return Math.hypot(this.m12, this.m22);\n    }\n\n    /**\n     * Creates matrix initialized to a scale matrix.\n     *\n     * @param sx - The X scale factor.\n     * @param sy - The Y scale factor. Defaults to X scale factor.\n     */\n    public static createScale(sx: number, sy?: number): AffineTransform {\n        return new AffineTransform().setScale(sx, sy);\n    }\n\n    /**\n     * Rotates this matrix by the given angle.\n     *\n     * @param angle - The rotation angle in RAD.\n     */\n    public rotate(angle: number): this {\n        const m11 = this.m11, m12 = this.m12;\n        const m21 = this.m21, m22 = this.m22;\n        const s = Math.sin(angle), c = Math.cos(angle);\n        this.m11 = c * m11 + s * m21;\n        this.m12 = c * m12 + s * m22;\n        this.m21 = c * m21 - s * m11;\n        this.m22 = c * m22 - s * m12;\n        return this;\n    }\n\n    /**\n     * Returns the rotation of this matrix in radians.\n     *\n     * @return The rotation angle in radians.\n     */\n    public getRotation(): number {\n        const m11 = this.m11, m12 = this.m12;\n        const m21 = this.m21, m22 = this.m22;\n        if (m11 !== 0 || m21 !== 0) {\n            const acos = Math.acos(m11 / Math.hypot(m11, m21));\n            return m21 > 0 ? -acos : acos;\n        } else if (m12 !== 0 || m22 !== 0) {\n            const acos = Math.acos(m12 / Math.hypot(m12, m22));\n            return Math.PI / 2 + (m22 > 0 ? -acos : acos);\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Sets matrix to a rotation matrix.\n     *\n     * @param angle - The rotation angle in RAD.\n     */\n    public setRotation(angle: number): this {\n        const s = Math.sin(angle), c = Math.cos(angle);\n        this.m11 =  c; this.m12 = s;\n        this.m21 = -s; this.m22 = c;\n        this.dx =  0; this.dy = 0;\n        return this;\n    }\n\n    /**\n     * Create new matrix initialized to a rotation matrix.\n     *\n     * @param angle - The rotation angle in RAD.\n     */\n    public static createRotation(angle: number): AffineTransform {\n        return new AffineTransform().setRotation(angle);\n    }\n\n    /**\n     * Transforms the given 2D canvas rendering context.\n     *\n     * @param ctx - The 2D canvas rendering context to transform.\n     */\n    public transformCanvas(ctx: CanvasRenderingContext2D): this {\n        ctx.transform(this.m11, this.m12, this.m21, this.m22, this.dx, this.dy);\n        return this;\n    }\n\n    /**\n     * Sets the transformation of the given 2D canvas rendering context.\n     *\n     * @param ctx - The 2D canvas rendering context to set the transformation on.\n     */\n    public setCanvasTransform(ctx: CanvasRenderingContext2D): this {\n        ctx.setTransform(this.m11, this.m12, this.m21, this.m22, this.dx, this.dy);\n        return this;\n    }\n}\n","import { type ReadonlyVector2, Vector2 } from \"./Vector2\";\n\n/**\n * A line connecting two vertices.\n */\nexport class Line2 {\n    private normal: Vector2 | null = null;\n    private center: Vector2 | null = null;\n\n    /**\n     * Creates a new line from vertex a to vertex b.\n     *\n     * @param start - The start of the line.\n     * @param end   - The end of the line.\n     */\n    public constructor(\n        public start: Vector2,\n        public end: Vector2\n    ) {}\n\n    /**\n     * Returns the normal of the line. For a line in a clock-wise polygon this normal points to the outside of the\n     * polygon.\n     *\n     * @return The line normal. Normalized to a unit vector.\n     */\n    public getNormal(): ReadonlyVector2 {\n        return (this.normal ?? (this.normal = new Vector2())).setComponents(\n            this.end.y - this.start.y,\n            this.start.x - this.end.x\n        ).normalize();\n    }\n\n    /**\n     * Returns the center of the line.\n     *\n     * @return The center of the line.\n     */\n    public getCenter(): ReadonlyVector2 {\n        return (this.center ?? (this.center = new Vector2())).setComponents(\n            (this.start.x + this.end.x) / 2,\n            (this.start.y + this.end.y) / 2\n        );\n    }\n\n    /**\n     * Draws the line to the given 2D canvas rendering context. This only applies the line geometry,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     */\n    public draw(ctx: CanvasRenderingContext2D): this {\n        const { start: a, end: b } = this;\n        ctx.moveTo(a.x, a.x);\n        ctx.lineTo(b.x, a.y);\n        return this;\n    }\n\n    /**\n     * Draws the line normal to the given 2D canvas rendering context. This only applies the line geometry,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     * @param len - Optional custom normal line length.\n     */\n    public drawNormal(ctx: CanvasRenderingContext2D, len = 25): this {\n        const normal = this.getNormal();\n        const center = this.getCenter();\n        ctx.moveTo(center.x, center.y);\n        ctx.lineTo(center.x + normal.x * len, center.y + normal.y * len);\n        return this;\n    }\n}\n","import { Line2 } from \"./Line2\";\nimport { type ReadonlyVector2, Vector2 } from \"./Vector2\";\n\n/**\n * A polygon with any number of vertices.\n */\nexport class Polygon2 {\n    public readonly vertices: Vector2[];\n    public readonly edges: Line2[] = [];\n    private readonly normals: Vector2[] = [];\n\n    /**\n     * Creates a polygon with the given initial vertices.\n     *\n     * @param vertices - The polygon vertices.\n     */\n    public constructor(...vertices: Vector2[]) {\n        this.vertices = vertices;\n        for (let i = 0, max = vertices.length; i < max; ++i) {\n            this.edges.push(new Line2(vertices[i], vertices[i + 1] ?? vertices[0]));\n        }\n    }\n\n    /**\n     * Checks if polygon has at least one vertex.\n     *\n     * @return True if polygon has at least on vertex, false if not.\n     */\n    public hasVertices(): boolean {\n        return this.vertices.length > 0;\n    }\n\n    /**\n     * Adds the given vertex at the given index. Polygon edges are automatically corrected.\n     *\n     * @param vertex - The vertex to add.\n     * @param index  - Optional insertion index. If not specified then vertex is added at the end of the polygon.\n     */\n    public addVertex(vertex: Vector2, index: number = this.vertices.length): this {\n        const edge = new Line2(vertex, vertex);\n        this.vertices.splice(index, 0, vertex);\n        const previousEdge = this.edges[index - 1];\n        this.edges.splice(index, 0, edge);\n        if (previousEdge != null) {\n            edge.end = previousEdge.end;\n            previousEdge.end = vertex;\n        } else {\n            edge.end = this.vertices[0];\n        }\n        return this;\n    }\n\n    /**\n     * Removes the vertex at the given index. Polygon edges are automatically corrected.\n     *\n     * @param index - The index of the vertex to remove.\n     */\n    public removeVertex(index: number): this {\n        const edges = this.edges;\n        const edge = edges[index];\n        if (edge != null) {\n            const previousEdge = edges[index - 1] ?? edges[edges.length - 1];\n            const nextEdge = edges[index + 1] ?? edges[0];\n            if (previousEdge !== edge && nextEdge !== edge) {\n                nextEdge.start = edge.end;\n                previousEdge.end = edge.end;\n            }\n            this.vertices.splice(index, 1);\n            this.edges.splice(index, 1);\n        }\n        return this;\n    }\n\n    /**\n     * Removes all vertices from the polygon.\n     */\n    public clear(): this {\n        this.vertices.length = 0;\n        this.edges.length = 0;\n        this.normals.length = 0;\n        return this;\n    }\n\n    /**\n     * Returns the vertex normal for the vertex with the given index.\n     *\n     * @param index - The vertex index.\n     * @return The vertex normal.\n     */\n    public getVertexNormal(index: number): ReadonlyVector2 {\n        const normal = this.normals[index]?.reset() ?? (this.normals[index] = new Vector2());\n        const edges = this.edges;\n        const edge = edges[index];\n        if (edge != null) {\n            normal.add(edge.getNormal());\n            const previousEdge = edges[index - 1] ?? edges[edges.length - 1];\n            if (previousEdge != null) {\n                normal.add(previousEdge.getNormal());\n            }\n        }\n        return normal.normalize();\n    }\n\n    /**\n     * Draws the polygon to the given 2D canvas rendering context. This only applies the closed geometry, you have to\n     * fill/stroke/clip it yourself.\n     *\n     * @param ctx - The 2D canvas rendering context to render to.\n     */\n    public draw(ctx: CanvasRenderingContext2D): this {\n        const vertices = this.vertices;\n        if (vertices.length > 0) {\n            const first = vertices[0];\n            ctx.moveTo(first.x, first.y);\n            for (let i = 1, max = vertices.length; i < max; ++i) {\n                const next = vertices[i];\n                ctx.lineTo(next.x, next.y);\n            }\n        }\n        ctx.closePath();\n        return this;\n    }\n\n    /**\n     * Draws the polygon edge normals to the given 2D canvas rendering context. This only applies the line geometries,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     * @param len - Optional custom normal line length.\n     */\n    public drawNormals(ctx: CanvasRenderingContext2D, len?: number): this {\n        for (const edge of this.edges) {\n            edge.drawNormal(ctx, len);\n        }\n        return this;\n    }\n\n    /**\n     * Draws the vertex normals to the given 2D canvas rendering context. This only applies the line geometries,\n     * you have to stroke it yourself.\n     *\n     * @param ctx - The canvas rendering context.\n     * @param len - Optional custom normal line length.\n     */\n    public drawVertexNormals(ctx: CanvasRenderingContext2D, len: number = 25): this {\n        this.vertices.forEach((vertex, index) => {\n            ctx.moveTo(vertex.x, vertex.y);\n            const normal = this.getVertexNormal(index);\n            ctx.lineTo(vertex.x + normal.x * len, vertex.y + normal.y * len);\n        });\n        return this;\n    }\n}\n","import { type AffineTransform } from \"./AffineTransform\";\n\n/**\n * Minimal interface of a 2D vector.\n */\nexport interface Vector2Like {\n    x: number;\n    y: number;\n}\n\nexport interface ReadonlyVector2Like {\n    readonly x: number;\n    readonly y: number;\n}\n\nexport interface ReadonlyVector2 extends ReadonlyVector2Like {\n    /**\n     * Returns the length of the vector. If you only need to compare vector lengths so the real length doesn't matter\n     * then consider using the faster {@linkcode getSquareLength()} method which omits the expensive square root calculation.\n     *\n     * @return The vector length.\n     */\n    getLength(): number;\n\n    /**\n     * Returns the squared length of the vector. In some cases (Like comparing vector lengths) it is not necessary to\n     * compare the real length, it is enough to compare the squared length. This is faster because it only does\n     * addition and multiplication without a square root. If you need the real vector length then use the\n     * {@linkcode getLength()} method instead.\n     *\n     * @return The squared vector length.\n     */\n    getSquareLength(): number;\n\n    /**\n     * Returns the distance between this vector and the specified one. If you only need to compare vector distances so\n     * the real distance doesn't matter then consider using the faster {@linkcode getSquareDistance()} method which omits the\n     * expensive square root calculation.\n     *\n     * @param v - The other vector.\n     * @return The distance between this vector and the specified one.\n     */\n    getDistance(v: ReadonlyVector2Like): number;\n\n    /**\n     * Returns the squared distance between this vector and the specified one. In some cases (Like comparing\n     * vector distances) it is not necessary to compare the real distance, it is enough to compare the squared\n     * distance. This is faster because it only does addition and multiplication without a square root. If you need\n     * the real vector distance then use the {@linkcode getDistance()} method instead.\n     *\n     * @param v - The other vector.\n     * @return The squared distance between the two vectors.\n     */\n    getSquareDistance(v: ReadonlyVector2Like): number;\n\n    /**\n     * Returns the dot product of this vector and the specified one.\n     *\n     * @param v - The other vector.\n     * @return The dot product.\n     */\n    dot(v: ReadonlyVector2Like): number;\n\n    /**\n     * Returns a human-readable string representation of the vector.\n     *\n     * @param maxFractionDigits - Optional number of maximum fraction digits to use in the string. Defaults to 5.\n     * @return The human-readable string representation of the vector.\n     */\n    toString(maxFractionDigits?: number): string;\n}\n\n/**\n * Vector with two floating point components.\n */\nexport class Vector2 implements ReadonlyVector2Like, Vector2Like {\n    /**\n     * Creates a new vector with all components set to 0.\n     */\n    public constructor();\n\n    /**\n     * Creates a new vector with the given component values.\n     *\n     * @param x - The initial X component value.\n     * @param y - The initial Y component value.\n     */\n    public constructor(x: number, y: number);\n\n    public constructor(\n        public x: number = 0,\n        public y: number = 0\n    ) {}\n\n    /** @inheritDoc */\n    public toString(): string {\n        return `[ ${this.x}, ${this.y} ]`;\n    }\n\n    /**\n     * Sets the vector component values.\n     *\n     * @param x - The X component value to set.\n     * @param y - The Y component value to set.\n     */\n    public setComponents(x: number, y: number): this {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    /**\n     * Sets the vector component values by copying them from the given vector.\n     *\n     * @param vector - The vector to copy the X and Y component values from.\n     */\n    public setVector(vector: Vector2Like): this {\n        this.x = vector.x;\n        this.y = vector.y;\n        return this;\n    }\n\n    /** @inheritDoc */\n    public clone(): Vector2 {\n        return new Vector2(this.x, this.y);\n    }\n\n    /** @inheritDoc */\n    public getSquareLength(): number {\n        return this.x ** 2 + this.y ** 2;\n    }\n\n    /** @inheritDoc */\n    public getLength(): number {\n        return Math.sqrt(this.getSquareLength());\n    }\n\n    /** @inheritDoc */\n    public getSquareDistance(v: Vector2Like): number {\n        return (this.x - v.x) ** 2 + (this.y - v.y) ** 2;\n    }\n\n    /** @inheritDoc */\n    public getDistance(v: Vector2Like): number {\n        return Math.sqrt(this.getSquareDistance(v));\n    }\n\n    /** @inheritDoc */\n    public dot(v: Vector2Like): number {\n        return this.x * v.x + this.y * v.y;\n    }\n\n    /**\n     * Negates this vector.\n     */\n    public negate(): this {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n\n    /**\n     * Resets all components of this vector to 0.\n     */\n    public reset(): this {\n        this.x = this.y = 0;\n        return this;\n    }\n\n    /**\n     * Translates the vector by the given deltas.\n     *\n     * @param x - The x delta.\n     * @param y - The y delta.\n     */\n    public translate(x: number, y: number): this {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n\n    /**\n     * Adds the given vector to this vector.\n     *\n     * @param summand - The vector to add.\n     */\n    public add(summand: Vector2Like): this {\n        this.x += summand.x;\n        this.y += summand.y;\n        return this;\n    }\n\n    /**\n     * Subtracts the given vector from this vector.\n     *\n     * @param subtrahend - The vector to subtract from this vector.\n     */\n    public sub(subtrahend: Vector2Like): this {\n        this.x -= subtrahend.x;\n        this.y -= subtrahend.y;\n        return this;\n    }\n\n    /**\n     * Multiplies this vector with the specified matrix (In GLSL: `this = matrix * this`).\n     *\n     * @param matrix - The matrix to multiply this vector with.\n     */\n    public mul(arg: AffineTransform): this {\n        const x = this.x;\n        const y = this.y;\n        this.x = x * arg.m11 + y * arg.m21 + arg.dx;\n        this.y = x * arg.m12 + y * arg.m22 + arg.dy;\n        return this;\n    }\n\n    /**\n     * Multiplies this vector with the inverse of the specified matrix (In GLSL: `this = matrix / this`).\n     *\n     * @param matrix - The matrix to divide this vector by.\n     */\n    public div(arg: AffineTransform): this {\n        const b11 = arg.m11, b12 = arg.m12;\n        const b21 = arg.m21, b22 = arg.m22;\n        const x = this.x;\n        const y = this.y;\n        const d = b11 * b22 - b12 * b21;\n        const c11 = b22 / d;\n        const c12 = -b12 / d;\n        const c21 = -b21 / d;\n        const c22 = b11 / d;\n        const b31 = arg.dx, b32 = arg.dy;\n        this.x = x * c11 + y * c21 + (b21 * b32 - b31 * b22) / d;\n        this.y = x * c12 + y * c22 + (b31 * b12 - b11 * b32) / d;\n        return this;\n    }\n\n    /**\n     * Normalizes this vector to a length of 1.\n     */\n    public normalize(): this {\n        const len = this.getLength();\n        this.x /= len;\n        this.y /= len;\n        return this;\n    }\n}\n","import { type ControllerEventType } from \"./ControllerEventType\";\nimport { ControllerFamily } from \"./ControllerFamily\";\nimport { ControllerIntent } from \"./ControllerIntent\";\nimport { type GamepadModel } from \"./GamepadModel\";\n\nexport class ControllerEvent extends Object {\n    readonly #controllerFamily: ControllerFamily;\n    readonly #intents: ControllerIntent;\n    readonly #eventType: ControllerEventType;\n    readonly #repeat: boolean;\n\n    public constructor(\n        controllerFamily: ControllerFamily, eventType: ControllerEventType,\n        intents: ControllerIntent[], repeat: boolean = false\n    ) {\n        super();\n\n        this.#controllerFamily = controllerFamily;\n        this.#intents= intents.reduce((prev, curr) => prev | curr);\n        this.#eventType = eventType;\n        this.#repeat = repeat;\n    }\n\n    public get controllerFamily(): ControllerFamily {\n        return this.#controllerFamily;\n    }\n\n    public get eventType(): ControllerEventType {\n        return this.#eventType;\n    }\n\n    public get repeat(): boolean {\n        return this.#repeat;\n    }\n\n    public get isMenuLeft(): boolean {\n        return (this.#intents & ControllerIntent.MENU_LEFT) !== 0;\n    }\n\n    public get isMenuRight(): boolean {\n        return (this.#intents & ControllerIntent.MENU_RIGHT) !== 0;\n    }\n\n    public get isMenuUp(): boolean {\n        return (this.#intents & ControllerIntent.MENU_UP) !== 0;\n    }\n\n    public get isMenuDown(): boolean {\n        return (this.#intents & ControllerIntent.MENU_DOWN) !== 0;\n    }\n\n    public get isPlayerMoveLeft(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_MOVE_LEFT) !== 0;\n    }\n\n    public get isPlayerMoveRight(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_MOVE_RIGHT) !== 0;\n    }\n\n    public get isPlayerJump(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_JUMP) !== 0;\n    }\n\n    public get isPlayerDrop(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_DROP) !== 0;\n    }\n\n    public get isPlayerEnterDoor(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_ENTER_DOOR) !== 0;\n    }\n\n    public get isPlayerInteract(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_INTERACT) !== 0;\n    }\n\n    public get isPlayerAction(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_ACTION) !== 0;\n    }\n\n    public get isPlayerRun(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_RUN) !== 0;\n    }\n\n    public get isPlayerDance1(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_DANCE_1) !== 0;\n    }\n\n    public get isPlayerDance2(): boolean {\n        return (this.#intents & ControllerIntent.PLAYER_DANCE_2) !== 0;\n    }\n\n    public get isPause(): boolean {\n        return (this.#intents & ControllerIntent.PAUSE) !== 0;\n    }\n\n    public get isConfirm(): boolean {\n        return (this.#intents & ControllerIntent.CONFIRM) !== 0;\n    }\n\n    public get isAbort(): boolean {\n        return (this.#intents & ControllerIntent.ABORT) !== 0;\n    }\n}\n\nexport class GamepadControllerEvent extends ControllerEvent {\n    readonly #gamepadModel: GamepadModel;\n\n    public constructor(gamepadModel: GamepadModel, eventType: ControllerEventType, intents: ControllerIntent[], repeat: boolean = false) {\n        super(ControllerFamily.GAMEPAD, eventType, intents, repeat);\n        this.#gamepadModel = gamepadModel;\n    }\n\n    public get gamepadModel(): GamepadModel {\n        return this.#gamepadModel;\n    }\n}\n","export enum ControllerEventType {\n    UP = \"up\",\n    DOWN = \"down\",\n    PRESS = \"press\"\n}\n","/**\n * This enumeration is used to classify the various known input methods.\n */\nexport enum ControllerFamily {\n    KEYBOARD = \"keyboard\",\n    GAMEPAD = \"gamepad\"\n}\n\n/**\n * This enum consists of all supported button aseprite sheets\n */\nexport enum ControllerSpriteMap {\n    KEYBOARD = \"keyboard\",\n    XBOX = \"xbox\",\n    PLAYSTATION = \"playstation\",\n    STADIA = \"stadia\"\n}\n\n/**\n * This enum consists of all available animation tags supported by the button aseprite sheets\n */\nexport enum ControllerAnimationTags {\n    CONFIRM = \"confirm\",\n    JUMP = \"jump\",\n    ACTION = \"action\",\n    INTERACT = \"interact\",\n    OPEN_DOOR = \"up\",\n    BACK = \"back\"\n}\n","/**\n * Enumeration of the different intents that may be emitted by a single button,\n * whereas a button might either be a physical key on a keyboard, a mapped axis\n * on a gamepad or a touch screen event.\n *\n * Right now, these events are stored in a bit mask to be extra efficient, …\n * …maybe that's not really necessary and should be changed to improve\n * readability at some point…\n */\nexport enum ControllerIntent {\n    /** Used for unknown / unmapped buttons. */\n    NONE = 0,\n\n    /** Player movement: left */\n    PLAYER_MOVE_LEFT = 0b0000_0000_0000_0000_0001,\n    /** Player movement: right */\n    PLAYER_MOVE_RIGHT = 0b0000_0000_0000_0000_0010,\n    /** Player movement: jump */\n    PLAYER_JUMP = 0b0000_0000_0000_0000_0100,\n    /** Player movement: DROP (or: duck/crouch) */\n    PLAYER_DROP = 0b0000_0000_0000_0000_1000,\n\n    /** Talk to NPCs, read signs etc */\n    PLAYER_INTERACT = 0b0000_0000_0000_0001_0000,\n\n    /** Action, throw stuff */\n    PLAYER_ACTION = 0b0000_0000_0000_0010_0000,\n\n    /** Dance move no. 1 */\n    PLAYER_DANCE_1 = 0b0000_0000_0000_0100_0000,\n\n    /** Dance move no. 2 */\n    PLAYER_DANCE_2 = 0b0000_0000_0000_1000_0000,\n\n    // Menu navigation\n    MENU_LEFT = 0b0000_0000_0001_0000_0000,\n    MENU_RIGHT = 0b0000_0000_0010_0000_0000,\n    MENU_UP = 0b0000_0000_0100_0000_0000,\n    MENU_DOWN = 0b0000_0000_1000_0000_0000,\n\n    /** The key usually known as \"enter\" or something alike. */\n    CONFIRM = 0b0000_0001_0000_0000_0000,\n\n    /** Go through doors */\n    PLAYER_ENTER_DOOR = 0b0000_0010_0000_0000_0000,\n\n    /** Pause/unpause. */\n    PAUSE = 0b0000_0100_0000_0000_0000,\n\n    /** Back / abort / get-me-the-hell-out-of-here. */\n    ABORT = 0b0000_1000_0000_0000_0000,\n\n    /** Run modifier */\n    PLAYER_RUN = 0b0001_0000_0000_0000_0000,\n\n    UNUSED_1 = 0b0010_0000_0000_0000_0000,\n    UNUSED_2 = 0b0100_0000_0000_0000_0000,\n    UNUSED_3 = 0b1000_0000_0000_0000_0000,\n}\n","import { Signal } from \"../Signal\";\nimport { type ControllerEvent, GamepadControllerEvent } from \"./ControllerEvent\";\nimport { ControllerFamily, ControllerSpriteMap } from \"./ControllerFamily\";\nimport { DEFAULT_GAMEPAD_STYLE, GamepadStyle } from \"./GamepadStyle\";\n\nexport class ControllerManager {\n    static readonly #INSTANCE = new ControllerManager();\n\n    public static getInstance(): ControllerManager {\n        return ControllerManager.#INSTANCE;\n    }\n\n    public readonly onButtonDown = new Signal<ControllerEvent>();\n    public readonly onButtonUp = new Signal<ControllerEvent>();\n    public readonly onButtonPress = new Signal<ControllerEvent>();\n    public readonly onControllerFamilyChange = new Signal<ControllerFamily>();\n    public readonly onGamepadStyleChange = new Signal<GamepadStyle>();\n\n    #currentGamepadStyle = DEFAULT_GAMEPAD_STYLE;\n    #currentGamepadStyleOverride = DEFAULT_GAMEPAD_STYLE;\n\n    public set currentGamepadStyleOverride(gamepadStyleOverride: GamepadStyle) {\n        const oldGamepadStyle = this.currentGamepadStyle;\n        this.#currentGamepadStyleOverride = gamepadStyleOverride;\n        if (this.currentGamepadStyle !== oldGamepadStyle) {\n            this.onGamepadStyleChange.emit(this.currentGamepadStyle);\n        }\n    }\n\n    public get currentGamepadStyle(): GamepadStyle {\n        return this.autoDetectGamepadStyle ? this.#currentGamepadStyle : this.#currentGamepadStyleOverride;\n    }\n\n    #autoDetectGamepadStyle = true;\n\n    /**\n     * Set to true to automatically set the current gamepad style from the\n     * last used input device.\n     */\n    public set autoDetectGamepadStyle(autodetectGamepadStyle: boolean) {\n        const oldGamepadStyle = this.currentGamepadStyle;\n        this.#autoDetectGamepadStyle = autodetectGamepadStyle;\n        if (this.currentGamepadStyle !== oldGamepadStyle) {\n            this.onGamepadStyleChange.emit(this.currentGamepadStyle);\n        }\n    }\n\n    public get autoDetectGamepadStyle(): boolean {\n        return this.#autoDetectGamepadStyle;\n    }\n\n    #currentControllerFamily: ControllerFamily = ControllerFamily.KEYBOARD;\n\n    private constructor(initialControllerFamily: ControllerFamily = ControllerFamily.KEYBOARD) {\n        this.currentControllerFamily = initialControllerFamily;\n\n        this.onButtonDown.connect(e => {\n            if (this.#currentControllerFamily !== e.controllerFamily) {\n                this.currentControllerFamily = e.controllerFamily;\n            }\n            if (e instanceof GamepadControllerEvent) {\n                if (this.#currentGamepadStyle !== e.gamepadModel.style) {\n                    const oldGamepadStyle = this.currentGamepadStyle;\n                    this.#currentGamepadStyle = e.gamepadModel.style;\n                    if (this.currentGamepadStyle !== oldGamepadStyle) {\n                        this.onGamepadStyleChange.emit(this.currentGamepadStyle);\n                    }\n                }\n            }\n        });\n    }\n\n    public set currentControllerFamily(controllerFamily: ControllerFamily) {\n        if (controllerFamily !== this.currentControllerFamily) {\n            this.#currentControllerFamily = controllerFamily;\n            this.onControllerFamilyChange.emit(this.currentControllerFamily);\n        }\n    }\n\n    /**\n     * Returns the current (a.k.a. most recently used!) controller family.\n     * Can be used to determine which tooltips (gamepad buttons or keyboard indicators) to show.\n     */\n    public get currentControllerFamily(): ControllerFamily {\n        return this.#currentControllerFamily;\n    }\n\n    public toggleSelectedGamepadStyle(): void {\n        if (this.autoDetectGamepadStyle) {\n            this.autoDetectGamepadStyle = false;\n            this.currentGamepadStyleOverride = GamepadStyle.XBOX;\n        } else {\n            switch (this.#currentGamepadStyleOverride) {\n                case GamepadStyle.XBOX:\n                    this.currentGamepadStyleOverride = GamepadStyle.PLAYSTATION;\n                    break;\n                case GamepadStyle.PLAYSTATION:\n                    this.currentGamepadStyleOverride = GamepadStyle.STADIA;\n                    break;\n                case GamepadStyle.STADIA:\n                    this.currentGamepadStyleOverride = GamepadStyle.XBOX;\n                    this.autoDetectGamepadStyle = true;\n                    break;\n                default:\n                    // Nothing to do\n            }\n        }\n    }\n\n    public get controllerSprite(): ControllerSpriteMap {\n        if (this.currentControllerFamily === ControllerFamily.GAMEPAD) {\n            switch (this.currentGamepadStyle) {\n                case GamepadStyle.PLAYSTATION:\n                    return ControllerSpriteMap.PLAYSTATION;\n                case GamepadStyle.XBOX:\n                    return ControllerSpriteMap.XBOX;\n                case GamepadStyle.STADIA:\n                    return ControllerSpriteMap.STADIA;\n                default:\n                    // Nothing to do\n            }\n        }\n\n        // Fallback to Keyboard\n        return ControllerSpriteMap.KEYBOARD;\n    }\n}\n","import { GamepadControllerEvent } from \"./ControllerEvent\";\nimport { ControllerEventType } from \"./ControllerEventType\";\nimport { ControllerIntent } from \"./ControllerIntent\";\nimport { ControllerManager } from \"./ControllerManager\";\nimport { GamepadModel } from \"./GamepadModel\";\n\n/**\n * Game Pad Buttons\n */\nenum GamePadButtonId {\n    /** Button A / Cross*/\n    BUTTON_1 = 0,\n    /** Button B / Circle*/\n    BUTTON_2 = 1,\n    /** Button X / Square*/\n    BUTTON_3 = 2,\n    /** Button Y / Triangle */\n    BUTTON_4 = 3,\n    /** LB / L1 */\n    SHOULDER_TOP_LEFT = 4,\n    // RB / R1 */\n    SHOULDER_TOP_RIGHT = 5,\n    // LT / L2\n    SHOULDER_BOTTOM_LEFT = 6,\n    // RT / R2\n    SHOULDER_BOTTOM_RIGHT = 7,\n    SELECT = 8,\n    START = 9,\n    /** L3 */\n    STICK_BUTTON_LEFT = 10,\n    /** R3 */\n    STICK_BUTTON_RIGHT = 11,\n    D_PAD_UP = 12,\n    D_PAD_DOWN = 13,\n    D_PAD_LEFT = 14,\n    D_PAD_RIGHT = 15,\n    /** X-Box logo, Playstation logo, Stadia logo, picture of an angry koala,... */\n    VENDOR = 16\n}\n\nenum StickAxisId {\n    /** Left stick X axis */\n    LEFT_LEFT_RIGHT = 0,\n    /** Left stick Y axis */\n    LEFT_UP_DOWN = 1,\n    /** Right stick X axis */\n    RIGHT_LEFT_RIGHT = 2,\n    /** Right stick Y axis */\n    RIGHT_UP_DOWN = 3\n}\n\nconst axisMapping = new Map<number, {button1: number|undefined, button2: number|undefined}>();\naxisMapping.set(StickAxisId.LEFT_LEFT_RIGHT, { button1: GamePadButtonId.D_PAD_LEFT, button2: GamePadButtonId.D_PAD_RIGHT });\naxisMapping.set(StickAxisId.LEFT_UP_DOWN, { button1: GamePadButtonId.D_PAD_UP, button2: GamePadButtonId.D_PAD_DOWN });\n\nconst intentMappings = new Map<number, ControllerIntent[]>();\nintentMappings.set(GamePadButtonId.D_PAD_UP, [ControllerIntent.PLAYER_ENTER_DOOR, ControllerIntent.MENU_UP]);\nintentMappings.set(GamePadButtonId.D_PAD_DOWN, [ControllerIntent.PLAYER_DROP, ControllerIntent.MENU_DOWN]);\nintentMappings.set(GamePadButtonId.D_PAD_LEFT, [ControllerIntent.PLAYER_MOVE_LEFT, ControllerIntent.MENU_LEFT]);\nintentMappings.set(GamePadButtonId.D_PAD_RIGHT, [ControllerIntent.PLAYER_MOVE_RIGHT, ControllerIntent.MENU_RIGHT]);\nintentMappings.set(GamePadButtonId.BUTTON_1, [ControllerIntent.PLAYER_JUMP, ControllerIntent.CONFIRM]);\nintentMappings.set(GamePadButtonId.BUTTON_2, [ControllerIntent.ABORT]);\nintentMappings.set(GamePadButtonId.BUTTON_3, [ControllerIntent.PLAYER_RUN]);\nintentMappings.set(GamePadButtonId.BUTTON_4, [ControllerIntent.PLAYER_INTERACT]);\nintentMappings.set(GamePadButtonId.SHOULDER_TOP_LEFT, [ControllerIntent.PLAYER_DANCE_1, ControllerIntent.PLAYER_ACTION]);\nintentMappings.set(GamePadButtonId.SHOULDER_TOP_RIGHT, [ControllerIntent.PLAYER_DANCE_2, ControllerIntent.PLAYER_ACTION]);\nintentMappings.set(GamePadButtonId.START, [ControllerIntent.PAUSE]);\n\nclass GamepadButtonWrapper {\n    public readonly index: number;\n    private pressed: boolean;\n    private readonly gamepad: GamepadWrapper;\n\n    public constructor(index: number, wrapped: GamepadButton, gamepad: GamepadWrapper) {\n        this.index = index;\n        this.pressed = wrapped.pressed;\n        this.gamepad = gamepad;\n    }\n\n    public setPressed(pressed: boolean): void {\n        const controllerManager = ControllerManager.getInstance();\n        const oldPressed = this.pressed;\n        this.pressed = pressed;\n\n        if (oldPressed !== pressed) {\n            if (pressed) {\n                controllerManager.onButtonDown.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.DOWN,\n                        intentMappings.get(this.index) ?? [ControllerIntent.NONE]\n                    )\n                );\n            } else {\n                controllerManager.onButtonUp.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.UP,\n                        intentMappings.get(this.index) ?? [ControllerIntent.NONE]\n                    )\n                );\n            }\n        }\n    }\n\n}\n\nclass GamepadAxisWrapper {\n    /**\n     * Threshold to use to emulate virtual buttons.\n     * Values between 0.1 (slight touches of the axis trigger button presses)\n     * 0.9 (much force needed) can be used here.\n     *\n     * Avoid using 0.0 and 1.0 as they cannot be reached on some gamepads or\n     * might lead to button flibber flubber...\n     */\n    private readonly threshold = 0.5;\n\n    public readonly index: number;\n    private value: number = 0.0;\n    private readonly gamepad: GamepadWrapper;\n\n    public constructor(index: number, gamepad: GamepadWrapper) {\n        this.index = index;\n        this.gamepad = gamepad;\n    }\n\n    public setValue(newValue: number): void {\n        const controllerManager = ControllerManager.getInstance();\n        const oldValue = this.value;\n        this.value = newValue;\n        let emulatedButtonId: number|undefined = undefined;\n\n        if (oldValue <= -this.threshold && newValue > -this.threshold) {\n            // Virtual button 1 released\n            emulatedButtonId = axisMapping.get(this.index)?.button1;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonUp.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.UP,\n                        intentMappings.get(emulatedButtonId) ?? [ControllerIntent.NONE]\n                    )\n                );\n            }\n        } else if (oldValue > -this.threshold && newValue <= -this.threshold) {\n            // Virtual button 1 pressed\n            emulatedButtonId = axisMapping.get(this.index)?.button1;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonDown.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.DOWN,\n                        intentMappings.get(emulatedButtonId) ?? [ControllerIntent.NONE]\n                    )\n                );\n            }\n        }\n\n        if (oldValue > this.threshold && newValue <= this.threshold) {\n            // Virtual button 2 released\n            emulatedButtonId = axisMapping.get(this.index)?.button2;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonUp.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.UP,\n                        intentMappings.get(emulatedButtonId) ?? [ControllerIntent.NONE]\n                    )\n                );\n            }\n        } else if (oldValue < this.threshold && newValue >= this.threshold) {\n            // Virtual button 2 pressed\n            emulatedButtonId = axisMapping.get(this.index)?.button2;\n\n            if (emulatedButtonId != null) {\n                controllerManager.onButtonDown.emit(\n                    new GamepadControllerEvent(\n                        this.gamepad.gamepadModel, ControllerEventType.DOWN,\n                        intentMappings.get(emulatedButtonId) ?? [ControllerIntent.NONE]\n                    )\n                );\n            }\n        }\n    }\n}\n\n/**\n * Some obscure magic to make sure that gamepad buttons and axes are mapped onto unified controller\n * events.\n */\nclass GamepadWrapper {\n    private readonly index: number;\n    private readonly id: string;\n    private readonly buttons: GamepadButtonWrapper[];\n    private readonly axes: GamepadAxisWrapper[];\n    public gamepadModel: GamepadModel;\n\n    public constructor(gamepad: Gamepad) {\n        this.index = gamepad.index;\n        this.id = gamepad.id;\n        this.gamepadModel = GamepadModel.fromString(this.id);\n        this.buttons = new Array(gamepad.buttons.length) as GamepadButtonWrapper[];\n\n        for (let i = 0; i < this.buttons.length; i++) {\n            this.buttons[i] = new GamepadButtonWrapper(i, gamepad.buttons[i], this);\n        }\n\n        this.axes = new Array(gamepad.axes.length) as GamepadAxisWrapper[];\n\n        for (let i = 0; i < this.axes.length; i++) {\n            this.axes[i] = new GamepadAxisWrapper(i, this);\n        }\n    }\n\n    public update(): void {\n        const gamepad = navigator.getGamepads()[this.index];\n\n        if (gamepad != null) {\n            this.buttons.forEach(button => button.setPressed(gamepad.buttons[button.index].pressed));\n            this.axes.forEach(axis => axis.setValue(gamepad.axes[axis.index]));\n        }\n    }\n\n    public toString(): string {\n        return `Gamepad (index: ${this.index}, id: ${this.id})`;\n    }\n}\n\nexport class GamepadInput {\n    readonly #gamepads: Map<string, GamepadWrapper>;\n\n    public constructor() {\n        this.#gamepads = new Map();\n\n        // Attach listeners\n        window.addEventListener(\"gamepadconnected\", (e: GamepadEvent) => this.#addGamepad(e.gamepad));\n        window.addEventListener(\"gamepaddisconnected\", (e) => this.#removeGamepad(e.gamepad));\n\n        // Workaround for virtual / touch gamepads that have already been connected and won't be\n        // able to fire their 'gamepadconnected' event again. Find all gamepads returned by\n        // navigator.getGamepads() that are not yet properly registered and make sure they can be\n        // utilized!\n        navigator.getGamepads()\n            .filter((gamepad) => gamepad !== null && !this.#gamepads.has(gamepad.id))\n            .forEach((gamepad) => this.#addGamepad(gamepad));\n    }\n\n    public update(): void {\n        this.#gamepads.forEach(gamepad => gamepad.update());\n    }\n\n    /**\n     * Used to register a new gamepad.\n     * @param gamepad Gamepad that has just been connected.\n     */\n    #addGamepad(gamepad: Gamepad|null): void {\n        if (gamepad !== null) {\n            this.#gamepads.set(gamepad.id, new GamepadWrapper(gamepad));\n        }\n    }\n\n    /**\n     * Used to de-register an existing gamepad.\n     * @param gamepad Gamepad that has just been disconnected.\n     */\n    #removeGamepad(gamepad: Gamepad|null): void {\n        if (gamepad !== null) {\n            this.#gamepads.delete(gamepad.id);\n        }\n    }\n\n}\n","// See https://gamepad-tester.com/controllers for a list of some possible controller IDs.\n\nimport { GamepadStyle } from \"./GamepadStyle\";\n\nconst typemap: Map<RegExp, GamepadStyle> = new Map();\n\n/* spell-checker: disable */\n\n// Virtual touch gamepad which was inspired by and resembles the Stadia overlay (more or less).\ntypemap.set(/^Cat Hive Virtual Touch Controller$/i, GamepadStyle.STADIA);\n\ntypemap.set(/^.*?(xinput).*$/i, GamepadStyle.XBOX);\n// Vendor ID of Microsoft Corp.\ntypemap.set(/^.*(?<vendorId>045e).*$/i, GamepadStyle.XBOX);\n// Vendor ID of Valve\ntypemap.set(/^.*(?<vendorId>28de).*$/i, GamepadStyle.XBOX);\n// Anything with \"stadia controller\" in its name\ntypemap.set(/^.*?(stadia\\ controller).*$/i, GamepadStyle.STADIA);\n// Anything with playstation in its name\ntypemap.set(/^.*?(playstation).*$/i, GamepadStyle.PLAYSTATION);\n// Vendor ID of Sony Inc.\ntypemap.set(/^.*(?<vendorId>054c).*$/i, GamepadStyle.PLAYSTATION);\n\n// Anything with \"snes\" in it's name.\ntypemap.set(/snes/i, GamepadStyle.SNES);\n// A certain no-name gamepad that I happen to own.\ntypemap.set(/^.*vendor:\\s*?(?<vendorId>0810)\\s*product:\\s*?(?<groupId>e501)/i, GamepadStyle.SNES);\n\n/**\n * Regular expression to extract vendor and product identifier.\n */\nconst productAndVendorMatcher = /^.*?vendor:?\\s*(?<vendorId>.{4}).*?product:?\\s*(?<productId>.{4}).*$/i;\n/* spell-checker: enable */\n\nexport class GamepadModel {\n\n    readonly #vendorId: number|undefined;\n    readonly #productId: number|undefined;\n\n    public constructor(public style: GamepadStyle, vendorId?: number|undefined, productId?: number|undefined) {\n        this.#vendorId = vendorId;\n        this.#productId = productId;\n    }\n\n    public get vendorId(): number|undefined {\n        return this.#vendorId;\n    }\n\n    public get productId(): number|undefined {\n        return this.#productId;\n    }\n\n    /**\n     * Parses a gamepad identifier string and returns an object that encapsulates\n     * @param str\n     *   Gamepad identifier string as reported by the Gamepad API.\n     */\n    public static fromString(str: string): GamepadModel {\n        for (const [key, value] of typemap) {\n            if (key.exec(str)) {\n                const productAndVendorMatch = productAndVendorMatcher.exec(str);\n                let vendorId: string | undefined;\n                let productId: string | undefined;\n                if (productAndVendorMatch !== null) {\n                    vendorId = productAndVendorMatch.groups?.vendorId;\n                    productId = productAndVendorMatch.groups?.productId;\n                }\n                return new GamepadModel(value, parseInt(vendorId ?? \"-1\", 16), parseInt(productId ?? \"-1\"));\n            }\n        }\n        // Nothing matches? Well,... that's bad luck...\n        return DEFAULT_GAMEPAD_MODEL;\n    }\n\n}\n\nexport const DEFAULT_GAMEPAD_MODEL: GamepadModel = new GamepadModel(GamepadStyle.UNKNOWN);\n","/**\n * Enumeration of the different gamepad styles.\n *\n * Mainly used to adjust button mappings to offer the best possible *expected* gaming\n * experience and to make sure that graphics are displayed in-game that match the\n * controller being used.\n */\nexport enum GamepadStyle {\n\n    /** Default gamepad type if nothing else matches. */\n    UNKNOWN = \"unknown\",\n\n    XBOX = \"xbox\",\n    PLAYSTATION = \"playstation\",\n    STADIA = \"stadia\",\n    SNES = \"snes\"\n\n}\n\nexport const DEFAULT_GAMEPAD_STYLE: GamepadStyle = GamepadStyle.XBOX;\n","import { Signal } from \"../Signal\";\nimport { ControllerEvent } from \"./ControllerEvent\";\nimport { ControllerEventType } from \"./ControllerEventType\";\nimport { ControllerFamily } from \"./ControllerFamily\";\nimport { ControllerIntent } from \"./ControllerIntent\";\nimport { ControllerManager } from \"./ControllerManager\";\n\nconst preventDefaultKeyCodes: string[] = [\n    \"ArrowUp\", \"ArrowDown\", \"ArrowRight\", \"ArrowLeft\", \"Space\"\n];\n\nconst keyToIntentMappings = new Map<string, ControllerIntent[]>();\n\nkeyToIntentMappings.set(\"Space\", [ControllerIntent.PLAYER_JUMP]);\nkeyToIntentMappings.set(\"KeyW\", [ControllerIntent.PLAYER_ENTER_DOOR, ControllerIntent.MENU_UP]);\nkeyToIntentMappings.set(\"KeyA\", [ControllerIntent.PLAYER_MOVE_LEFT, ControllerIntent.MENU_LEFT]);\nkeyToIntentMappings.set(\"KeyS\", [ControllerIntent.PLAYER_DROP, ControllerIntent.MENU_DOWN]);\nkeyToIntentMappings.set(\"KeyD\", [ControllerIntent.PLAYER_MOVE_RIGHT, ControllerIntent.MENU_RIGHT]);\nkeyToIntentMappings.set(\"ArrowUp\", [ControllerIntent.PLAYER_ENTER_DOOR, ControllerIntent.MENU_UP]);\nkeyToIntentMappings.set(\"ArrowDown\", [ControllerIntent.PLAYER_DROP, ControllerIntent.MENU_DOWN]);\nkeyToIntentMappings.set(\"ArrowLeft\", [ControllerIntent.PLAYER_MOVE_LEFT, ControllerIntent.MENU_LEFT]);\nkeyToIntentMappings.set(\"ArrowRight\", [ControllerIntent.PLAYER_MOVE_RIGHT, ControllerIntent.MENU_RIGHT]);\nkeyToIntentMappings.set(\"Enter\", [ControllerIntent.PLAYER_INTERACT, ControllerIntent.CONFIRM]);\nkeyToIntentMappings.set(\"NumpadEnter\", [ControllerIntent.PLAYER_INTERACT, ControllerIntent.CONFIRM]);\nkeyToIntentMappings.set(\"Escape\", [ControllerIntent.ABORT, ControllerIntent.PAUSE]);\nkeyToIntentMappings.set(\"ShiftLeft\", [ControllerIntent.PLAYER_RUN]);\nkeyToIntentMappings.set(\"ShiftRight\", [ControllerIntent.PLAYER_RUN]);\nkeyToIntentMappings.set(\"KeyE\", [ControllerIntent.PLAYER_INTERACT, ControllerIntent.CONFIRM]);\nkeyToIntentMappings.set(\"KeyF\", [ControllerIntent.PLAYER_ACTION]);\nkeyToIntentMappings.set(\"Digit1\", [ControllerIntent.PLAYER_DANCE_1]);\nkeyToIntentMappings.set(\"Digit2\", [ControllerIntent.PLAYER_DANCE_2]);\nkeyToIntentMappings.set(\"Numpad1\", [ControllerIntent.PLAYER_DANCE_1]);\nkeyToIntentMappings.set(\"Numpad2\", [ControllerIntent.PLAYER_DANCE_2]);\n\nexport class Keyboard {\n    public readonly onKeyDown = new Signal<KeyboardEvent>();\n    public readonly onKeyUp = new Signal<KeyboardEvent>();\n    public readonly onKeyPress = new Signal<KeyboardEvent>();\n    private readonly pressed = new Set<string>();\n    private readonly controllerManager = ControllerManager.getInstance();\n\n    public constructor() {\n        document.addEventListener(\"keypress\", event => this.handleKeyPress(event));\n        document.addEventListener(\"keydown\", event => this.handleKeyDown(event));\n        document.addEventListener(\"keyup\", event => this.handleKeyUp(event));\n    }\n\n    private handleKeyPress(event: KeyboardEvent): void {\n        this.onKeyPress.emit(event);\n\n        // Quick workaround to make sure, that modifier keys never trigger a game-related\n        // controller event. Especially necessary to make other non-game related actions\n        // possible. (Shift is used as a modifier key to enable running and is therefore\n        // excluded from the list below)\n        if (event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n\n        this.controllerManager.onButtonPress.emit(\n            new ControllerEvent(\n                ControllerFamily.KEYBOARD, ControllerEventType.PRESS,\n                keyToIntentMappings.get(event.code) ?? [ControllerIntent.NONE], event.repeat\n            )\n        );\n    }\n\n    private handleKeyDown(event: KeyboardEvent): void {\n        if (preventDefaultKeyCodes.includes(event.code)) {\n            event.preventDefault();\n        }\n\n        if (!event.repeat) {\n            this.pressed.add(event.key);\n        }\n\n        this.onKeyDown.emit(event);\n\n        if (event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n\n        this.controllerManager.onButtonDown.emit(\n            new ControllerEvent(\n                ControllerFamily.KEYBOARD, ControllerEventType.DOWN,\n                keyToIntentMappings.get(event.code) ?? [ControllerIntent.NONE], event.repeat\n            )\n        );\n    }\n\n    private handleKeyUp(event: KeyboardEvent): void {\n        if (!event.repeat) {\n            this.pressed.delete(event.key);\n        }\n\n        this.onKeyUp.emit(event);\n\n        if (event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n\n        this.controllerManager.onButtonUp.emit(\n            new ControllerEvent(\n                ControllerFamily.KEYBOARD, ControllerEventType.UP,\n                keyToIntentMappings.get(event.code) ?? [ControllerIntent.NONE], event.repeat\n            )\n        );\n    }\n\n    public isPressed(key: string): boolean {\n        return this.pressed.has(key);\n    }\n}\n","import { AudioPreferencesStore } from \"../audio/AudioPreferencesStore\";\n//import { Signal } from \"../Signal\";\n\nexport class Preferences {\n\n    static readonly #INSTANCE: Preferences = new Preferences();\n    public static getInstance(): Preferences {\n        return Preferences.#INSTANCE;\n    }\n\n    readonly #audio: AudioPreferencesStore;\n\n    public constructor() {\n        this.#audio = new AudioPreferencesStore();\n    }\n\n    public get audio(): AudioPreferencesStore {\n        return this.#audio;\n    }\n\n}\n","import { type Aseprite } from \"../Aseprite\";\nimport { type Game } from \"../Game\";\nimport { SceneNode, type SceneNodeArgs } from \"./SceneNode\";\n\n/**\n * Constructor arguments for {@linkcode AsepriteNode.\n */\nexport interface AsepriteNodeArgs extends SceneNodeArgs {\n    /** The Aseprite to display. */\n    aseprite: Aseprite;\n\n    /** Optional animation tag to draw. */\n    tag?: string;\n}\n\n/**\n * Scene node for displaying an {@linkcode Aseprite}}.\n *\n * @param T - Optional owner game class.\n */\nexport class AsepriteNode<T extends Game = Game> extends SceneNode<T> {\n    /** The displayed aseprite. */\n    private aseprite: Aseprite;\n\n    /** The animation tag to draw. Null to draw whole animation. */\n    private tag: string | null;\n\n    /** The current time index of the animation. */\n    private time = 0;\n\n    /**\n     * Creates a new scene node displaying the given Aseprite.\n     */\n    public constructor({ aseprite, ...args }: AsepriteNodeArgs) {\n        super({\n            width: aseprite.width,\n            height: aseprite.height,\n            ...args\n        });\n        this.aseprite = aseprite;\n        this.tag = args.tag ?? null;\n    }\n\n    /**\n     * Returns the displayed Aseprite.\n     *\n     * @return The displayed Aseprite.\n     */\n    public getAseprite(): Aseprite {\n        return this.aseprite;\n    }\n\n    /**\n     * Sets the Aseprite.\n     *\n     * @param aseprite - The Aseprite to draw.\n     */\n    public setAseprite(aseprite: Aseprite): this {\n        if (aseprite !== this.aseprite) {\n            this.aseprite = aseprite;\n            this.resizeTo(aseprite.width, aseprite.height);\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the current animation tag. Null if whole animation is displayed.\n     *\n     * @return The current animation tag or null for whole animation.\n     */\n    public getTag(): string | null {\n        return this.tag;\n    }\n\n    /**\n     * Sets the animation tag. Null to display whole animation.\n     *\n     * @param tag - The animation tag to set. Null to unset.\n     */\n    public setTag(tag: string | null): this {\n        if (tag !== this.tag) {\n            this.tag = tag;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /** @inheritDoc */\n    public override update(dt: number): void {\n        this.time += dt;\n    }\n\n    /** @inheritDoc */\n    public override draw(ctx: CanvasRenderingContext2D): void {\n        if (this.tag != null) {\n            this.aseprite.drawTag(ctx, this.tag, 0, 0, this.time * 1000);\n        } else {\n            this.aseprite.draw(ctx, 0, 0, this.time * 1000);\n        }\n    }\n}\n","import { DIALOG_FONT } from \"../../shared/constants\";\nimport { type Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { Direction } from \"../geom/Direction\";\nimport { type ControllerAnimationTags, ControllerSpriteMap } from \"../input/ControllerFamily\";\nimport { ControllerManager } from \"../input/ControllerManager\";\nimport { AsepriteNode } from \"./AsepriteNode\";\nimport { SceneNode, type SceneNodeArgs } from \"./SceneNode\";\nimport { TextNode } from \"./TextNode\";\n\nexport interface ControlTooltipArgs extends SceneNodeArgs {\n    control: ControllerAnimationTags,\n    label: string\n}\n\nexport class ControlTooltipNode extends SceneNode<FriendlyFire> {\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    @asset([\n        \"sprites/buttons_keyboard.aseprite.json\",\n        \"sprites/buttons_xbox.aseprite.json\",\n        \"sprites/buttons_playstation.aseprite.json\",\n        \"sprites/buttons_stadia.aseprite.json\"\n    ])\n    private static readonly buttons: Aseprite[];\n    private readonly controllerSpriteMapRecords: Record<ControllerSpriteMap, Aseprite> = {\n        [ControllerSpriteMap.KEYBOARD]: ControlTooltipNode.buttons[0],\n        [ControllerSpriteMap.XBOX]: ControlTooltipNode.buttons[1],\n        [ControllerSpriteMap.PLAYSTATION]: ControlTooltipNode.buttons[2],\n        [ControllerSpriteMap.STADIA]: ControlTooltipNode.buttons[3]\n    };\n\n    private readonly controllerManager = ControllerManager.getInstance();\n    private readonly icon: AsepriteNode;\n    private readonly label: TextNode;\n    private readonly gap = 6;\n\n    public constructor({ control: key, label, ...args }: ControlTooltipArgs) {\n        super({\n            childAnchor: Direction.LEFT,\n            ...args\n        });\n        this.icon = new AsepriteNode({\n            aseprite: this.controllerSpriteMapRecords[this.controllerManager.controllerSprite],\n            tag: key,\n            anchor: Direction.LEFT\n        }).appendTo(this);\n        this.label = new TextNode({\n            font: ControlTooltipNode.font,\n            anchor: Direction.LEFT,\n            text: label,\n            color: \"white\",\n            outlineColor: \"black\",\n            y: -1\n        }).appendTo(this);\n        this.updateLayout();\n    }\n\n    /** @inheritDoc */\n    protected override activate(): void {\n        this.controllerManager.onControllerFamilyChange.connect(this.updateControllerData, this);\n        this.controllerManager.onGamepadStyleChange.connect(this.updateControllerData, this);\n    }\n\n    /** @inheritDoc */\n    protected override deactivate(): void {\n        this.controllerManager.onGamepadStyleChange.disconnect(this.updateControllerData, this);\n        this.controllerManager.onControllerFamilyChange.disconnect(this.updateControllerData, this);\n    }\n\n    private updateControllerData(): void {\n        this.icon.setAseprite(this.controllerSpriteMapRecords[this.controllerManager.controllerSprite]);\n        this.updateLayout();\n    }\n\n    private updateLayout(): void {\n        const iconWidth = this.icon.getWidth();\n        this.label.setX(iconWidth + this.gap);\n        this.resizeTo(\n            iconWidth + this.gap + this.label.getWidth(),\n            Math.max(this.icon.getHeight(), this.label.getHeight())\n        );\n    }\n}\n","import { type Game } from \"../Game\";\nimport { SceneNode, type SceneNodeArgs } from \"./SceneNode\";\n\n/**\n * Constructor arguments for {@linkcode ImageNode}.\n */\nexport interface ImageNodeArgs extends SceneNodeArgs {\n    /** The image to be displayed by the image node. */\n    image: HTMLImageElement;\n}\n\n/**\n * Scene node for displaying an HTMLImageElement.\n *\n * @param T - Optional owner game class.\n */\nexport class ImageNode<T extends Game = Game> extends SceneNode<T> {\n    /** The image to display. */\n    private readonly image: HTMLImageElement;\n\n    /**\n     * Creates a new scene node displaying the given image.\n     */\n    public constructor({ image, ...args }: ImageNodeArgs) {\n        super({\n            width: image.width,\n            height: image.height,\n            ...args\n        });\n        this.image = image;\n    }\n\n    /**\n     * Returns the displayed image.\n     *\n     * @return The displayed image.\n     */\n    public getImage(): HTMLImageElement {\n        return this.image;\n    }\n\n    /** @inheritDoc */\n    public override draw(ctx: CanvasRenderingContext2D): void {\n        ctx.drawImage(this.image, 0, 0);\n    }\n}\n","import { type Game } from \"../Game\";\nimport { clamp } from \"../util\";\nimport { SceneNode, type SceneNodeArgs } from \"./SceneNode\";\n\nconst DEFAULT_BACKGROUND_STYLE = \"#111\";\nconst DEFAULT_BORDER_STYLE = \"#222\";\nconst DEFAULT_PROGRESS_STYLE = \"#888\";\nconst DEFAULT_WIDTH = 200;\nconst DEFAULT_HEIGHT = 8;\n\n/**\n * Constructor arguments for {@linkcode ProgressBarNode}.\n */\nexport interface ProgressBarNodeArgs extends SceneNodeArgs {\n    backgroundStyle?: string;\n    borderStyle?: string\n    progressStyle?: string;\n}\n\n/**\n * Scene node for displaying a progress bar.\n *\n * @param T - Optional owner game class.\n */\nexport class ProgressBarNode<T extends Game = Game> extends SceneNode<T> {\n    private readonly backgroundStyle: string;\n    private readonly borderStyle: string;\n    private readonly progressStyle: string;\n    private progress: number = 0;\n\n    /**\n     * Creates a new scene node displaying the given image.\n     */\n    public constructor({ backgroundStyle = DEFAULT_BACKGROUND_STYLE, borderStyle = DEFAULT_BORDER_STYLE,\n            progressStyle = DEFAULT_PROGRESS_STYLE, ...args }: ProgressBarNodeArgs = {}) {\n        super({\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT,\n            ...args\n        });\n        this.backgroundStyle = backgroundStyle;\n        this.borderStyle = borderStyle;\n        this.progressStyle = progressStyle;\n    }\n\n    public setProgress(progress: number): this {\n        progress = clamp(progress, 0, 1);\n        if (progress !== this.progress) {\n            this.progress = progress;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    public getProgress(): number {\n        return this.progress;\n    }\n\n    /** @inheritDoc */\n    public override draw(ctx: CanvasRenderingContext2D): void {\n        ctx.save();\n\n        const width = this.getWidth();\n        const height = this.getHeight();\n\n        // Draw background\n        ctx.fillStyle = this.backgroundStyle;\n        ctx.fillRect(0, 0, width, height);\n\n        // Draw progress bar\n        ctx.fillStyle = this.progressStyle;\n        ctx.fillRect(0, 0, width * this.progress, height);\n\n        // Draw border\n        ctx.save();\n        ctx.strokeStyle = this.borderStyle;\n        ctx.lineWidth = 2;\n        ctx.rect(0, 0, width, height);\n        ctx.clip();\n        ctx.stroke();\n        ctx.restore();\n\n        ctx.restore();\n    }\n}\n","import { type Game } from \"../Game\";\nimport { Direction } from \"../geom/Direction\";\nimport { type Scene } from \"../Scene\";\nimport { type PostDrawHints, SceneNode } from \"./SceneNode\";\n\n/**\n * Function signature for updating the root node. This function is exposed to the scene through the constructor so\n * the scene can call it but no one else can by accident.\n */\nexport type UpdateRootNode = (dt: number) => number;\n\n/**\n * Function signature for drawing the root node.\n */\nexport type DrawRootNode = (ctx: CanvasRenderingContext2D, layer: number, width: number, height: number)\n    => PostDrawHints;\n\n/**\n * The root node of a scene.\n *\n * @param T - Optional owner game class.\n */\nexport class RootNode<T extends Game = Game> extends SceneNode<T> {\n    /**\n     * Creates a new root scene node for the given scene. Functions for updating and drawing the root node (and its\n     * child nodes) is exposed to the scene through the second parameter. Only the scene can use these exposed\n     * functions, no one else can by accident.\n     *\n     * @param scene - The scene this root node is meant for.\n     * @param expose - Callback for exposing the update/draw methods of the root node to the scene so the scene can\n     *                 call it without making the methods public.\n     */\n    public constructor(scene: Scene<T, unknown>, expose: (update: UpdateRootNode, draw: DrawRootNode) => void) {\n        super({ anchor: Direction.TOP_LEFT, childAnchor: Direction.TOP_LEFT });\n        this.scene = scene;\n        expose(this.updateAll.bind(this), this.drawAll.bind(this));\n    }\n}\n","import { type Game } from \"../Game\";\nimport { Direction } from \"../geom/Direction\";\nimport { AffineTransform } from \"../graphics/AffineTransform\";\nimport { Polygon2 } from \"../graphics/Polygon2\";\nimport { Vector2 } from \"../graphics/Vector2\";\nimport { type Scene } from \"../Scene\";\nimport { type AnimationArgs, SceneNodeAnimation } from \"./SceneNodeAnimation\";\n\n/**\n * Hints which are returned to the scene after drawing the scene graph. These hints can suggest further actions after\n * drawing like requesting continuous drawing because of running animations.\n */\nexport enum PostDrawHints {\n    /** As long as this hint is present the scene must be continuously redrawn to keep animations running. */\n    CONTINUE_DRAWING = 1\n}\n\n/**\n * Constructor arguments for {@linkcode SceneNode}.\n *\n * @param T - Optional owner game class.\n */\nexport interface SceneNodeArgs {\n    /** Optional initial scene node ID. */\n    id?: string | null;\n\n    /** Optional initial horizontal position of the scene node. Defaults to 0. */\n    x?: number;\n\n    /** Optional initial vertical position of the scene node. Defaults to 0. */\n    y?: number;\n\n    /** Optional initial width of the scene node. Defaults to 0. */\n    width?: number;\n\n    /** Optional initial height of the scene node. Defaults to 0. */\n    height?: number;\n\n    /**\n     * Optional initial node anchor. Defaults to CENTER which means the X/Y coordinates of the node define where\n     * the center of this scene node is displayed relative to the parent node.\n     */\n    anchor?: Direction;\n\n    /**\n     * Optional initial child node anchor. Defaults to CENTER which means the child nodes are positioned relative to\n     * the center of this scene node.\n     */\n    childAnchor?: Direction;\n\n    /**\n     * Optional initial node opacity. Must be 0 or higher. 0.0 means fully transparent. Defaults to 1.0 which means\n     * fully opaque. Can be larger than 1.0 to compensate transparency of its parent.\n     */\n    opacity?: number;\n\n    /** Optional initial layer (0-31) to put the node onto. Defaults to 0. */\n    layer?: number;\n}\n\n/**\n * Base scene node. Is used as base class for more specialized scene nodes but can also be used standalone as parent\n * node for other nodes (similar to a DIV element in HTML for example).\n *\n * TODO Implement scene invalidation properly.\n */\nexport class SceneNode<T extends Game = Game> {\n    /** The parent node. Null if none. */\n    private parent: SceneNode<T> | null = null;\n\n    /** The next sibling node. Null if none. */\n    private nextSibling: SceneNode<T> | null = null;\n\n    /** The previous sibling node. Null if none. */\n    private previousSibling: SceneNode<T> | null = null;\n\n    /** The first child node. Null if none. */\n    private firstChild: SceneNode<T> | null = null;\n\n    /** The last child node. Null if none. */\n    private lastChild: SceneNode<T> | null = null;\n\n    /** The scene this node is connected to. Null if none. */\n    protected scene: Scene<T, unknown> | null = null;\n\n    /** The ID of the node. Null if none. */\n    private id: string | null;\n\n    /** The horizontal position relative to parent node. */\n    private x: number;\n\n    /** The vertical position relative to parent node. */\n    private y: number;\n\n    /** The node width. */\n    private width: number;\n\n    /** The node height. */\n    private height: number;\n\n    /**\n     * The anchor defining the origin of this scene node. When set to TOP_LEFT for example then the X/Y coordinates of\n     * this node define where to display the upper left corner of it. When set to CENTER then the node is centered at\n     * its X/Y coordinates.\n     */\n    private anchor: Direction;\n\n    /**\n     * The anchor of the local coordinate system. When set to CENTER for example then the X/Y coordinates or child\n     * nodes are relative to the center of this node.\n     */\n    private childAnchor: Direction;\n\n    /**\n     * The bounds polygon. This is updated on demand and automatically invalidated when node size changes. Node\n     * has to call {@linkcode invalidateBounds()} manually when something else influences the bounds.\n     */\n    private readonly boundsPolygon: Polygon2 = new Polygon2();\n\n    /**\n     * The transformation matrix of this node. This transformation is applied to the node before moving the node to\n     * its position (X/Y coordinates). So in simple cases this transformation is not needed at all and its up to you\n     * if you want to use the coordinates and/or the transformation matrix.\n     */\n    private readonly transformation = new AffineTransform();\n\n    /**\n     * The transformation matrix combining the nodes transformation with all the parent transformations. This is\n     * calculated on-the-fly when a scene node is updated.\n     */\n    private readonly sceneTransformation = new AffineTransform();\n\n    /** Array with currently active animations. Animations are automatically removed from the array when finished.*/\n    private readonly animations: SceneNodeAnimation<T>[] = [];\n\n    /**\n     * The current opacity of the node. 0.0 means fully transparent and 1.0 means fully opaque. Can be larger\n     * than 1.0 to compensate transparency of its parent.\n     */\n    private opacity: number;\n\n    /**\n     * The layer this node is drawn on. Internal representation is stored in `2^n` while setter and getter works\n     * with `n` instead. This is because the layering system internally works with fast bit masks.\n     */\n    private layer: number;\n\n    /**\n     * Creates a new scene node with the given initial settings.\n     */\n    public constructor({ id = null, x = 0, y = 0, width = 0, height = 0, anchor = Direction.CENTER,\n            childAnchor = Direction.CENTER, opacity = 1, layer = 0 }: SceneNodeArgs = {}) {\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.opacity = opacity;\n        this.anchor = anchor;\n        this.childAnchor = childAnchor;\n        this.layer = 1 << layer;\n    }\n\n    /**\n     * Returns the node ID.\n     *\n     * @return The ID of the node or null if none.\n     */\n    public getId(): string | null {\n        return this.id;\n    }\n\n    /**\n     * Sets (or removes) the node ID.\n     *\n     * @param id - The id to set or null to unset.\n     */\n    public setId(id: string | null): this {\n        this.id = id;\n        return this;\n    }\n\n    /**\n     * Returns the X position of the node relative to the parent node.\n     *\n     * @return The X position.\n     */\n    public getX(): number {\n        return this.x;\n    }\n\n    /**\n     * Sets the horizontal position relative to the parent node.\n     *\n     * @param x - The horizontal position to set.\n     */\n    public setX(x: number): this {\n        if (x !== this.x) {\n            this.x = x;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the Y position of the node relative the parent node.\n     *\n     * @return The Y position.\n     */\n    public getY(): number {\n        return this.y;\n    }\n\n    /**\n     * Sets the vertical position relative to the parent node.\n     *\n     * @param y - The vertical position to set.\n     */\n    public setY(y: number): this {\n        if (y !== this.y) {\n            this.y = y;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Moves the node by the given deltas.\n     *\n     * @param x - The horizontal delta to move the node by.\n     * @param y - The vertical delta to move the node by.\n     */\n    public moveBy(x: number, y: number): this {\n        if (x !== 0 || y !== 0) {\n            this.x += x;\n            this.y += y;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Moves the node to the given position relative to its parent node.\n     *\n     * @param x - The horizontal position to move to.\n     * @param y - The vertical position to move to.\n     */\n    public moveTo(x: number, y: number): this {\n        if (x !== this.x || y !== this.y) {\n            this.x = x;\n            this.y = y;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the width of the node.\n     *\n     * @return The node width.\n     */\n    public getWidth(): number {\n        return this.width;\n    }\n\n    /**\n     * Sets the width of the node.\n     *\n     * @param width - The width to set.\n     */\n    public setWidth(width: number): this {\n        if (width !== this.width) {\n            this.width = width;\n            this.invalidate();\n            this.invalidateBounds();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the width of the node.\n     *\n     * @return The node width.\n     */\n    public getHeight(): number {\n        return this.height;\n    }\n\n    /**\n     * Sets the height of the node.\n     *\n     * @param height - The height to set.\n     */\n    public setHeight(height: number): this {\n        if (height !== this.height) {\n            this.height = height;\n            this.invalidate();\n            this.invalidateBounds();\n        }\n        return this;\n    }\n\n    /**\n     * Resizes the node to the given width and height.\n     *\n     * @param width  - The width to set.\n     * @param height - The height to set.\n     */\n    public resizeTo(width: number, height: number): this {\n        if (width !== this.width || height !== this.height) {\n            this.width = width;\n            this.height = height;\n            this.invalidate();\n            this.invalidateBounds();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the current opacity of the node.\n     *\n     * @return The opacity. 0.0 means fully transparent, 1.0 means fully opaque.\n     */\n    public getOpacity(): number {\n        return this.opacity;\n    }\n\n    /**\n     * Sets the nodes opacity.\n     *\n     * @pram opacity - The opacity to set. 0.0 means fully transparent, 1.0 means fully opaque. Can be larger than 1.0\n     *                 to compensate transparency of its parent.\n     */\n    public setOpacity(opacity: number): this {\n        opacity = Math.max(0, opacity);\n        if (opacity !== this.opacity) {\n            this.opacity = opacity;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the effective node opacity which is the nodes opacity multiplied by the parents effective opacity.\n     *\n     * @return The effective node opacity clamped to valid range of 0.0 to 1.0.\n     */\n    public getEffectiveOpacity(): number {\n        if (this.opacity === Infinity) {\n            return 1;\n        }\n        return Math.max(0, Math.min(1, (this.parent?.getEffectiveOpacity() ?? 1) * this.opacity));\n    }\n\n    /**\n     * Returns the node anchor which defines the meaning of the X/Y coordinates of the node. CENTER means the X/Y\n     * coordinates define the center of the node. TOP_LEFT means the X/Y coordinates define the upper left corner of\n     * the node.\n     *\n     * @return The node anchor.\n     */\n    public getAnchor(): Direction {\n        return this.anchor;\n    }\n\n    /**\n     * Sets the node anchor which defines the meaning of the X/Y coordinates of the node. CENTER means the X/Y\n     * coordinates define the center of the node. TOP_LEFT means the X/Y coordinates define the upper left corner of\n     * the node.\n     *\n     * @param anchor - The node anchor to set.\n     */\n    public setAnchor(anchor: Direction): this {\n        if (anchor !== this.anchor) {\n            this.anchor = anchor;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the child anchor which defines the origin of the local coordinate system to which the coordinates of\n     * child nodes are relative to.\n     *\n     * @return The child anchor.\n     */\n    public getChildAnchor(): Direction {\n        return this.childAnchor;\n    }\n\n    /**\n     * Sets the child anchor which defines the origin of the local coordinate system to which the coordinates of\n     * child nodes are relative to.\n     *\n     * @param childAnchor - The child anchor to set.\n     */\n    public setChildAnchor(childAnchor: Direction): this {\n        if (childAnchor !== this.childAnchor) {\n            this.childAnchor = childAnchor;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the custom transformation of this node which can be manipulated by the {@ link transform()} method. This\n     * transformation is applied to the node before it is rendered at its intended position. Transformation and\n     * node position can complement each other or you can only use one of them, that's up to you.\n     *\n     * @return The custom node transformation.\n     */\n    public getTransformation(): AffineTransform {\n        return this.transformation;\n    }\n\n    /**\n     * Modifies the custom transformation matrix of this node. Calls the given transformer function which can then\n     * modify the given transformation matrix. After this the node is invalidated to recalculate bounds and redraw it.\n     *\n     * @param transformer - Function to call with transformation matrix as argument.\n     */\n    public transform(transformer: (transformation: AffineTransform) => void): this {\n        transformer(this.transformation);\n        return this.invalidate();\n    }\n\n    /**\n     * Returns the scene the node is currently attached to. Null if none.\n     *\n     * @return The current scene or null if none.\n     */\n    public getScene(): Scene<T> | null {\n        return this.scene;\n    }\n\n    /**\n     * Sets the scene this node and all its children belongs to. This is called internally when a node is added to\n     * the scene.\n     *\n     * @param scene - The scene the node belongs to from now on. null to unset the current scene.\n     */\n    private setScene(scene: Scene<T> | null): void {\n        if (scene !== this.scene) {\n            if (this.scene) {\n                this.deactivate();\n            }\n            this.scene = scene;\n            if (scene) {\n                this.activate();\n            }\n            this.forEachChild(node => node.setScene(scene));\n        }\n    }\n\n    /**\n     * Called when node is added to scene. Can be overwritten to connect event handlers for example.\n     */\n    protected activate(): void {}\n\n    /**\n     * Called when node is removed from scene. Can be overwritten to disconnect event handlers for example.\n     */\n    protected deactivate(): void {}\n\n    /**\n     * Returns the parent node of this node or null if node is not attached to a parent or is the root node.\n     *\n     * @return The parent node or null if unattached or root element.\n     */\n    public getParent(): SceneNode<T> | null {\n        return this.parent;\n    }\n\n    /**\n     * Returns the next node at the same level.\n     *\n     * @return The next sibling or null if none.\n     */\n    public getNextSibling(): SceneNode<T> | null {\n        return this.nextSibling;\n    }\n\n    /**\n     * Returns the previous node at the same level.\n     *\n     * @return The previous sibling or null if none.\n     */\n    public getPreviousSibling(): SceneNode<T> | null {\n        return this.previousSibling;\n    }\n\n    /**\n     * Returns the first child node.\n     *\n     * @return The first child node or null if none.\n     */\n    public getFirstChild(): SceneNode<T> | null {\n        return this.firstChild;\n    }\n\n    /**\n     * Returns the last child node.\n     *\n     * @return The last child node or null if none.\n     */\n    public getLastChild(): SceneNode<T> | null {\n        return this.lastChild;\n    }\n\n    /**\n     * Checks if this node has child nodes.\n     *\n     * @return True if it child nodes are present, false if not.\n     */\n    public hasChildNodes(): boolean {\n        return this.firstChild != null;\n    }\n\n    /**\n     * Appends the given child node so it becomes the last child of this node.\n     *\n     * @param node - The child node to append.\n     */\n    public appendChild(node: SceneNode<T>): this {\n        if (node === this) {\n            throw new Error(\"Node can not be appended to itself\");\n        }\n\n        // Remove from old parent if there is one\n        const oldParent = node.parent;\n        if (oldParent) {\n            oldParent.removeChild(node);\n        }\n\n        // Append the child\n        node.previousSibling = this.lastChild;\n        const oldLastChild = this.lastChild;\n        if (oldLastChild) {\n            oldLastChild.nextSibling = node;\n        }\n        this.lastChild = node;\n        if (!this.firstChild) {\n            this.firstChild = node;\n        }\n        node.parent = this;\n        node.setScene(this.scene);\n\n        node.invalidate();\n        this.invalidate();\n        return this;\n    }\n\n    /**\n     * Prepends the given child node so it becomes the first child of this node.\n     *\n     * @param node - The child node to prepend.\n     */\n    public prependChild(node: SceneNode<T>): this {\n        if (this.firstChild != null) {\n            return this.insertBefore(node, this.firstChild);\n        } else {\n            return this.appendChild(node);\n        }\n    }\n\n    /**\n     * Removes the given child node\n     *\n     * @param child - The child node to remove.\n     */\n    public removeChild(node: SceneNode<T>): this {\n        if (node.parent !== this) {\n            throw new Error(\"Node must be a child node\");\n        }\n\n        // Remove node from linked list\n        const next = node.nextSibling;\n        const prev = node.previousSibling;\n        if (next) {\n            next.previousSibling = prev;\n        }\n        if (prev) {\n            prev.nextSibling = next;\n        }\n\n        // Correct first/last reference\n        if (node === this.firstChild) {\n            this.firstChild = next;\n        }\n        if (node === this.lastChild) {\n            this.lastChild = prev;\n        }\n\n        // Remove all references from node\n        node.parent = null;\n        node.nextSibling = null;\n        node.previousSibling = null;\n        node.setScene(null);\n\n        node.invalidate();\n        this.invalidate();\n\n        return this;\n    }\n\n    /**\n     * Removes this node from the scene. The node is then a detached node ready to be added to the scene (or some\n     * other scene) again.\n     */\n    public remove(): this {\n        if (this.parent) {\n            this.parent.removeChild(this);\n        }\n        return this;\n    }\n\n    /**\n     * Removes all child nodes.\n     */\n    public clear(): this {\n        while (this.lastChild) {\n            this.removeChild(this.lastChild);\n        }\n        return this;\n    }\n\n    /**\n     * Inserts the given child node before the specified reference child node.\n     *\n     * @param newNode - The child node to insert.\n     * @param refNode - The reference node. The child node is inserted before this one.\n     */\n    public insertBefore(newNode: SceneNode<T>, refNode: SceneNode<T>): this {\n        if (newNode === this) {\n            throw new Error(\"Node can not be inserted into itself\");\n        }\n        if (refNode.parent !== this) {\n            throw new Error(\"Reference node must be a child node\");\n        }\n\n        // Remove from old parent if there is one\n        const oldParent = newNode.parent;\n        if (oldParent) {\n            oldParent.removeChild(newNode);\n        }\n\n        // Insert the node\n        const oldPrevious = refNode.previousSibling;\n        if (!oldPrevious) {\n            this.firstChild = newNode;\n        } else {\n            oldPrevious.nextSibling = newNode;\n        }\n        refNode.previousSibling = newNode;\n        newNode.previousSibling = oldPrevious;\n        newNode.nextSibling = refNode;\n        newNode.parent = this;\n        newNode.setScene(this.scene);\n\n        return this.invalidate();\n    }\n\n    /**\n     * Replaces the given child node with a new node.\n     *\n     * @param oldNode - The old child node to replace.\n     * @param newNode - The new node to replace the old one with.\n     */\n    public replaceChild(oldNode: SceneNode<T>, newNode: SceneNode<T>): this {\n        if (newNode === this) {\n            throw new Error(\"newNode must not be the parent node\");\n        }\n        if (oldNode.parent !== this) {\n            throw new Error(\"oldNode must be a child node\");\n        }\n\n        // If new node is the same as the old node then do nothing\n        if (newNode === oldNode) {\n            return this;\n        }\n\n        const next = oldNode.nextSibling;\n        this.removeChild(oldNode);\n        if (next) {\n            this.insertBefore(newNode, next);\n        } else {\n            this.appendChild(newNode);\n        }\n\n        return this;\n    }\n\n    /**\n     * Replace the given node with this one.\n     *\n     * @param node - The node to replace.\n     */\n    public replace(node: SceneNode<T>): this {\n        if (this.parent) {\n            this.parent.replaceChild(this, node);\n        }\n        return this;\n    }\n\n    /**\n     * Appends this node to the given parent node.\n     *\n     * @param node - The parent node to append this node to.\n     */\n    public appendTo(node: SceneNode<T>): this {\n        node.appendChild(this);\n        return this;\n    }\n\n    /**\n     * Prepends this node to the given parent node.\n     *\n     * @param node - The parent node to prepend this node to.\n     */\n    public prependTo(node: SceneNode<T>): this {\n        node.prependChild(this);\n        return this;\n    }\n\n    /**\n     * Iterates over all child nodes and calls the given callback with the currently iterated node as parameter.\n     *\n     * @param callback - The callback to call for each child node.\n     * @param thisArg  - Optional value to use as `this` when executing `callback`.\n     */\n    public forEachChild(callback: (node: SceneNode<T>, index: number) => void, thisArg: unknown = this): this {\n        let index = 0;\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            callback.call(thisArg, node, index++);\n            node = next;\n        }\n        return this;\n    }\n\n    /**\n     * Iterates over all descendant nodes and calls the given callback with the currently iterated node as parameter.\n     *\n     * @param callback - The callback to call for each descendant node.\n     * @param thisArg  - Optional value to use as `this` when executing `callback`.\n     */\n    public forEachDescendant(callback: (node: SceneNode<T>) => void, thisArg: unknown = this): this {\n        let node = this.firstChild;\n        while (node != null && node !== this) {\n            let next = node.firstChild;\n            if (next == null) {\n                next = node.nextSibling;\n            }\n            if (next == null) {\n                next = node.parent?.nextSibling ?? null;\n            }\n            callback.call(thisArg, node);\n            node = next;\n        }\n        return this;\n    }\n\n    /**\n     * Returns the first child node for which the given callback returns true.\n     *\n     * @param callback - The callback which checks if the iterated node is the one to look for.\n     * @return The found matching child node or null if none.\n     */\n    public findChild(callback: (node: SceneNode<T>, index: number) => boolean, thisArg: unknown = this):\n            SceneNode<T> | null {\n        let index = 0;\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            if (callback.call(thisArg, node, index++)) {\n                return node;\n            }\n            node = next;\n        }\n        return null;\n    }\n\n    /**\n     * Returns the first descendant node for which the given callback returns true.\n     *\n     * @param callback - The callback which checks if the iterated node is the one to look for.\n     * @return The found matching descendant node or null if none.\n     */\n    public findDescendant(callback: (node: SceneNode<T>) => boolean, thisArg: unknown = this):\n            SceneNode<T> | null {\n                let node = this.firstChild;\n        while (node != null && node !== this) {\n            let next = node.firstChild;\n            if (next == null) {\n                next = node.nextSibling;\n            }\n            if (next == null) {\n                next = node.parent?.nextSibling ?? null;\n            }\n            if (callback.call(thisArg, node)) {\n                return node;\n            }\n            node = next;\n        }\n        return null;\n    }\n\n    /**\n     * Tests whether at least one child node passes the test implemented by the provided function.\n     *\n     * @param callback - The callback to call for each child node returning a boolean.\n     * @param thisArg  - Optional value to use as `this` when executing `callback`.\n     * @return True if at least one child node returned true in the given callback, false if none did.\n     */\n    public someChildren(callback: (node: SceneNode<T>, index: number) => boolean, thisArg: unknown = this): boolean {\n        let index = 0;\n        let node = this.firstChild;\n        while (node) {\n            const next = node.nextSibling;\n            if (callback.call(thisArg, node, index++)) {\n                return true;\n            }\n            node = next;\n        }\n        return false;\n    }\n\n    /**\n     * Returns a new array with all child nodes.\n     *\n     * @return All child nodes.\n     */\n    public getChildren(): SceneNode<T>[] {\n        const children: SceneNode<T>[] = [];\n        let node = this.firstChild;\n        while (node) {\n            children.push(node);\n            node = node.nextSibling;\n        }\n        return children;\n    }\n\n    /**\n     * Returns the descendant node with the given id.\n     *\n     * @param id - The ID to look for.\n     * @return The matching descendant node or null if none.\n     */\n    public getDescendantById(id: string): SceneNode<T> | null {\n        return this.findDescendant(node => node.getId() === id);\n    }\n\n    /**\n     * Invalidates the bounds of the node. AUtomatically called when node size is changed. Must be called manually\n     * when some other aspect of the node which may influence the bounds is changed.\n     */\n    public invalidateBounds(): this {\n        this.boundsPolygon.clear();\n        return this;\n    }\n\n    /**\n     * Updates the bounds polygon of the node. The default implementation simply sets a bounding box. Specialized nodes\n     * can overwrite this method to define a more specific polygon.\n     *\n     * @param bounds - The empty bounds polygon to be filled with points by this method.\n     */\n    protected updateBoundsPolygon(bounds: Polygon2): void {\n        bounds.addVertex(new Vector2(0, 0));\n        bounds.addVertex(new Vector2(this.width, 0));\n        bounds.addVertex(new Vector2(this.width, this.height));\n        bounds.addVertex(new Vector2(0, this.height));\n    }\n\n    /**\n     * Returns the bounds polygon of the node.\n     *\n     * @return The bounds polygon.\n     */\n    public getBoundsPolygon(): Polygon2 {\n        if (!this.boundsPolygon.hasVertices()) {\n            this.updateBoundsPolygon(this.boundsPolygon);\n        }\n        return this.boundsPolygon;\n    }\n\n    /**\n     * Marks this node, all parent nodes and the scene as invalid to trigger a scene revalidation. This must be\n     * called every time when some aspect of the node is changed which requires a redraw of the scene node.\n     *\n     * TODO Not yet implemented, currently the scene is constantly redrawn.\n     */\n    public invalidate(): this {\n        /*\n        if (this.valid) {\n            this.valid = false;\n            if (this.parent) {\n                this.parent.invalidate();\n            } else if (this.scene) {\n                void this.scene.invalidate();\n            }\n        }\n        */\n       return this;\n    }\n\n    /**\n     * Adds a new animation to the scene.\n     *\n     * @param animationArgs - The arguments defining the animation to add.\n     */\n    public animate(animationArgs: AnimationArgs<T>): this {\n        this.animations.push(new SceneNodeAnimation(this, animationArgs));\n        return this;\n    }\n\n    /**\n     * Finishes all currently running animations. This calls all animator functions with their last animation index\n     * (1.0) and then removes the animations.\n     */\n    public finishAnimations(): this {\n        for (const animation of this.animations) {\n            animation.finish();\n        }\n        return this.forEachChild(child => child.finishAnimations());\n    }\n\n    /**\n     * Checks if node has running animations.\n     *\n     * @return True if node has animations, false if not.\n     */\n    public hasAnimations(): boolean {\n        return this.animations.length > 0 || this.someChildren(child => child.hasAnimations());\n    }\n\n    /**\n     * Returns the layer of this node.\n     *\n     * @return The node's layer (0-31).\n     */\n    public getLayer(): number {\n        return Math.log2(this.layer);\n    }\n\n    /**\n     * Sets the layer this node should appear on.\n     *\n     * @param layer - The layer to set (0-31).\n     */\n    public setLayer(layer: number): this {\n        if (layer < 0 || layer > 31) {\n            throw new Error(`Valid layer range is 0-31 but was ${layer}`);\n        }\n        layer = 1 << layer;\n        if (layer !== this.layer) {\n            this.layer = layer;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Updates the animations and removes finished animations.\n     */\n    private updateAnimations(dt: number): void {\n        const animations = this.animations;\n        let numAnimations = animations.length;\n        let i = 0;\n        while (i < numAnimations) {\n            if (animations[i].update(dt)) {\n                animations.splice(i, 1);\n                numAnimations--;\n            } else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Updates this node and its child nodes recursively.\n     *\n     * @param dt - The time in seconds since the last update.\n     * @return Bit mask with used layers.\n     */\n    protected updateAll(dt: number): number {\n        // Update this node and run animations\n        const postUpdate = this.update(dt);\n        this.updateAnimations(dt);\n\n        // Update the scene transformation for this node\n        const parent = this.parent;\n        if (parent != null) {\n            this.sceneTransformation.setMatrix(parent.sceneTransformation);\n            this.sceneTransformation.translate(\n                (Direction.getX(parent.childAnchor) + 1) / 2 * parent.width,\n                (Direction.getY(parent.childAnchor) + 1) / 2 * parent.height\n            );\n        } else {\n            this.sceneTransformation.reset();\n        }\n        this.sceneTransformation.translate(this.x, this.y);\n        this.sceneTransformation.mul(this.transformation);\n        this.sceneTransformation.translate(\n            -(Direction.getX(this.anchor) + 1) / 2 * this.width,\n            -(Direction.getY(this.anchor) + 1) / 2 * this.height\n        );\n\n        // Update child nodes\n        const layers = this.updateChildren(dt) | this.layer;\n\n        // When update method returned a post-update function then call it now\n        if (postUpdate != null) {\n            postUpdate();\n        }\n\n        return layers;\n    }\n\n    /**\n     * Updates the child nodes of this node recursively.\n     *\n     * @param dt - The time in seconds since the last update.\n     * @return Bit mask with used layers.\n     */\n    protected updateChildren(dt: number): number {\n        let layers = 0;\n        this.forEachChild(child => {\n            layers |= child.updateAll(dt);\n        });\n        return layers;\n    }\n\n    /**\n     * Updates this node. This is done before updating the child nodes of this node. The method can return an optional\n     * function which is called after the child nodes are updated so this can be used for post-updating operations.\n     *\n     * @param dt - The time in seconds since the last update.\n     * @return Optional post-update function which is called after updating the child nodes.\n     */\n    protected update(dt: number): void | (() => void) {\n        // Intentionally left empty.\n    }\n\n    /**\n     * Draws this scene node and its child nodes recursively\n     *\n     * @param ctx    - The rendering context.\n     * @param layer  - The layer to render. Nodes which doesn't belong to this layer are not drawn.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Hints which suggests further actions after drawing.\n     */\n    protected drawAll(ctx: CanvasRenderingContext2D, layer: number, width: number, height: number): PostDrawHints {\n        ctx.save();\n        ctx.globalAlpha *= this.getEffectiveOpacity();\n        ctx.translate(this.x, this.y);\n        this.transformation.transformCanvas(ctx);\n        ctx.translate(\n            -(Direction.getX(this.anchor) + 1) / 2 * this.width,\n            -(Direction.getY(this.anchor) + 1) / 2 * this.height\n        );\n        const postDraw = layer === this.layer ? this.draw(ctx, width, height) : null;\n        ctx.save();\n        ctx.translate(\n            (Direction.getX(this.childAnchor) + 1) / 2 * this.width,\n            (Direction.getY(this.childAnchor) + 1) / 2 * this.height\n        );\n        let flags = this.drawChildren(ctx, layer, width, height);\n        ctx.restore();\n        if (postDraw != null) {\n            if (postDraw === true) {\n                flags |= PostDrawHints.CONTINUE_DRAWING;\n            } else if (postDraw !== false) {\n                postDraw();\n            }\n        }\n        ctx.restore();\n        return flags;\n    }\n\n    /**\n     * Draws all child nodes of this scene node recursively.\n     *\n     * @param ctx    - The rendering context.\n     * @param layer  - The layer to render. Nodes which doesn't belong to this layer are not drawn.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Hints which suggests further actions after drawing.\n     */\n    protected drawChildren(ctx: CanvasRenderingContext2D, layer: number, width: number, height: number):\n            PostDrawHints {\n        let flags = 0;\n        this.forEachChild(child => {\n            flags |= child.drawAll(ctx, layer, width, height);\n        });\n        return flags;\n    }\n\n    /**\n     * Draws this node. This is done before drawing the child nodes of this node. The method can return a boolean\n     * which indicates if the scene is not finished yet and must be drawn continuously (for animations for example).\n     * The method can also return an optional function which is called after the child nodes are drawn so this can be\n     * used for post-drawing operations. This post-draw function then can again return an optional boolean which\n     * indicates that scene must be continuously draw itself.\n     *\n     * @param ctx    - The rendering context.\n     * @param width  - The scene width.\n     * @param height - The scene height.\n     * @return Optional boolean to indicate if scene must be redrawn continuously (Defaults to false) or a post-draw\n     *         function which is called after drawing the child nodes and which again can return a flag indicating\n     *         continuos redraw.\n     */\n    protected draw(ctx: CanvasRenderingContext2D, width: number, height: number):\n        void | boolean | (() => void | boolean) {}\n}\n","import { type Easing, linear } from \"../easings\";\nimport { type Game } from \"../Game\";\nimport { type SceneNode } from \"./SceneNode\";\n\n/**\n * Function signature for a scene node animator. Function is called with the scene node to animate as first parameter,\n * the current animation time index (0.0 - 1.0) and the elapsed time in seconds as third parameter.\n */\nexport type SceneNodeAnimator<T extends Game = Game> = (sceneNode: SceneNode<T>, value: number,\n    elapsed: number) => void;\n\n/**\n * Constructor arguments for {@linkcode SceneNodeAnimation}}.\n */\nexport interface AnimationArgs<T extends Game = Game> {\n    /** The animator function. */\n    animator: SceneNodeAnimator<T>;\n\n    /** Number of seconds to wait until animations starts. Defaults to 0. */\n    delay?: number;\n\n    /** Duration of the animation in seconds. Defaults to 1. */\n    duration?: number;\n\n    /** The easing function to use. Defaults to linear. */\n    easing?: Easing;\n}\n\n/**\n * Scene node animation. Instance is created internally within {@linkcode SceneNode}} when you call {@linkcode SceneNode#animate()}.\n *\n * @param T - Optional owner game class.\n */\nexport class SceneNodeAnimation<T extends Game = Game> {\n    /** The scene node to animate. */\n    private readonly sceneNode: SceneNode<T>;\n\n    /** The animator function. */\n    private readonly animator: SceneNodeAnimator<T>;\n\n    /** The delay in seconds before actual animation starts. */\n    private readonly delay: number;\n\n    /** The duration of the animation in seconds. */\n    private readonly duration: number;\n\n    /** The total lifetime of the animation (delay + duration). */\n    private readonly lifetime: number;\n\n    /** The easing function to use for easing the animation. */\n    private readonly easing: Easing;\n\n    /** Time elapsed so far within the animation (including delay). */\n    private elapsed: number = 0;\n\n    /**\n     * Creates scene node animation for the given scene node and with the given animation arguments. You usually\n     * don't create an instance of this class yourself. Instead you have to use the {@linkcode SceneNode#animate()} method.\n     */\n    public constructor(sceneNode: SceneNode<T>, { animator, delay = 0, duration = 1, easing = linear }:\n            AnimationArgs<T>) {\n        this.sceneNode = sceneNode;\n        this.animator = animator;\n        this.delay = delay;\n        this.duration = duration;\n        this.easing = easing;\n        this.lifetime = delay + duration;\n    }\n\n    /**\n     * Updates the animation.\n     *\n     * @param dt - The time in seconds since the last update.\n     */\n    public update(dt: number): boolean {\n        this.elapsed += dt;\n        if (this.elapsed < this.lifetime) {\n            if (this.elapsed > this.delay) {\n                const timeIndex = ((this.elapsed - this.delay) / this.duration) % 1;\n                this.animator(this.sceneNode, this.easing(timeIndex), this.elapsed);\n            }\n            return false;\n        } else {\n            this.animator(this.sceneNode, 1, this.lifetime);\n            return true;\n        }\n    }\n\n    /**\n     * Finishes the animation by fast-forwarding the animation index to the end of the animation lifetime.\n     */\n    public finish(): void {\n        this.elapsed = this.lifetime;\n    }\n}\n","import { type BitmapFont } from \"../BitmapFont\";\nimport { type Game } from \"../Game\";\nimport { SceneNode, type SceneNodeArgs } from \"./SceneNode\";\n\n/**\n * Constructor arguments for {@linkcode TextNode}.\n */\nexport interface TextNodeArgs extends SceneNodeArgs {\n    /** The initial font used to draw the text. */\n    font: BitmapFont;\n\n    /** Optional initial text to draw. Defaults to empty string. */\n    text?: string;\n\n    /** Optional initial text color. Defaults to \"white\". */\n    color?: string;\n\n    /** Optional initial outline text color. Default is null which means no outline is drawn. */\n    outlineColor?: string | null;\n}\n\n/**\n * Scene node for displaying a text with an optional icon left to it.\n *\n * @param T - Optional owner game class.\n */\nexport class TextNode<T extends Game = Game> extends SceneNode<T> {\n    /** The font used to draw the text. */\n    private font: BitmapFont;\n\n    /** The text to draw. */\n    private text: string;\n\n    /** The text color. */\n    private color: string;\n\n    /** Optional outline color. */\n    private outlineColor: string | null;\n\n    /**\n     * Creates a new scene node displaying the given image.\n     */\n    public constructor({ font, text = \"\", color = \"white\", outlineColor = null, ...args } : TextNodeArgs) {\n        super(args);\n        this.font = font;\n        this.text = text;\n        this.color = color;\n        this.outlineColor = outlineColor;\n        this.updateSize();\n    }\n\n    /**\n     * Returns the displayed text.\n     *\n     * @return The displayed text.\n     */\n    public getText(): string {\n        return this.text;\n    }\n\n    /**\n     * Sets the displayed text.\n     *\n     * @param text - The text to set.\n     */\n    public setText(text: string): this {\n        if (text !== this.text) {\n            this.text = text;\n            this.updateSize();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the bitmap font used to draw the text.\n     *\n     * @return The used bitmap font.\n     */\n    public getFont(): BitmapFont {\n        return this.font;\n    }\n\n    /**\n     * Sets the bitmap font used to draw the text.\n     *\n     * @param font - The bitmap font to use.\n     */\n    public setFont(font: BitmapFont): this {\n        if (font !== this.font) {\n            this.font = font;\n            this.updateSize();\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the text color.\n     *\n     * @return The text color.\n     */\n    public getColor(): string {\n        return this.color;\n    }\n\n    /**\n     * Sets the text color.\n     *\n     * @param color - The text color to set.\n     */\n    public setColor(color: string): this {\n        if (color !== this.color) {\n            this.color = color;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Returns the text outline color. Null if none.\n     *\n     * @return The text outline color. Null if none.\n     */\n    public getOutlineColor(): string | null {\n        return this.outlineColor;\n    }\n\n    /**\n     * Sets the text outline color.\n     *\n     * @param outlineColor - The text outline color to set.\n     */\n    public setOutlineColor(outlineColor: string | null): this {\n        if (outlineColor !== this.outlineColor) {\n            this.outlineColor = outlineColor;\n            this.invalidate();\n        }\n        return this;\n    }\n\n    /**\n     * Updates the node size according to the text measurements.\n     */\n    private updateSize(): void {\n        const size = this.font.measureText(this.text);\n        this.resizeTo(size.width, size.height);\n    }\n\n    /** @inheritDoc */\n    public override draw(ctx: CanvasRenderingContext2D): void {\n        if (this.outlineColor != null) {\n            this.font.drawTextWithOutline(ctx, this.text, 0, 0, this.color, this.outlineColor);\n        } else {\n            this.font.drawText(ctx, this.text, 0, 0, this.color);\n        }\n    }\n}\n","export enum AmbientSoundId {\n    STREAM = \"stream\",\n    WIND = \"wind\",\n}\n","export enum BgmId {\n    OVERWORLD = \"overworld\",\n    INFERNO = \"inferno\",\n    CAVE = \"cave\",\n    RIDDLE = \"riddle\",\n    RADIO = \"radio\",\n    WINGS = \"wings\",\n    ECSTASY = \"ecstasy\",\n    AWAKE = \"awake\",\n    SHADOWGATE = \"shadowgate\"\n}\n","import { DIALOG_FONT } from \"../../shared/constants\";\nimport { type Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { type Sound } from \"../audio/Sound\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { CharacterAsset, VoiceAsset } from \"../Campaign\";\nimport { easeOutCubic } from \"../easings\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { Direction } from \"../geom/Direction\";\nimport { GlobalState } from \"../GlobalState\";\nimport { type ControllerEvent } from \"../input/ControllerEvent\";\nimport { ControllerAnimationTags } from \"../input/ControllerFamily\";\nimport { MenuItem, MenuList } from \"../Menu\";\nimport { Scene } from \"../Scene\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\nimport { ControlTooltipNode } from \"../scene/ControlTooltipNode\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { SlideTransition } from \"../transitions/SlideTransition\";\nimport { GameScene } from \"./GameScene\";\nimport { TitleScene } from \"./TitleScene\";\n\nenum MenuItemKey {\n    CHARACTER = \"character\",\n    VOICE = \"voice\",\n    START = \"start\",\n    START_PLUS = \"startPlus\"\n}\n\nconst menuItemX = 12;\nconst characterMenuItemY = 20;\nconst voiceMenuItemY = 50;\nconst startMenuItemY = 124;\nconst selectionItemsYDistance = 12;\nconst selectionItemsXDistance = 12;\n\nexport class CharacterSelectionScene extends Scene<FriendlyFire> {\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    @asset(\"fonts/credits.font.json\")\n    private static readonly headlineFont: BitmapFont;\n\n    @asset([\n        \"sprites/pc/female.aseprite.json\",\n        \"sprites/pc/male.aseprite.json\"\n    ])\n    public static playerSprites: Aseprite[];\n\n    @asset([\n        \"sounds/jumping/jumping_female.mp3\",\n        \"sounds/jumping/jumping.mp3\"\n    ])\n    private static readonly voices: Sound[];\n\n    @asset(\"images/panel.png\")\n    private static readonly panelImage: HTMLImageElement;\n\n    private menu!: MenuList;\n    private variant1!: TextNode;\n    private variant2!: TextNode;\n    private voice1!: TextNode;\n    private voice2!: TextNode;\n    private character!: AsepriteNode;\n\n    public override activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n        this.menu.onActivated.connect(this.handleMenuAction, this);\n    }\n\n    public override deactivate(): void {\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n        this.menu.onActivated.disconnect(this.handleMenuAction, this);\n    }\n\n    public async handleMenuAction(buttonId: string): Promise<void> {\n        switch (buttonId) {\n            case MenuItemKey.CHARACTER:\n                this.game.campaign.toggleCharacterAsset();\n                this.updateSelection();\n                break;\n            case MenuItemKey.VOICE:\n                this.game.campaign.toggleVoiceAsset();\n                this.updateSelection();\n                CharacterSelectionScene.voices[this.game.campaign.selectedVoice].play();\n                break;\n            case MenuItemKey.START:\n                this.game.campaign.setNewGamePlus(false);\n                await this.game.scenes.popScene({ noTransition: false });\n                TitleScene.music.stop();\n                await this.game.scenes.setScene(GameScene);\n                break;\n            case MenuItemKey.START_PLUS:\n                this.game.campaign.setNewGamePlus(true);\n                await this.game.scenes.popScene({ noTransition: false });\n                TitleScene.music.stop();\n                await this.game.scenes.setScene(GameScene);\n        }\n    }\n\n    private async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (event.isAbort) {\n            await this.scenes.popScene();\n        } else if (event.isConfirm) {\n            this.menu.executeAction();\n        } else if (event.isMenuUp) {\n            this.menu.prev();\n        } else if (event.isMenuDown) {\n            this.menu.next();\n        }\n    }\n\n    private updateSelection(): void {\n        if (this.game.campaign.selectedCharacter === CharacterAsset.MALE) {\n            this.variant1.setColor(\"grey\").setOutlineColor(null);\n            this.variant2.setColor(\"white\").setOutlineColor(\"black\");\n        } else {\n            this.variant1.setColor(\"white\").setOutlineColor(\"black\");\n            this.variant2.setColor(\"grey\").setOutlineColor(null);\n        }\n\n        if (this.game.campaign.selectedVoice === VoiceAsset.MALE) {\n            this.voice1.setColor(\"grey\").setOutlineColor(null);\n            this.voice2.setColor(\"white\").setOutlineColor(\"black\");\n        } else {\n            this.voice1.setColor(\"white\").setOutlineColor(\"black\");\n            this.voice2.setColor(\"grey\").setOutlineColor(null);\n        }\n\n        this.character.setAseprite(CharacterSelectionScene.playerSprites[this.game.campaign.selectedCharacter]);\n    }\n\n    public override setup(): void {\n        this.setBackgroundStyle(\"rgba(0, 0, 0, 0.8)\");\n\n        this.zIndex = 2;\n        this.inTransition = new SlideTransition({ duration: 0.5, direction: \"top\", easing: easeOutCubic });\n        this.outTransition = new SlideTransition({ duration: 0.25 });\n\n        const charSelectionTextY = characterMenuItemY + selectionItemsYDistance;\n        const charSelectionTextX = menuItemX + selectionItemsXDistance;\n        const charSelectionTextGap = 55;\n\n        const voiceSelectionTextY = voiceMenuItemY + selectionItemsYDistance;\n        const voiceSelectionTextX = menuItemX + selectionItemsXDistance;\n        const voiceSelectionTextGap = 55;\n\n        const character = this.game.campaign.selectedCharacter;\n\n        const panel = new ImageNode({\n            image: CharacterSelectionScene.panelImage,\n            childAnchor: Direction.TOP_LEFT,\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) - 16\n        }).appendChild(\n            new TextNode({\n                font: CharacterSelectionScene.headlineFont,\n                text: \"CHARACTER CUSTOMIZATION\",\n                anchor: Direction.BOTTOM_LEFT,\n                y: -5,\n                color: \"white\"\n            })\n        ).appendChild(\n            this.variant1 = new TextNode({\n                font: CharacterSelectionScene.font,\n                text: \"Variant 1\",\n                anchor: Direction.TOP_LEFT,\n                x: charSelectionTextX,\n                y: charSelectionTextY,\n                color: \"grey\"\n            })\n        ).appendChild(\n            this.variant2 = new TextNode({\n                font: CharacterSelectionScene.font,\n                text: \"Variant 2\",\n                anchor: Direction.TOP_LEFT,\n                x: charSelectionTextX + charSelectionTextGap,\n                y: charSelectionTextY,\n                color: \"grey\"\n            })\n        ).appendChild(\n            this.voice1 = new TextNode({\n                font: CharacterSelectionScene.font,\n                text: \"High Pitch\",\n                anchor: Direction.TOP_LEFT,\n                x: voiceSelectionTextX,\n                y: voiceSelectionTextY,\n                color: \"grey\"\n            })\n        ).appendChild(\n            this.voice2 = new TextNode({\n                font: CharacterSelectionScene.font,\n                text: \"Low Pitch\",\n                anchor: Direction.TOP_LEFT,\n                x: voiceSelectionTextX + voiceSelectionTextGap,\n                y: voiceSelectionTextY,\n                color: \"grey\"\n            })\n        ).appendChild(\n            this.character = new AsepriteNode({\n                aseprite: CharacterSelectionScene.playerSprites[character],\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: 213,\n                y: 46\n            })\n        ).appendChild(\n            new ControlTooltipNode({\n                control: ControllerAnimationTags.CONFIRM,\n                label: \"Select or Change\",\n                anchor: Direction.TOP_LEFT,\n                y: CharacterSelectionScene.panelImage.height + 2\n            })\n        ).appendChild(\n            new ControlTooltipNode({\n                control: ControllerAnimationTags.BACK,\n                label: \"Back\",\n                anchor: Direction.TOP_LEFT,\n                y: CharacterSelectionScene.panelImage.height + 18\n            })\n        ).appendTo(this.rootNode);\n\n        this.menu = new MenuList().setItems(\n            new MenuItem(\n                MenuItemKey.CHARACTER, \"Character:\", CharacterSelectionScene.font, \"black\",\n                menuItemX, characterMenuItemY\n            ),\n            new MenuItem(\n                MenuItemKey.VOICE, \"Voice:\", CharacterSelectionScene.font, \"black\",\n                menuItemX, voiceMenuItemY\n            ),\n            new MenuItem(\n                MenuItemKey.START, \"Start New Game\", CharacterSelectionScene.font, \"black\",\n                menuItemX, startMenuItemY - (GlobalState.getHasBeatenGame() ? 12 : 0)\n            )\n        );\n\n        if (GlobalState.getHasBeatenGame()) {\n            this.menu.addItems(new MenuItem(\n                MenuItemKey.START_PLUS, \"Start New Game +\", CharacterSelectionScene.font, \"black\",\n                menuItemX, startMenuItemY\n            ));\n        }\n\n        this.menu.appendTo(panel);\n\n        this.updateSelection();\n    }\n\n    public override cleanup(): void {\n        this.rootNode.clear();\n    }\n}\n","import { DIALOG_FONT } from \"../../shared/constants\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { easeOutCubic } from \"../easings\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { Direction } from \"../geom/Direction\";\nimport { type ControllerEvent } from \"../input/ControllerEvent\";\nimport { ControllerAnimationTags } from \"../input/ControllerFamily\";\nimport { ControllerManager } from \"../input/ControllerManager\";\nimport { Scene } from \"../Scene\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\nimport { ControlTooltipNode } from \"../scene/ControlTooltipNode\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { SlideTransition } from \"../transitions/SlideTransition\";\n\nexport class ControlsScene extends Scene<FriendlyFire> {\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    @asset(\"images/controls.png\")\n    private static readonly panelImage: HTMLImageElement;\n\n    @asset(\"images/controls_keyboard.png\")\n    private static readonly keyboardKeys: HTMLImageElement;\n\n    @asset(\"sprites/gamepad_selection.aseprite.json\")\n    private static readonly gamepadSelection: Aseprite;\n\n    @asset(\"sprites/controls_gamepad.aseprite.json\")\n    private static readonly gamepadControls: Aseprite;\n\n    private readonly controls: string[] = [\n        \"Walk\",\n        \"Jump\",\n        \"Interact\",\n        \"Run\",\n        \"Throw\",\n        \"Enter doors\",\n        \"Pause\"\n    ];\n\n    private gamepadSelection!: AsepriteNode;\n    private gamepadControls!: AsepriteNode;\n\n    public override get urlFragment(): string {\n        return \"#controls\";\n    }\n\n    public override setup(): void {\n        this.setBackgroundStyle(\"rgba(0, 0, 0, 0.8)\");\n        this.zIndex = 2;\n        this.inTransition = new SlideTransition({ duration: 0.5, direction: \"top\", easing: easeOutCubic });\n        this.outTransition = new SlideTransition({ duration: 0.25 });\n\n        const controllerManager = ControllerManager.getInstance();\n        const gamepadStyle = controllerManager.currentGamepadStyle;\n\n        this.gamepadSelection = new AsepriteNode({\n            aseprite: ControlsScene.gamepadSelection,\n            tag: controllerManager.autoDetectGamepadStyle ? \"autodetect\" : controllerManager.currentGamepadStyle,\n            anchor: Direction.TOP_LEFT,\n            x: 204,\n            y: 2\n        });\n\n        this.gamepadControls = new AsepriteNode({\n            aseprite: ControlsScene.gamepadControls,\n            tag: gamepadStyle,\n            anchor: Direction.TOP_LEFT,\n            x: 206,\n            y: 35\n        });\n\n        const panel = new ImageNode({\n            image: ControlsScene.panelImage,\n            x: this.game.width / 2,\n            y: this.game.height / 2 - 16,\n            childAnchor: Direction.TOP_LEFT\n        }).appendChild(\n            this.gamepadSelection\n        ).appendChild(\n            new ImageNode({\n                image: ControlsScene.keyboardKeys,\n                anchor: Direction.TOP_LEFT,\n                x: 123,\n                y: 35\n            })\n        ).appendChild(\n            this.gamepadControls\n        ).appendChild(\n            new ControlTooltipNode({\n                label: \"Toggle Gamepad Button Prompts\",\n                control: ControllerAnimationTags.ACTION,\n                anchor: Direction.TOP_LEFT,\n                y: ControlsScene.panelImage.height + 2\n            })\n        ).appendChild(\n            new ControlTooltipNode({\n                label: \"Back\",\n                control: ControllerAnimationTags.BACK,\n                anchor: Direction.TOP_LEFT,\n                y: ControlsScene.panelImage.height + 18\n            })\n        ).appendTo(this.rootNode);\n\n        this.controls.forEach((label, index) => {\n            panel.appendChild(new TextNode({\n                font: ControlsScene.font,\n                text: label,\n                anchor: Direction.TOP_LEFT,\n                x: 10,\n                y: 35 + index * 20,\n                color: \"black\"\n            }));\n        });\n    }\n\n    public override cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public override activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n    }\n\n    public override deactivate(): void {\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n    }\n\n    private async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (event.isAbort || event.isPause) {\n            await this.scenes.popScene();\n        } else if (event.isPlayerAction) {\n            const controllerManager = ControllerManager.getInstance();\n            controllerManager.toggleSelectedGamepadStyle();\n            this.gamepadControls.setTag(controllerManager.currentGamepadStyle);\n            this.gamepadSelection.setTag(controllerManager.autoDetectGamepadStyle ? \"autodetect\" : controllerManager.currentGamepadStyle);\n        }\n    }\n}\n","import { APP_NAME, DIALOG_FONT, GAME_CANVAS_WIDTH } from \"../../shared/constants\";\nimport { type AppInfoJSON } from \"../AppInfo\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { type Sound } from \"../audio/Sound\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { CharacterAsset } from \"../Campaign\";\nimport { easeOutCubic } from \"../easings\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { Direction } from \"../geom/Direction\";\nimport { type ControllerEvent } from \"../input/ControllerEvent\";\nimport { QuestKey } from \"../Quests\";\nimport { Scene } from \"../Scene\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { SceneNode } from \"../scene/SceneNode\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { FadeTransition } from \"../transitions/FadeTransition\";\nimport { isDev } from \"../util\";\nimport { TitleScene } from \"./TitleScene\";\n\nexport class CreditsScene extends Scene<FriendlyFire> {\n    @asset([\n        \"music/a-vision-of-fire-acoustic.ogg\",\n        \"music/a-vision-of-fire-orchestral.ogg\",\n        \"music/a-vision-of-fire.ogg\",\n    ])\n    public static music: Sound[];\n\n    @asset([\n        \"sprites/stars/star1.aseprite.json\",\n        \"sprites/stars/star2.aseprite.json\",\n        \"sprites/stars/star3.aseprite.json\",\n        \"sprites/stars/star4.aseprite.json\",\n        \"sprites/stars/star5.aseprite.json\"\n    ])\n    private static readonly stars: Aseprite[];\n\n    @asset(\"sprites/credits/leaf.aseprite.json\")\n    private static readonly leaf: Aseprite;\n\n    @asset(\"sprites/credits/spaceship.aseprite.json\")\n    private static readonly spaceship: Aseprite;\n\n    @asset(\"sprites/credits/spaceshipsmall.aseprite.json\")\n    private static readonly spaceshipsmall: Aseprite;\n\n    private readonly starPositions: number[][] = [\n        [318, 10],\n        [288, 19],\n        [260, 100],\n        [370, 91],\n        [409, 49],\n        [446, 19],\n        [436, 97],\n        [185, 93],\n        [159, 49],\n        [322, 72],\n        [153, 10],\n        [211, 20],\n        [59, 22],\n        [17, 11],\n        [102, 108]\n    ];\n\n    @asset(\"images/credits/bg.png\")\n    private static readonly backgroundImage: HTMLImageElement;\n\n    @asset(\"images/credits/bg-space.png\")\n    private static readonly backgroundImageSpace: HTMLImageElement;\n\n    @asset(\"images/credits/overlay.png\")\n    private static readonly overlayImage: HTMLImageElement;\n\n    @asset(\"fonts/headline.font.json\")\n    private static readonly headlineFont: BitmapFont;\n\n    @asset(DIALOG_FONT)\n    private static readonly standardFont: BitmapFont;\n\n    @asset(\"fonts/credits.font.json\")\n    private static readonly creditsFont: BitmapFont;\n\n    @asset(\"appinfo.json\")\n    private static readonly appInfo: AppInfoJSON;\n\n    private readonly lineSpacing = 4;\n    private targetMusic: Sound | null = null;\n\n    private getCorrectBackgroundTrack(): Sound {\n        const ending = this.game.campaign.quests.find(q => q.isFinished());\n        if (ending && ending.key === QuestKey.E) return CreditsScene.music[2];\n\n        if (this.game.campaign.selectedCharacter === CharacterAsset.FEMALE) return CreditsScene.music[1];\n        if (this.game.campaign.selectedCharacter === CharacterAsset.MALE) return CreditsScene.music[0];\n        return CreditsScene.music[2];\n    }\n\n    public override get urlFragment(): string {\n        return \"#credits\";\n    }\n\n    public override setup(): void {\n        const ending = this.game.campaign.quests.find(q => q.isFinished());\n        this.zIndex = 2;\n        this.inTransition = new FadeTransition({ duration: 0.5, easing: easeOutCubic });\n        this.outTransition = new FadeTransition({ duration: 0.25 });\n        this.targetMusic = this.getCorrectBackgroundTrack();\n\n        if (ending && ending.key === QuestKey.E) {\n            // The background\n            new ImageNode({\n                image: CreditsScene.backgroundImageSpace,\n                anchor: Direction.TOP_LEFT\n            }).appendTo(this.rootNode);\n\n            // Spaceship\n            new AsepriteNode({\n                aseprite: CreditsScene.spaceship,\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: GAME_CANVAS_WIDTH,\n                y: 200\n            }).animate({\n                animator: (node, value) => node.setX((GAME_CANVAS_WIDTH + 50) - value * GAME_CANVAS_WIDTH),\n                duration: 100,\n            }).appendTo(this.rootNode);\n\n            // Spaceship\n            new AsepriteNode({\n                aseprite: CreditsScene.spaceshipsmall,\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: GAME_CANVAS_WIDTH,\n                y: 185\n            }).animate({\n                animator: (node, value) => node.setX((GAME_CANVAS_WIDTH + 10) - value * GAME_CANVAS_WIDTH),\n                duration: 200,\n            }).appendTo(this.rootNode);\n        } else {\n            // The background\n            new ImageNode({\n                image: CreditsScene.backgroundImage,\n                anchor: Direction.TOP_LEFT\n            }).appendTo(this.rootNode);\n\n            // The blinking stars\n            this.starPositions.forEach((pos, index) => {\n                new AsepriteNode({\n                    aseprite: CreditsScene.stars[index % CreditsScene.stars.length],\n                    tag: \"idle\",\n                    anchor: Direction.TOP_LEFT,\n                    x: pos[0],\n                    y: pos[1]\n                }).appendTo(this.rootNode);\n            });\n\n            // The tree leaf\n            new AsepriteNode({\n                aseprite: CreditsScene.leaf,\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: 414,\n                y: 163\n            }).appendTo(this.rootNode);\n        }\n        // The gradient background behind the scrolling credits text\n        new ImageNode({\n            image: CreditsScene.overlayImage,\n            anchor: Direction.TOP_LEFT,\n            opacity: 0.75\n        }).appendTo(this.rootNode);\n\n        // The scrolling credits text\n        this.createCreditsNode().appendTo(this.rootNode);\n\n        // Shortened Git commit hash to provide support\n        new TextNode({\n            font: CreditsScene.standardFont,\n            text: CreditsScene.appInfo.gitCommitHash.substring(0, 7),\n            anchor: Direction.BOTTOM_RIGHT,\n            x: this.game.width - 7,\n            y: this.game.height - 4,\n            color: \"white\"\n        }).appendTo(this.rootNode);\n    }\n\n    public override cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    private createCreditsNode(): SceneNode {\n        const startY = this.game.height + 50;\n        let totalCrawlHeight = 0;\n\n        const credits = new SceneNode().appendTo(this.rootNode).animate({\n            animator: (node, value, elapsed) => {\n                node.setY(startY - (elapsed * 1000 / 36) % (totalCrawlHeight + startY));\n            },\n            duration: Infinity\n        });\n\n        const x = 20;\n        let y = this.addTitle(credits, 0, x);\n\n        y = this.addParagraph(credits, y, x, [\n            \"Originally made as a team\",\n            \"effort for Ludum Dare 46\",\n            \"in three days by\"\n        ]);\n\n        y = this.addParagraph(credits, y, x, [\n            \"Eduard But, Nico Hülscher,\",\n            \"Benjamin Jung, Nils Kreutzer,\",\n            \"Bastian Lang, Ranjit Mevius,\",\n            \"Markus Over, Klaus Reimer,\",\n            \"and Jennifer van Veen\"\n        ], 50);\n\n        y = this.addCredit(credits, y, x, \"GAME DESIGN\", [\"Everyone\"]);\n\n        y = this.addCredit(credits, y, x, \"STORY\", [\n            \"Markus Over\",\n            \"Jennifer van Veen\",\n            \"Ranjit Mevius\",\n            \"Nils Kreutzer\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"PROGRAMMING\", [\n            \"Nico Hülscher\",\n            \"Benjamin Jung\",\n            \"Nils Kreutzer\",\n            \"Ranjit Mevius\",\n            \"Markus Over\",\n            \"Klaus Reimer\",\n            \"Eduard But\",\n            \"Matthias Wetter\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"SCRIPTING\", [\n            \"Markus Over\",\n            \"Eduard But\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"ART DIRECTION\", [\"Eduard But\"]);\n\n        y = this.addCredit(credits, y, x, \"2D ART\", [\n            \"Eduard But\",\n            \"Nils Kreutzer\",\n            \"Christina Schneider\",\n            \"Jennifer van Veen\",\n            \"Matthias Wetter\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"WRITING\", [\n            \"Markus Over\",\n            \"Jennifer van Veen\",\n            \"Eduard But\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"LEVEL DESIGN\", [\n            \"Eduard But\",\n            \"Nils Kreutzer\",\n            \"Jennifer van Veen\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"DISTRIBUTION\", [\n            \"Benjamin Jung\",\n        ]);\n\n        y = this.addCredit(credits, y, x, \"MUSIC\", [\n            \"Bastian Lang\",\n            \"Benjamin Jung\",\n            \"Eduard But\",\n            \"Matthias Wetter\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"QA\", [\n            \"Jennifer van Veen\",\n            \"Matthias Wetter\"\n        ]);\n\n        y = this.addCredit(credits, y, x, \"SFX\", [\"freesound.org\"]);\n\n        totalCrawlHeight = y;\n\n        return credits;\n    }\n\n    public override activate(): void {\n        if (this.targetMusic) {\n            this.targetMusic.setLoop(true);\n            this.targetMusic.setVolume(1);\n            this.targetMusic.play();\n        }\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n    }\n\n    public override deactivate(): void {\n        if (this.targetMusic) {\n            this.targetMusic.stop();\n        }\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n    }\n\n    private async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (this.scenes.getPreviousScene() instanceof TitleScene) {\n            await this.game.scenes.popScene();\n        } else {\n            await this.scenes.setScene(TitleScene);\n        }\n    }\n\n    private addTitle(credits: SceneNode, y: number, x: number): number {\n        const gap = 5;\n        const titleText = APP_NAME;\n        const versionText = isDev() ? \"DEVELOPMENT VERSION\" : `Version ${CreditsScene.appInfo.version}`;\n\n        y += new TextNode({\n            font: CreditsScene.headlineFont,\n            text: titleText,\n            anchor: Direction.TOP_LEFT,\n            x, y,\n            color: \"white\"\n        }).appendTo(credits).getHeight();\n\n        y += gap;\n\n        y += new TextNode({\n            font: CreditsScene.standardFont,\n            text: versionText,\n            anchor: Direction.TOP_LEFT,\n            x, y,\n            color: \"white\"\n        }).appendTo(credits).getHeight();\n\n        return y + gap + 20;\n    }\n\n    private addParagraph(credits: SceneNode, y: number, x: number, lines: string[], marginBottom = 10): number {\n        lines.forEach(line => {\n            y += new TextNode({\n                font: CreditsScene.standardFont,\n                text: line,\n                anchor: Direction.TOP_LEFT,\n                x, y,\n                color: \"white\"\n            }).appendTo(credits).getHeight();\n        });\n        return y + marginBottom;\n    }\n\n    private addCredit(credits: SceneNode, y: number, x: number, title: string, names: string[]): number {\n        const gap = 5;\n\n        y += new TextNode({\n            font: CreditsScene.creditsFont,\n            text: title,\n            anchor: Direction.TOP_LEFT,\n            x, y,\n            color: \"white\"\n        }).appendTo(credits).getHeight();\n\n        y += this.lineSpacing + gap;\n\n        names.forEach(name => {\n            y += new TextNode({\n                font: CreditsScene.standardFont,\n                text: name,\n                anchor: Direction.TOP_LEFT,\n                x, y,\n                color: \"white\"\n            }).appendTo(credits).getHeight();\n        });\n\n        return y + 40;\n    }\n}\n","import { DIALOG_FONT } from \"../../shared/constants\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { easeOutQuad } from \"../easings\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { Direction } from \"../geom/Direction\";\nimport { GlobalState } from \"../GlobalState\";\nimport { ControllerFamily } from \"../input/ControllerFamily\";\nimport { Scene } from \"../Scene\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { CreditsScene } from \"./CreditsScene\";\n\nexport class EndScene extends Scene<FriendlyFire> {\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    @asset(\"images/ending/ff.png\")\n    private static readonly logo: HTMLImageElement;\n\n    @asset(\"sounds/ending/boom.mp3\")\n    private static readonly boom: Sound;\n\n    private readonly subtitleDelay = 2;\n    private readonly inputDelay = 4;\n\n    public override setup(): void {\n        const ending = this.game.campaign.quests.find(q => q.isFinished());\n\n        if (ending) {\n            GlobalState.setAchievedEnding(ending.key);\n            GlobalState.setHasBeatenGame();\n        }\n\n        // The logo image\n        new ImageNode({\n            image: EndScene.logo,\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) - 15\n        }).appendTo(this.rootNode);\n\n        // Fade in subtitle after a delay\n        new TextNode({\n            font: EndScene.font,\n            text: ending?.title ?? \"Unknown [E]nding\",\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) + 11,\n            color: \"red\",\n            opacity: 0\n        }).animate({\n            animator: (node, value) => node.setOpacity(value),\n            delay: this.subtitleDelay,\n            duration: 0.5,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // Inform the user, that it's possible to return to the title\n        const text = `Press any ${this.input.currentControllerFamily === ControllerFamily.KEYBOARD\n            ? \"key\" : \"button\"} to continue.`;\n        new TextNode({\n            font: EndScene.font,\n            text,\n            anchor: Direction.BOTTOM,\n            x: this.game.width >> 1,\n            y: this.game.height - 15,\n            color: \"darkgrey\",\n            opacity: 0\n        }).animate({\n            animator: (node, value) => node.setOpacity(value),\n            delay: this.inputDelay,\n            duration: 0.5,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n    }\n\n    public override activate(): void {\n        setTimeout(() => {\n            EndScene.boom.setLoop(false);\n            EndScene.boom.play();\n        }, this.subtitleDelay * 1000);\n\n        setTimeout(() => {\n            this.input.onButtonDown.connect(this.gotoCreditsScene, this);\n        }, this.inputDelay * 1000);\n    }\n\n    public override deactivate(): void {\n        this.input.onButtonDown.disconnect(this.gotoCreditsScene, this);\n    }\n\n    private async gotoCreditsScene(): Promise<void> {\n        await this.game.scenes.setScene(CreditsScene);\n    }\n\n    public override cleanup(): void {\n        this.rootNode.clear();\n    }\n}\n","export enum FadeDirection { FADE_IN, FADE_OUT }\n","export interface GameObject {\n    draw(ctx: CanvasRenderingContext2D, width: number, height: number): void;\n    update(dt: number): void;\n}\n\nexport interface CollidableGameObject extends GameObject {\n    collidesWith(x: number, y: number): number;\n}\n\nexport function isCollidableGameObject(object: GameObject): object is CollidableGameObject  {\n    return typeof (object as CollidableGameObject).collidesWith === \"function\";\n}\n","import \"../entities/RiddleStone\";\nimport \"../entities/MovingPlatform\";\nimport \"../entities/Campfire\";\nimport \"../entities/Radio\";\nimport \"../entities/Skull\";\nimport \"../entities/Chicken\";\nimport \"../entities/SuperThrow\";\nimport \"../entities/Portal\";\nimport \"../entities/Window\";\n\nimport {\n    DIALOG_FONT, GAME_CANVAS_WIDTH, PETTING_ENDING_CUTSCENE_DURATION, PETTING_ENDING_FADE_DURATION, WINDOW_ENDING_CUTSCENE_DURATION,\n    WINDOW_ENDING_FADE_DURATION\n} from \"../../shared/constants\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { SoundEmitter } from \"../audio/SoundEmitter\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { Camera } from \"../Camera\";\nimport { Conversation } from \"../Conversation\";\nimport { Bird } from \"../entities/Bird\";\nimport { Bone } from \"../entities/Bone\";\nimport { Caveman } from \"../entities/Caveman\";\nimport { Cloud } from \"../entities/Cloud\";\nimport { ExitPortal } from \"../entities/ExitPortal\";\nimport { Fire } from \"../entities/Fire\";\nimport { FireState } from \"../entities/FireState\";\nimport { FlameBoy } from \"../entities/FlameBoy\";\nimport { Mimic } from \"../entities/Mimic\";\nimport { Player } from \"../entities/Player\";\nimport { PowerShiba } from \"../entities/PowerShiba\";\nimport { type Seed } from \"../entities/Seed\";\nimport { ShadowPresence } from \"../entities/ShadowPresence\";\nimport { Shiba } from \"../entities/Shiba\";\nimport { ShibaState } from \"../entities/ShibaState\";\nimport { Stone } from \"../entities/Stone\";\nimport { StoneDisciple } from \"../entities/StoneDisciple\";\nimport { Tree } from \"../entities/Tree\";\nimport { Wing } from \"../entities/Wing\";\nimport { type Bounds, createEntity, Entity  } from \"../Entity\";\nimport { FireGfx } from \"../FireGfx\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { type ControllerEvent } from \"../input/ControllerEvent\";\nimport { type GameObjectInfo, MapInfo} from \"../MapInfo\";\nimport { MenuList } from \"../Menu\";\nimport { MountainRiddle } from \"../MountainRiddle\";\nimport { type ParticleEmitter, Particles, valueCurves } from \"../Particles\";\nimport { QuestATrigger, QuestKey } from \"../Quests\";\nimport { Renderer, RenderingLayer, RenderingType } from \"../Renderer\";\nimport { Scene } from \"../Scene\";\nimport { boundsFromMapObject, clamp, isDev, rnd, rndItem, sleep, timedRnd } from \"../util\";\nimport { World } from \"../World\";\nimport { AmbientSoundId } from \"./AmbientSoundId\";\nimport { BgmId } from \"./BgmId\";\nimport { EndScene } from \"./EndScene\";\nimport { FadeDirection } from \"./FadeDirection\";\nimport { type GameObject } from \"./GameObject\";\nimport { PauseScene } from \"./PauseScene\";\nimport { TitleScene } from \"./TitleScene\";\n\ntype BackgroundTrack = {\n    active: boolean;\n    id: BgmId;\n    sound: Sound,\n    baseVolume: number;\n};\n\ntype PetEndingText = {\n    label: string;\n    enter: number;\n};\n\nexport class GameScene extends Scene<FriendlyFire> {\n    @asset(\"music/theme_01.ogg\")\n    public static bgm1: Sound;\n\n    @asset(\"music/inferno.ogg\")\n    public static bgm2: Sound;\n\n    @asset(\"music/cave.ogg\")\n    public static bgmCave: Sound;\n\n    @asset(\"music/riddle.ogg\")\n    public static bgmRiddle: Sound;\n\n    @asset(\"music/radio.ogg\")\n    public static bgmRadio: Sound;\n\n    @asset(\"music/ecstasy.ogg\")\n    public static bgmEcstasy: Sound;\n\n    @asset(\"music/wings.ogg\")\n    public static bgmWings: Sound;\n\n    @asset(\"music/awake.ogg\")\n    public static bgmAwake: Sound;\n\n    @asset(\"music/shadowgate.ogg\")\n    public static bgmShadowgate: Sound;\n\n    @asset(\"sounds/ambient/stream.ogg\")\n    public static ambientStream: Sound;\n\n    @asset(\"sounds/ambient/wind.ogg\")\n    public static ambientWind: Sound;\n\n    public readonly ambientSounds: Record<AmbientSoundId, Sound> = {\n        [AmbientSoundId.STREAM]: GameScene.ambientStream,\n        [AmbientSoundId.WIND]: GameScene.ambientWind\n    };\n\n    public override get urlFragment(): string {\n        return \"#game\";\n    }\n\n    private readonly backgroundTracks: BackgroundTrack[] = [\n        {\n            active: false,\n            id: BgmId.OVERWORLD,\n            sound: GameScene.bgm1,\n            baseVolume: 0.25\n        },\n        {\n            active: false,\n            id: BgmId.CAVE,\n            sound: GameScene.bgmCave,\n            baseVolume: 1\n        },\n        {\n            active: false,\n            id: BgmId.INFERNO,\n            sound: GameScene.bgm2,\n            baseVolume: 0.10\n        },\n        {\n            active: false,\n            id: BgmId.RIDDLE,\n            sound: GameScene.bgmRiddle,\n            baseVolume: 1\n        },\n        {\n            active: false,\n            id: BgmId.RADIO,\n            sound: GameScene.bgmRadio,\n            baseVolume: 1\n        },\n        {\n            active: false,\n            id: BgmId.WINGS,\n            sound: GameScene.bgmWings,\n            baseVolume: 0.75\n        },\n        {\n            active: false,\n            id: BgmId.AWAKE,\n            sound: GameScene.bgmAwake,\n            baseVolume: 0.75\n        },\n        {\n            active: false,\n            id: BgmId.ECSTASY,\n            sound: GameScene.bgmEcstasy,\n            baseVolume: 1\n        },\n        {\n            active: false,\n            id: BgmId.SHADOWGATE,\n            sound: GameScene.bgmShadowgate,\n            baseVolume: 1\n        }\n    ];\n\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    @asset(\"sounds/ending/swell.mp3\")\n    private static readonly swell: Sound;\n\n    @asset(\"sounds/gate/wrong.ogg\")\n    public static wrong: Sound;\n\n    private readonly petEndingTexts: PetEndingText[] = [\n        { label: \"The sensation lacks any kind of comparison.\", enter: 0.1 },\n        { label: \"All worldly matters seem so insignificant now.\", enter: 0.2 },\n        { label: \"Reality around me begins to fade.\", enter: 0.3 },\n        { label: \"Soon, I will be swept away in ecstasy.\", enter: 0.5 },\n        { label: \"Can I muster up the strength to break free?\", enter: 0.6 },\n        { label: \"If I don't stop now, there will be no going back.\", enter: 0.7 },\n        { label: \"Is this really how it all ends?\", enter: 0.8 },\n        { label: \"I regret nothing…\", enter: 0.9 },\n        { label: \"Farewell, cruel world…\", enter: 1 }\n    ];\n\n    private readonly windowEndingTexts: PetEndingText[] = [\n        { label: \"I wiped off the heavy dust layer on the glass.\", enter: 0.1 },\n        { label: \"The surface was as cold as the corpses around me.\", enter: 0.2 },\n        { label: \"It was hard to make out anything in the darkness on the other side…\", enter: 0.3 },\n        { label: \"\", enter: 0.4 },\n        { label: \"My legs gave away when I realized what I was looking at.\", enter: 0.5 },\n        { label: \"Nothing can compare to the dread I felt in this moment.\", enter: 0.6 },\n        { label: \"\", enter: 0.7 },\n        { label: \"I wished I could go back to the dream I faintly remember.\", enter: 0.8 },\n        { label: \"But there was nothing but an inevitable death waiting for me…\", enter: 0.9 },\n    ];\n\n    /* Total game time (time passed while game not paused) */\n    public gameTime = 0;\n\n    public gameObjects: GameObject[] = [];\n    public soundEmitters: SoundEmitter[] = [];\n    public pointsOfInterest: GameObjectInfo[] = [];\n    public triggerObjects: GameObjectInfo[] = [];\n    public boundObjects: GameObjectInfo[] = [];\n    public gateObjects: GameObjectInfo[] = [];\n    public paused = false;\n    public world!: World;\n    public camera!: Camera;\n    public player!: Player;\n    public stone!: Stone;\n    public stoneDisciple!: StoneDisciple;\n    public tree!: Tree;\n    public seed!: Seed;\n    public bone!: Bone;\n    public flameboy!: FlameBoy;\n    public wing!: Wing;\n    public bird!: Bird;\n    public shiba!: Shiba;\n    public powerShiba!: PowerShiba;\n    public mimic!: Mimic;\n    public shadowPresence!: ShadowPresence;\n    public caveman!: Caveman;\n    public particles = new Particles(this);\n    public fire!: Fire;\n    public exitPortal!: ExitPortal;\n    public fireFuryEndTime = 0;\n    public apocalypse = false;\n    public friendshipCutscene = false;\n    public pettingCutscene = false;\n    public windowCutscene = false;\n    public windowCutsceneTime = 0;\n    public pettingCutsceneTime = 0;\n    private pettingEndingTriggered = false;\n    private windowEndingTriggered = false;\n    private apocalypseFactor = 1;\n    private fireEffects: FireGfx[] = [];\n    private fireEmitter!: ParticleEmitter;\n    private frameCounter = 0;\n    private framesPerSecond = 0;\n    public showBounds = false;\n    private mapInfo!: MapInfo;\n    public dt: number = 0;\n    private fpsInterval: number | null = null;\n    private fadeToBlackEndTime = 0;\n    private fadeToBlackStartTime = 0;\n    private fadeToBlackFactor = 0;\n    private fadeToBlackDirection: FadeDirection = FadeDirection.FADE_OUT;\n    public readonly renderer = new Renderer(this);\n    public readonly mountainRiddle = new MountainRiddle();\n\n    public override setup(): void {\n        this.mapInfo = new MapInfo();\n        this.soundEmitters = this.mapInfo.getSounds().map(o => SoundEmitter.fromGameObjectInfo(this, o));\n        this.pointsOfInterest = this.mapInfo.getPointers();\n        this.triggerObjects = this.mapInfo.getTriggerObjects();\n        this.boundObjects = this.mapInfo.getBoundObjects();\n        this.gateObjects = this.mapInfo.getGateObjects();\n\n        this.gameTime = 0;\n        this.fadeToBlackEndTime = 0;\n        this.fadeToBlackStartTime = 0;\n        this.fadeToBlackFactor = 0;\n        this.apocalypse = false;\n        this.fireFuryEndTime = 0;\n        this.pettingCutscene = false;\n        this.pettingCutsceneTime = 0;\n        this.pettingEndingTriggered = false;\n        this.windowCutscene = false;\n        this.windowCutsceneTime = 0;\n        this.windowEndingTriggered = false;\n        Conversation.resetGlobals();\n        this.gameObjects = [\n            this.world = new World(this),\n            this.particles,\n            ...this.soundEmitters,\n            ...this.mapInfo.getEntities().map(entity => {\n                if (entity.name === \"player\") {\n                    entity = { ...entity, ...this.getPlayerStartingPos() };\n                }\n                return createEntity(entity.name, { scene: this, x: entity.x, y: entity.y, ...entity.properties });\n            })\n        ];\n\n        this.player = this.getGameObject(Player);\n        this.fire = this.getGameObject(Fire);\n        this.stone = this.getGameObject(Stone);\n        this.stoneDisciple = this.getGameObject(StoneDisciple);\n        this.tree = this.getGameObject(Tree);\n        this.flameboy = this.getGameObject(FlameBoy);\n        this.wing = this.getGameObject(Wing);\n        this.bird = this.getGameObject(Bird);\n        this.shiba = this.getGameObject(Shiba);\n        this.powerShiba = this.getGameObject(PowerShiba);\n        this.shadowPresence = this.getGameObject(ShadowPresence);\n        this.mimic = this.getGameObject(Mimic);\n        this.caveman = this.getGameObject(Caveman);\n        this.bone = this.getGameObject(Bone);\n        this.exitPortal = this.getGameObject(ExitPortal);\n\n        this.camera = new Camera(this, this.player);\n        this.camera.setBounds(this.player.getCurrentMapBounds());\n\n        this.fpsInterval = window.setInterval(() => {\n            this.framesPerSecond = this.frameCounter;\n            this.frameCounter = 0;\n        }, 1000);\n\n        this.game.campaign.begin(this);\n\n        if (this.game.campaign.isNewGamePlus) {\n            this.initNewGamePlusState();\n        }\n\n        this.playBackgroundTrack(BgmId.CAVE);\n\n        Conversation.setGlobal(\"devmode\", isDev() + \"\");\n        this.loadApocalypse();\n    }\n\n    private initNewGamePlusState(): void {\n        this.game.campaign.runAction(\"talkedtofire\");\n        this.game.campaign.runAction(\"gotFireQuest\");\n        this.fire.conversation?.setState(\"reminder\");\n        this.player.enableRunning(true);\n        this.player.enableDoubleJump(true);\n        this.game.campaign.runAction(\"talkedtotree\");\n        this.player.enableMultiJump(true);\n        this.tree.spawnSeed().bury();\n        this.tree.conversation?.setState(\"reminder\");\n        this.stone.dropInWater();\n    }\n\n    private getPlayerStartingPos(): { x: number, y: number } {\n        const spawns = this.pointsOfInterest.filter(i => i.name === \"player_spawn\");\n        const defaultSpawn = spawns.find(s => s.properties.newGamePlus !== true);\n        const newGamePlusSpawn = spawns.find(s => s.properties.newGamePlus);\n\n        if (this.game.campaign.isNewGamePlus) {\n            if (!newGamePlusSpawn) throw new Error(\"Missing new game plus spawn point for player\");\n            return { x: newGamePlusSpawn.x, y: newGamePlusSpawn.y };\n        } else {\n            if (!defaultSpawn) throw new Error(\"Missing default spawn point for player\");\n            return { x: defaultSpawn.x, y: defaultSpawn.y };\n        }\n    }\n\n    public override cleanup(): void {\n        if (this.fpsInterval != null) {\n            window.clearInterval(this.fpsInterval);\n        }\n    }\n\n    public addGameObject(object: GameObject): void {\n        // Insert new item right before the player so player is always in front\n        this.gameObjects.splice(this.gameObjects.indexOf(this.player) - 1, 0, object);\n    }\n\n    public removeGameObject(object: GameObject): void {\n        const index = this.gameObjects.indexOf(object);\n\n        if (index >= 0) {\n            this.gameObjects.splice(index, 1);\n        }\n    }\n\n\n    public setGateDisabled(gateId: string, disabled: boolean): void {\n        const gate = this.gateObjects.find(o => o.name === gateId);\n        if (!gate) {\n            console.error(`cannot set disabled status of gate '${gateId}' because it does not exist`);\n            return;\n        }\n        gate.properties.disabled = disabled;\n    }\n\n    public getBackgroundTrack(id: BgmId): BackgroundTrack {\n        const found = this.backgroundTracks.find(track => track.id === id);\n\n        if (!found) {\n            console.error(`Missing background track with ID '${id}'.`);\n\n            return this.backgroundTracks[0];\n        }\n\n        return found;\n    }\n\n    public fadeActiveBackgroundTrack(fade: number, inverse = false): void {\n        this.backgroundTracks.forEach(t => {\n            if (t.active) {\n                if (inverse) {\n                    t.sound.setVolume(t.baseVolume * (1 - fade));\n                } else {\n                    t.sound.setVolume(t.baseVolume * fade);\n                }\n            }\n        });\n    }\n\n    public setActiveBgmTrack(id: BgmId): void {\n        this.backgroundTracks.forEach(t => { t.active = false; });\n        const track = this.backgroundTracks.find(t => t.id === id);\n\n        if (track) {\n            track.active = true;\n\n            if (!track.sound.isPlaying()) {\n                track.sound.setLoop(true);\n                track.sound.play();\n            }\n        }\n    }\n\n    public fadeToBackgroundTrack(id: BgmId): void {\n        const track = this.getBackgroundTrack(id);\n        this.muteMusic();\n        this.backgroundTracks.forEach(t => { t.active = false; });\n        track.active = true;\n        track.sound.setVolume(track.baseVolume);\n\n        if (!track.sound.isPlaying()) {\n            track.sound.setLoop(true);\n            track.sound.play();\n        }\n    }\n\n    public playBackgroundTrack(id: BgmId): void {\n        const track = this.getBackgroundTrack(id);\n        this.backgroundTracks.forEach(t => t.sound.stop());\n        track.active = true;\n        track.sound.setVolume(track.baseVolume);\n        track.sound.setLoop(true);\n        track.sound.play();\n    }\n\n    private getGameObject<Args extends unknown[], GameObject>(type: new (...args: Args) => GameObject): GameObject {\n        for (const gameObject of this.gameObjects) {\n            if (gameObject instanceof type) {\n                return gameObject;\n            }\n        }\n\n        throw new Error(`Game object of type ${type.name} not found.`);\n    }\n\n    public override activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n        this.input.onButtonDown.connect(this.player.handleButtonDown, this.player);\n        this.input.onButtonUp.connect(this.player.handleButtonUp, this.player);\n        this.resume();\n    }\n\n    public override deactivate(): void {\n        this.pause();\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n        this.input.onButtonDown.disconnect(this.player.handleButtonDown, this.player);\n        this.input.onButtonUp.disconnect(this.player.handleButtonUp, this.player);\n    }\n\n    private async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (event.isAbort || event.isPause) {\n            if (this.player.getDance()) {\n                this.player.getDance()?.resetMusic();\n                this.player.cancelDance();\n            }\n        }\n\n        if (event.isPause) {\n            await this.scenes.pushScene(PauseScene, TitleScene);\n        }\n    }\n\n    public async gameOver(): Promise<void> {\n        GameScene.bgm1.stop();\n        GameScene.bgm2.stop();\n        GameScene.swell.setVolume(0.5);\n        GameScene.swell.play();\n        await sleep(2000);\n        await this.game.scenes.setScene(EndScene);\n    }\n\n    public override isActive(): boolean {\n        return !this.paused;\n    }\n\n    public override update(dt: number): void {\n        if (this.paused) {\n            dt = 0;\n        }\n\n        this.dt = dt;\n        this.gameTime += dt;\n\n        for (const obj of this.gameObjects) {\n            obj.update(dt);\n        }\n\n        this.camera.update(dt, this.gameTime);\n\n        if (this.fadeToBlackEndTime > this.gameTime) {\n            let fade = (this.gameTime - this.fadeToBlackStartTime) / (this.fadeToBlackEndTime - this.fadeToBlackStartTime);\n\n            if (this.fadeToBlackDirection === FadeDirection.FADE_IN) {\n                fade = 1 - fade;\n            }\n\n            this.fadeToBlackFactor = fade;\n        }\n\n        if (this.friendshipCutscene) {\n            this.updateFriendshipEndingCutscene(dt);\n        }\n\n        if (this.pettingCutscene) {\n            this.updatePettingEndingCutscene(dt);\n        }\n\n        if (this.windowCutscene) {\n            this.updateWindowEndingCutscene(dt);\n        }\n    }\n\n    public override draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        ctx.save();\n\n        // Center coordinate system\n        ctx.translate(this.game.width / 2, this.game.height / 2);\n\n        // Draw stuff\n        this.camera.applyTransform(ctx);\n\n        for (const obj of this.gameObjects) {\n            obj.draw(ctx, width, height);\n        }\n\n        // Add all particle emitters to rendering queue\n        this.particles.addEmittersToRenderingQueue();\n\n        // Add all debug bounds to rendering queue\n        this.addAllDebugBoundsToRenderingQueue();\n\n        // Apocalypse\n        if (this.fireFuryEndTime) {\n            this.camera.setCinematicBar(1);\n            // Fade out\n            const diff = this.fireFuryEndTime - this.gameTime;\n            const p = diff / 16;\n            const fade = valueCurves.trapeze(0.4).get(p);\n            this.drawFade(ctx, fade, \"black\");\n        }\n\n        if (this.apocalypse) {\n            this.drawApocalypseOverlay(ctx);\n        }\n\n        // Gate Fade\n        if (this.fadeToBlackFactor > 0) {\n            this.fadeActiveBackgroundTrack(this.fadeToBlackFactor, true);\n            this.drawFade(ctx, this.fadeToBlackFactor, \"black\");\n        }\n\n        // Cinematic bars\n        this.camera.addCinematicBarsToRenderer();\n\n        // Draw stuff from Rendering queue\n        this.renderer.draw(ctx);\n\n        ctx.restore();\n\n        // Display FPS counter\n        if (isDev()) {\n            GameScene.font.drawText(\n                ctx,\n                `${this.framesPerSecond} FPS`,\n                2, -1,\n                \"white\"\n            );\n        }\n\n        this.frameCounter++;\n    }\n\n    private addSingleDebugBoundsToRenderingQueue(bounds: Bounds, color: string): void {\n        this.renderer.add({\n            type: RenderingType.RECT,\n            layer: RenderingLayer.DEBUG,\n            position: {\n                x: bounds.x,\n                y: -bounds.y\n            },\n            lineColor: color,\n            dimension: {\n                width: bounds.width,\n                height: bounds.height\n            }\n        });\n    }\n\n    private addAllDebugBoundsToRenderingQueue(): void {\n        if (this.showBounds) {\n            for (const obj of this.gameObjects) {\n                if (obj instanceof Entity) {\n                    this.addSingleDebugBoundsToRenderingQueue(obj.getBounds(), \"red\");\n                }\n            }\n\n            // Draw trigger bounds for collisions\n            for (const obj of this.triggerObjects) {\n                const bounds = boundsFromMapObject(obj);\n                this.addSingleDebugBoundsToRenderingQueue(bounds, \"blue\");\n            }\n\n            for (const obj of this.boundObjects) {\n                const bounds = boundsFromMapObject(obj);\n                this.addSingleDebugBoundsToRenderingQueue(bounds, \"yellow\");\n            }\n\n            for (const obj of this.gateObjects) {\n                const bounds = boundsFromMapObject(obj);\n                this.addSingleDebugBoundsToRenderingQueue(bounds, \"green\");\n            }\n        }\n    }\n\n    public startApocalypseMusic(): void {\n        this.playBackgroundTrack(BgmId.INFERNO);\n    }\n\n    public startFriendshipMusic(): void {\n        this.playBackgroundTrack(BgmId.WINGS);\n    }\n\n    public muteMusic(): void {\n        this.backgroundTracks.forEach(t => t.sound.setVolume(0));\n    }\n\n    public resetMusicVolumes(): void {\n        this.backgroundTracks.forEach(t => {\n            if (t.active) t.sound.setVolume(t.baseVolume);\n        });\n    }\n\n    public async fadeToBlack(duration: number, direction: FadeDirection): Promise<void> {\n        this.fadeToBlackStartTime = this.gameTime;\n        this.fadeToBlackEndTime = this.gameTime + duration;\n        this.fadeToBlackDirection = direction;\n        await sleep(duration * 1000);\n        if (direction === FadeDirection.FADE_OUT) {\n            this.fadeToBlackFactor = 1;\n        } else {\n            this.fadeToBlackFactor = 0;\n        }\n    }\n\n    private updateApocalypse(): void {\n        this.fireEmitter.setPosition(this.player.x, this.player.y);\n        this.fireEffects.forEach(e => e.update());\n\n        if (timedRnd(this.dt, 0.8)) {\n            this.fireEmitter.emit();\n        }\n\n        this.fire.growthTarget = Math.max(2, 20 - 6 * this.gameObjects.filter(\n            o => o instanceof Cloud && o.isRaining()\n        ).length);\n\n        if (this.fire.intensity < 6) {\n            this.fire.intensity = Math.max(this.fire.intensity, 4);\n            this.apocalypseFactor = clamp((this.fire.intensity - 4) / 2, 0, 1);\n\n            if (this.apocalypseFactor <= 0.001) {\n                // End apocalypse\n                this.apocalypseFactor = 0;\n                this.apocalypse = false;\n                this.fire.state = FireState.PUT_OUT;\n\n                this.game.campaign.getQuest(QuestKey.A).trigger(QuestATrigger.BEAT_FIRE);\n                this.game.campaign.runAction(\"enable\", null, [ \"fire\", \"fire3\" ]);\n\n                // Music\n                GameScene.bgm2.stop();\n            }\n        }\n    }\n\n    private updateFriendshipEndingCutscene(dt: number): void {\n        this.camera.setCinematicBar(1);\n    }\n\n    private updateWindowEndingCutscene(dt: number): void {\n        this.windowCutsceneTime += dt;\n        if (!this.windowEndingTriggered && this.windowCutsceneTime > WINDOW_ENDING_CUTSCENE_DURATION + WINDOW_ENDING_FADE_DURATION) {\n            this.windowEndingTriggered = true;\n            this.game.campaign.getQuest(QuestKey.E).finish();\n            void this.gameOver();\n        }\n\n        this.windowEndingTexts.forEach((t, index) => {\n            if (this.windowCutsceneTime / WINDOW_ENDING_CUTSCENE_DURATION > t.enter) {\n                const fadeTime = 0.5;\n                const enterTime = WINDOW_ENDING_CUTSCENE_DURATION * t.enter;\n                const alpha = Math.max(0, Math.min(1, (this.windowCutsceneTime - enterTime) / fadeTime));\n                const measure = GameScene.font.measureText(t.label);\n                this.renderer.add({\n                    type: RenderingType.TEXT, layer: RenderingLayer.UI, textColor: \"white\", relativeToScreen: true, alpha,\n                    text: t.label, position: {\n                        x: (GAME_CANVAS_WIDTH / 2) - (measure.width / 2),\n                        y: measure.height * index + (index * 3) + 50\n                    }, asset: GameScene.font,\n                });\n            }\n        });\n    }\n\n    private updatePettingEndingCutscene(dt: number): void {\n        this.pettingCutsceneTime += dt;\n        if (!this.pettingEndingTriggered && this.pettingCutsceneTime > PETTING_ENDING_CUTSCENE_DURATION + PETTING_ENDING_FADE_DURATION) {\n            this.pettingEndingTriggered = true;\n            this.game.campaign.getQuest(QuestKey.D).finish();\n            void this.gameOver();\n        }\n\n        this.petEndingTexts.forEach((t, index) => {\n            if (this.pettingCutsceneTime / PETTING_ENDING_CUTSCENE_DURATION > t.enter) {\n                const fadeTime = 0.5;\n                const enterTime = PETTING_ENDING_CUTSCENE_DURATION * t.enter;\n                const yOffset = Math.pow((this.pettingCutsceneTime - enterTime) / 2, 2) * -1;\n                const alpha = Math.max(0, Math.min(1, (this.pettingCutsceneTime - enterTime) / fadeTime));\n                const measure = GameScene.font.measureText(t.label);\n                this.renderer.add({\n                    type: RenderingType.TEXT, layer: RenderingLayer.UI, textColor: \"white\", relativeToScreen: true, alpha,\n                    text: t.label, position: {\n                        x: (GAME_CANVAS_WIDTH / 2) - (measure.width / 2),\n                        //y: measure.height * index + (index * 3) + 20\n                        y: 100 + yOffset\n                    }, asset: GameScene.font,\n                });\n            }\n        });\n    }\n\n    private drawApocalypseOverlay(ctx: CanvasRenderingContext2D): void {\n        this.updateApocalypse();\n        this.camera.setCinematicBar(this.apocalypseFactor);\n\n        this.renderer.add({\n            type: RenderingType.RECT,\n            layer: RenderingLayer.FULLSCREEN_FX,\n            position: { x: 0, y: 0 },\n            fillColor: \"darkred\",\n            globalCompositeOperation: \"color\",\n            alpha: 0.7 * this.apocalypseFactor,\n            relativeToScreen: true,\n            dimension: { width: this.game.width, height: this.game.height }\n        });\n    }\n\n    private drawFade(ctx: CanvasRenderingContext2D, alpha: number, color = \"black\"): void {\n        this.renderer.add({\n            type: RenderingType.RECT,\n            layer: RenderingLayer.FULLSCREEN_FX,\n            position: { x: 0, y: 0 },\n            fillColor: color,\n            alpha,\n            relativeToScreen: true,\n            dimension: { width: this.game.width, height: this.game.height }\n        });\n    }\n\n    public loadApocalypse(): void {\n        this.fireEffects = [1, 2].map(num =>  new FireGfx(32, 24, true, 2));\n\n        this.fireEmitter = this.particles.createEmitter({\n            position: {x: this.player.x, y: this.player.y},\n            offset: () => ({x: rnd(-1, 1) * 300, y: 200}),\n            velocity: () => ({ x: 0, y: -25}),\n            color: () => rndItem(this.fireEffects).getImage(),\n            size: () => rnd(16, 32),\n            gravity: {x: -10, y: -30},\n            lifetime: () => rnd(5, 15),\n            alpha: 1,\n            breakFactor: 0.9,\n            alphaCurve: valueCurves.cos(0.2, 0.1),\n            update: particle => {\n                if (\n                    this.world.collidesWith(particle.x, particle.y - particle.size / 4)\n                ) {\n                    particle.vx = 0;\n                    particle.vy = 0;\n                }\n            }\n        });\n    }\n\n    public beginWindowEnding(): void {\n        this.windowCutscene = true;\n        this.player.setControllable(false);\n        this.fadeToBlackDirection = FadeDirection.FADE_OUT;\n        this.fadeToBlackStartTime = this.gameTime + WINDOW_ENDING_CUTSCENE_DURATION;\n        this.fadeToBlackEndTime = this.fadeToBlackStartTime + (WINDOW_ENDING_FADE_DURATION);\n        const target = this.pointsOfInterest.find(poi => poi.name === \"windowzoomtarget\");\n        if (target) {\n            void this.camera.focusOn(WINDOW_ENDING_CUTSCENE_DURATION + PETTING_ENDING_FADE_DURATION, target.x, this.camera.y, 1, 0, valueCurves.cubic);\n        }\n    }\n\n    public beginPetEnding(): void {\n        this.pettingCutscene = true;\n        this.player.startPettingDog();\n        this.shiba.startBeingPetted();\n        this.fadeToBlackDirection = FadeDirection.FADE_OUT;\n        this.fadeToBlackStartTime = this.gameTime + PETTING_ENDING_CUTSCENE_DURATION;\n        this.fadeToBlackEndTime = this.fadeToBlackStartTime + (PETTING_ENDING_FADE_DURATION);\n        this.playBackgroundTrack(BgmId.ECSTASY);\n    }\n\n    public cancelPatEnding(): void {\n        if (this.canCancelPatEnding()) {\n            this.pettingCutscene = false;\n            this.pettingCutsceneTime = 0;\n            this.player.stopPettingDog();\n            this.shiba.stopBeingPetted();\n            this.fadeToBlackEndTime = 0;\n            this.fadeToBlackStartTime = 0;\n            this.fadeToBlackFactor = 0;\n            this.playBackgroundTrack(BgmId.OVERWORLD);\n        }\n    }\n\n    private canCancelPatEnding(): boolean {\n        return this.pettingCutsceneTime < PETTING_ENDING_CUTSCENE_DURATION + PETTING_ENDING_FADE_DURATION;\n    }\n\n    public beginFriendshipEnding(): void {\n        this.friendshipCutscene = true;\n        this.shiba.setState(ShibaState.ON_MOUNTAIN);\n        this.shiba.nextState();\n\n        const playerTargetPos = this.pointsOfInterest.find(poi => poi.name === \"friendship_player_position\");\n\n        if (!playerTargetPos) {\n            throw new Error(\"cannot initiate friendship ending because some points of interest are missing\");\n        }\n\n        this.player.startAutoMove(playerTargetPos.x, true);\n        this.player.setControllable(false);\n    }\n\n    public async beginApocalypse(): Promise<void> {\n        this.apocalypse = true;\n        this.world.stopRain();\n\n        const bossPosition = this.pointsOfInterest.find(poi => poi.name === \"boss_spawn\");\n        const cloudPositions = this.pointsOfInterest.filter(poi => poi.name === \"bosscloud\");\n\n        if (bossPosition && cloudPositions.length > 0) {\n            cloudPositions.forEach(pos => {\n                const cloud = new Cloud({\n                    scene: this,\n                    x: pos.x,\n                    y: pos.y,\n                    canRain: true\n                });\n                this.gameObjects.push(cloud);\n            });\n\n            // Teleport player and fire to boss spawn position\n            this.player.x = bossPosition.x - 36;\n            this.player.y = bossPosition.y;\n\n            this.player.removePowerUps();\n            this.player.enableRainDance();\n            this.fire.x = bossPosition.x;\n            this.fire.y = bossPosition.y;\n\n            this.camera.setBounds(this.player.getCurrentMapBounds());\n\n            // Some helpful thoughts\n            await sleep(9000);\n            await this.player.think(\"This is not over…\", 2000);\n            await sleep(1000);\n            await this.player.think(\"There's still something I can do.\", 4000);\n        } else {\n            throw new Error(\"Cannot begin apocalypse because boss_spawn or bosscloud trigger is missing in map.\");\n        }\n    }\n\n    private togglePause(paused = !this.paused): void {\n        this.paused = paused;\n    }\n\n    public pause(): void {\n        this.muteMusic();\n        MenuList.pause.stop();\n        MenuList.pause.play();\n        this.togglePause(true);\n    }\n\n    public resume(): void {\n        this.resetMusicVolumes();\n        this.togglePause(false);\n    }\n\n    public setBgmVolume(volume: 0): void {\n        GameScene.bgm1.setVolume(volume);\n        GameScene.bgm2.setVolume(volume);\n    }\n}\n","import { DIALOG_FONT } from \"../../shared/constants\";\nimport { type Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { easeInExpo, easeOutExpo } from \"../easings\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { Direction } from \"../geom/Direction\";\nimport { Scene } from \"../Scene\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\nimport { SceneNode } from \"../scene/SceneNode\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { SlideTransition } from \"../transitions/SlideTransition\";\n\nexport enum Item { RUNNING, DOUBLEJUMP, MULTIJUMP, RAINDANCE, FRIENDSHIP }\n\nexport class GotItemScene extends Scene<FriendlyFire, Item> {\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    @asset(\"fonts/headline.font.json\")\n    private static readonly headlineFont: BitmapFont;\n\n    @asset(\"sounds/item/fanfare.mp3\")\n    private static readonly sound: Sound;\n\n    @asset([\n        \"sprites/powerup_running.aseprite.json\",\n        \"sprites/powerup_doublejump.aseprite.json\",\n        \"sprites/powerup_multijump.aseprite.json\",\n        \"sprites/powerup_raindance.aseprite.json\",\n        \"sprites/powerup_friendship.aseprite.json\"\n    ])\n    private static readonly itemImages: Aseprite[];\n\n    private readonly floatAmount = 3;\n    private readonly floatSpeed = 4;\n\n    private readonly titles = [\n        \"Fear of the Dark\",\n        \"Double-Jump Boots\",\n        \"Flying Wings Knock-off\",\n        \"Dancing Dave\",\n        \"Eternal Friendship\"\n    ];\n\n    private readonly subtitles = [\n        [\n            \"Run and never look back\",\n            \"An exceptional ally\",\n            \"There is something in that dark corner\"\n        ],\n        [\n            \"Not suitable for step dancing\",\n            \"An all-time classic\",\n            \"Still in mint condition\",\n            \"Even work without wearing them\",\n            \"Why would a tree have those?\"\n        ],\n        [\n            \"Birds love it!\",\n            \"Feels like cheating\",\n            \"Free stuff is the best\",\n            \"M-m-m-multi-jump\"\n        ],\n        [\n            \"Like tears in the rain\"\n        ],\n        [\n            \"Dogs are the best!\",\n            \"What might this be good for?\",\n            \"Powered by unconditional love\",\n            \"Nothing can stop us!\"\n        ]\n    ];\n\n    public override setup(item: Item): void {\n        GotItemScene.sound.setVolume(0.7);\n        GotItemScene.sound.play();\n\n        this.inTransition = new SlideTransition({ duration: .5, direction: \"bottom\", easing: easeOutExpo });\n        this.outTransition = new SlideTransition({ duration: .5, direction: \"bottom\", easing: easeInExpo });\n\n        const subtitle = \"“\" + this.subtitles[item][Math.floor(Math.random() * this.subtitles[item].length)] + \"”\";\n        const image = GotItemScene.itemImages[item];\n\n        // The powerup name\n        new TextNode({\n            font: GotItemScene.headlineFont,\n            text: this.titles[item],\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) + 17,\n            color: \"white\"\n        }).appendTo(this.rootNode);\n\n        // The powerup subtitle\n        new TextNode({\n            font: GotItemScene.font,\n            text: subtitle,\n            color: \"white\",\n            x: this.game.width >> 1,\n            y: (this.game.height >> 1) + 36\n        }).appendTo(this.rootNode);\n\n        // The power up image bobbling up and down\n        new SceneNode({\n            x: this.game.width >> 1,\n            y: this.game.height >> 1\n        }).animate({\n            animator: node => node.transform(m => m.setScale(2).translateY(Math.sin(Date.now() / 1000\n                * this.floatSpeed) * this.floatAmount)),\n            duration: Infinity\n        }).appendChild(new AsepriteNode({ aseprite: image, tag: \"idle\", anchor: Direction.BOTTOM })\n        ).appendTo(this.rootNode);\n    }\n\n    public override activate(): void {\n        // Close this scene after 4 seconds\n        setTimeout(() => this.scenes.popScene(), 4000);\n    }\n\n    public override cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public override draw(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n        ctx.save();\n        ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n        ctx.fillRect(0, (height >> 1) - 1, width, 50);\n        ctx.restore();\n        super.draw(ctx, width, height);\n    }\n}\n","import { type FriendlyFire } from \"../FriendlyFire\";\nimport { Scene } from \"../Scene\";\nimport { ProgressBarNode } from \"../scene/ProgressBarNode\";\nimport { TitleScene } from \"./TitleScene\";\n\nexport class LoadingScene extends Scene<FriendlyFire> {\n    private progressBar!: ProgressBarNode;\n\n    public override setup(): void {\n        this.progressBar = new ProgressBarNode({\n            x: this.game.width >> 1,\n            y: this.game.height >> 1\n        }).appendTo(this.rootNode);\n    }\n\n    public override cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public override activate(): void {\n        void this.loadAssets();\n    }\n\n    private async loadAssets(): Promise<void> {\n        await this.game.assets.load(this.updateProgress.bind(this));\n        await this.game.scenes.setScene(TitleScene);\n    }\n\n    private updateProgress(total: number, loaded: number): void {\n        if (loaded < total) {\n            this.progressBar.setProgress(loaded / total);\n        } else {\n            this.progressBar.remove();\n        }\n    }\n}\n","import { DIALOG_FONT } from \"../../shared/constants\";\nimport { asset } from \"../Assets\";\nimport { AudioManager } from \"../audio/AudioManager\";\nimport { SoundChannel } from \"../audio/SoundChannel\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { type DisplayManager, RenderMode } from \"../DisplayManager\";\nimport { easeOutCubic } from \"../easings\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { Direction } from \"../geom/Direction\";\nimport { type ControllerEvent } from \"../input/ControllerEvent\";\nimport { ControllerAnimationTags } from \"../input/ControllerFamily\";\nimport { MenuItem, MenuList, SelectMenuItem, SliderMenuItem } from \"../Menu\";\nimport { Scene } from \"../Scene\";\nimport { ControlTooltipNode } from \"../scene/ControlTooltipNode\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { SlideTransition } from \"../transitions/SlideTransition\";\nimport { isDev } from \"../util\";\n\nenum MenuItemKey {\n    FULLSCREEN = \"fullscreen\",\n    RENDER_MODE = \"render-mode\",\n    SFX_SLIDER = \"sfxSlider\",\n    MUSIC_SLIDER = \"musicSlider\",\n}\n\n\nexport class OptionsScene extends Scene<FriendlyFire> {\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    @asset(\"fonts/credits.font.json\")\n    private static readonly headlineFont: BitmapFont;\n\n    @asset(\"images/credits.png\")\n    private static readonly panelImage: HTMLImageElement;\n\n    private menu!: MenuList;\n\n    #audioManager!: AudioManager;\n    public get audioManager(): AudioManager {\n        return this.#audioManager;\n    }\n\n    public override get urlFragment(): string {\n        return \"#options\";\n    }\n\n    public override setup(): void {\n        const menuItemX = 12;\n        const menuItemY = 20;\n        this.setBackgroundStyle(\"rgba(0, 0, 0, 0.8)\");\n        this.zIndex = 2;\n        this.inTransition = new SlideTransition({ duration: 0.5, direction: \"top\", easing: easeOutCubic });\n        this.outTransition = new SlideTransition({ duration: 0.25 });\n\n        this.#audioManager = AudioManager.getInstance();\n\n        const panel = new ImageNode({\n            image: OptionsScene.panelImage,\n            x: this.game.width / 2,\n            y: this.game.height / 2 - 16,\n            childAnchor: Direction.TOP_LEFT\n        }).appendChild(\n            new TextNode({\n                font: OptionsScene.headlineFont,\n                text: \"OPTIONS\",\n                anchor: Direction.BOTTOM_LEFT,\n                y: -5,\n                color: \"white\"\n            })\n        ).appendChild(\n            new ControlTooltipNode({\n                label: \"Change\",\n                control: ControllerAnimationTags.CONFIRM,\n                anchor: Direction.TOP_LEFT,\n                y: OptionsScene.panelImage.height + 2\n            })\n        ).appendChild(\n            new ControlTooltipNode({\n                label: \"Back\",\n                control: ControllerAnimationTags.BACK,\n                anchor: Direction.TOP_LEFT,\n                y: OptionsScene.panelImage.height + 18\n            })\n        ).appendTo(this.rootNode);\n\n        this.menu = new MenuList().setItems(\n            new MenuItem(\n                MenuItemKey.FULLSCREEN, \"Toggle Fullscreen\", OptionsScene.font, \"black\", menuItemX, menuItemY\n            ),\n            new SelectMenuItem(\n                {\n                    id: MenuItemKey.RENDER_MODE,\n                    label: \"Render Mode\",\n                    font: OptionsScene.font,\n                    color: \"black\",\n                    x: menuItemX,\n                    y: menuItemY + 20,\n                    enabled: true,\n                    initialValue: this.game.displayManager.getRenderMode(),\n                    values: Object.values(RenderMode).filter(v => v !== RenderMode.NATIVE || isDev()),\n                    valueLabels: {\n                        [ RenderMode.PIXEL_IMPERFECT ]: \"Pixel Imperfect\",\n                        [ RenderMode.PIXEL_PERFECT ]: \"Pixel Perfect\",\n                        [ RenderMode.NATIVE ]: \"Native (Experimental)\",\n                    },\n                    actionCallback: this.handleRenderModeChange,\n                    data: { displayManager: this.game.displayManager }\n                }\n            ),\n            new SliderMenuItem(\n                {\n                    id: MenuItemKey.SFX_SLIDER,\n                    label: \"SFX Volume\",\n                    font: OptionsScene.font,\n                    color: \"black\",\n                    x: menuItemX,\n                    y: menuItemY + 40,\n                    enabled: true,\n                    initialValue: Math.round(this.audioManager.sfxGain * 100),\n                    minValue: 0,\n                    maxValue: 100,\n                    increment: 10,\n                    leftActionCallback: this.handleAudioSliderChange,\n                    rightActionCallback: this.handleAudioSliderChange,\n                    data: { channel: SoundChannel.SFX, audioManager: this.#audioManager }\n                }\n            ),\n            new SliderMenuItem(\n                {\n                    id: MenuItemKey.MUSIC_SLIDER,\n                    label: \"Music Volume\",\n                    font: OptionsScene.font,\n                    color: \"black\",\n                    x: menuItemX,\n                    y: menuItemY + 60,\n                    enabled: true,\n                    initialValue: Math.round(this.audioManager.musicGain * 100),\n                    minValue: 0,\n                    maxValue: 100,\n                    increment: 10,\n                    leftActionCallback: this.handleAudioSliderChange,\n                    rightActionCallback: this.handleAudioSliderChange,\n                    data: { channel: SoundChannel.MUSIC, audioManager: this.#audioManager }\n                }\n            )\n        );\n        this.menu.appendTo(panel);\n    }\n\n    private handleRenderModeChange(newValue: RenderMode, data: { displayManager: DisplayManager }): void {\n        data.displayManager.setRenderMode(newValue);\n    }\n\n    private handleAudioSliderChange(newValue: number, data: { channel: SoundChannel, audioManager: AudioManager }): void {\n        newValue = newValue / 100;\n        if (data.channel === SoundChannel.MUSIC) {\n            data.audioManager.musicGain = newValue;\n        } else if (data.channel === SoundChannel.SFX) {\n            data.audioManager.sfxGain = newValue;\n        } else {\n            throw new Error(`Unknown sound channel: ${data.channel as string}.`);\n        }\n    }\n\n    public async handleMenuAction(buttonId: string): Promise<void> {\n        if (buttonId === MenuItemKey.FULLSCREEN) {\n            await this.toggleFullscreen();\n        }\n    }\n\n    private async toggleFullscreen(): Promise<boolean> {\n        const enabled = !(await this.game.displayManager.isFullscreenEnabled());\n        await this.game.displayManager.setFullscreenEnabled(enabled);\n        return enabled;\n    }\n\n    public override cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public override activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n        this.menu.onActivated.connect(this.handleMenuAction, this);\n        // this.menu.onLeftAction.connect(this.handleMenuLeftAction, this);\n        // this.menu.onRightAction.connect(this.handleMenuRightAction, this);\n    }\n\n    public override deactivate(): void {\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n        this.menu.onActivated.disconnect(this.handleMenuAction, this);\n        // this.menu.onLeftAction.disconnect(this.handleMenuLeftAction, this);\n        // this.menu.onRightAction.disconnect(this.handleMenuRightAction, this);\n    }\n\n    private async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (event.isAbort) {\n            await this.scenes.popScene();\n        } else if (event.isConfirm) {\n            this.menu.executeAction();\n        } else if (event.isMenuUp) {\n            this.menu.prev();\n        } else if (event.isMenuDown) {\n            this.menu.next();\n        } else if (event.isMenuRight) {\n            this.menu.executeRightAction();\n        } else if (event.isMenuLeft) {\n            this.menu.executeLeftAction();\n        }\n    }\n}\n","import { DIALOG_FONT } from \"../../shared/constants\";\nimport { type AppInfoJSON } from \"../AppInfo\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { easeOutBounce } from \"../easings\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { Direction } from \"../geom/Direction\";\nimport { type ControllerEvent } from \"../input/ControllerEvent\";\nimport { MenuItem, MenuList } from \"../Menu\";\nimport { Scene } from \"../Scene\";\nimport { TextNode } from \"../scene/TextNode\";\nimport { SlideTransition } from \"../transitions/SlideTransition\";\nimport { isDev } from \"../util\";\nimport { ControlsScene } from \"./ControlsScene\";\nimport { OptionsScene } from \"./OptionsScene\";\nimport { TitleScene } from \"./TitleScene\";\n\nenum MenuItemKey {\n    RESUME = \"resume\",\n    CONTROLS = \"controls\",\n    OPTIONS = \"options\",\n    EXIT = \"exit\"\n}\n\nexport class PauseScene extends Scene<FriendlyFire> {\n    @asset(\"music/pause.ogg\")\n    private static readonly music: Sound;\n\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    @asset(\"fonts/headline.font.json\")\n    private static readonly headlineFont: BitmapFont;\n\n    @asset(\"appinfo.json\")\n    private static readonly appInfo: AppInfoJSON;\n\n    private menu!: MenuList;\n\n    public override cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public override get urlFragment(): string {\n        return \"#pause\";\n    }\n\n    public override setup(): void {\n        this.setBackgroundStyle(\"rgba(0, 0, 0, 0.8)\");\n\n        this.inTransition = new SlideTransition({ duration: 1, direction: \"top\", easing: easeOutBounce });\n        this.outTransition = new SlideTransition({ duration: 0.25 });\n\n        PauseScene.music.setLoop(true);\n        PauseScene.music.setVolume(0.5);\n        PauseScene.music.play();\n\n        new TextNode({\n            font: PauseScene.headlineFont,\n            text: \"GAME PAUSED\",\n            color: \"white\",\n            anchor: Direction.TOP_LEFT,\n            x: 75,\n            y: 100\n        }).appendTo(this.rootNode);\n\n        new TextNode({\n            font: PauseScene.font,\n            text: isDev() ? \"DEVELOPMENT VERSION\" : PauseScene.appInfo.version,\n            color: \"white\",\n            anchor: Direction.BOTTOM_RIGHT,\n            x: this.game.width - 7,\n            y: this.game.height - 4,\n            opacity: 0.6\n        }).appendTo(this.rootNode);\n\n        this.menu = new MenuList().appendTo(this.rootNode).setItems(\n            new MenuItem(MenuItemKey.RESUME, \"Resume\", PauseScene.font, \"white\", 75, 130),\n            new MenuItem(MenuItemKey.CONTROLS, \"Controls\", PauseScene.font, \"white\", 75, 145),\n            new MenuItem(MenuItemKey.OPTIONS, \"Options\", PauseScene.font, \"white\", 75, 160),\n            new MenuItem(MenuItemKey.EXIT, \"Back to title\", PauseScene.font, \"white\", 75, 175),\n        );\n    }\n\n    public override activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n        this.menu.onActivated.connect(this.handleMenuAction, this);\n    }\n\n    public override deactivate(): void {\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n        this.menu.onActivated.disconnect(this.handleMenuAction, this);\n    }\n\n    public async handleMenuAction(buttonId: string): Promise<void> {\n        switch (buttonId) {\n            case MenuItemKey.RESUME:\n                PauseScene.music.stop();\n                await this.scenes.popScene();\n                break;\n            case MenuItemKey.CONTROLS:\n                await this.game.scenes.pushScene(ControlsScene);\n                break;\n            case MenuItemKey.OPTIONS:\n                await this.game.scenes.pushScene(OptionsScene);\n                break;\n            case MenuItemKey.EXIT:\n                PauseScene.music.stop();\n                await this.game.scenes.popScene({ noTransition: true });\n                await this.game.scenes.setScene(TitleScene);\n                break;\n        }\n    }\n\n    private async handleButtonDown(event: ControllerEvent): Promise<void> {\n        if (event.isAbort || event.isPause) {\n            PauseScene.music.stop();\n            await this.scenes.popScene();\n        } else if (event.isConfirm) {\n            this.menu.executeAction();\n        } else if (event.isMenuUp) {\n            this.menu.prev();\n        } else if (event.isMenuDown) {\n            this.menu.next();\n        }\n    }\n}\n","import { DIALOG_FONT } from \"../../shared/constants\";\nimport { Aseprite } from \"../Aseprite\";\nimport { asset } from \"../Assets\";\nimport { Sound } from \"../audio/Sound\";\nimport { BitmapFont } from \"../BitmapFont\";\nimport { easeInSine, easeOutQuad } from \"../easings\";\nimport { type FriendlyFire } from \"../FriendlyFire\";\nimport { Direction } from \"../geom/Direction\";\nimport { GlobalState } from \"../GlobalState\";\nimport { type ControllerEvent } from \"../input/ControllerEvent\";\nimport { MenuAlignment, MenuItem, MenuList } from \"../Menu\";\nimport { QuestKey } from \"../Quests\";\nimport { Scene } from \"../Scene\";\nimport { AsepriteNode } from \"../scene/AsepriteNode\";\nimport { ImageNode } from \"../scene/ImageNode\";\nimport { SceneNode } from \"../scene/SceneNode\";\nimport { CurtainTransition } from \"../transitions/CurtainTransition\";\nimport { FadeTransition } from \"../transitions/FadeTransition\";\nimport { isElectron } from \"../util\";\nimport { CharacterSelectionScene } from \"./CharacterSelectionScene\";\nimport { ControlsScene } from \"./ControlsScene\";\nimport { CreditsScene } from \"./CreditsScene\";\nimport { OptionsScene } from \"./OptionsScene\";\n\ntype MainMenuParams = {\n    label: string;\n    electronOnly?: boolean;\n};\n\nenum MenuItemKey {\n    START = \"start\",\n    CONTROLS = \"controls\",\n    OPTIONS = \"options\",\n    CREDITS = \"credits\",\n    EXIT = \"exit\"\n}\n\nconst MenuLabels: Record<MenuItemKey, MainMenuParams> = {\n    [MenuItemKey.START]: { label: \"Start Game\" },\n    [MenuItemKey.CONTROLS]: { label: \"Controls\" },\n    [MenuItemKey.OPTIONS]: { label: \"Options\" },\n    [MenuItemKey.CREDITS]: { label: \"Credits\" },\n    [MenuItemKey.EXIT]: { label: \"Exit Game\", electronOnly: true },\n};\n\nexport class TitleScene extends Scene<FriendlyFire> {\n    @asset(\"music/cerulean-expanse.ogg\")\n    public static music: Sound;\n\n    @asset(\"sprites/title/layer1.aseprite.json\")\n    private static readonly titleLayer1: Aseprite;\n\n    @asset(\"sprites/title/layer2.aseprite.json\")\n    private static readonly titleLayer2: Aseprite;\n\n    @asset(\"sprites/title/island1.aseprite.json\")\n    private static readonly titleIsland1: Aseprite;\n\n    @asset(\"sprites/title/island2.aseprite.json\")\n    private static readonly titleIsland2: Aseprite;\n\n    @asset(\"sprites/title/layer3.aseprite.json\")\n    private static readonly titleLayer3: Aseprite;\n\n    @asset(\"sprites/title/person.aseprite.json\")\n    private static readonly person: Aseprite;\n\n    @asset(\"images/logo.png\")\n    private static readonly logoImage: HTMLImageElement;\n\n    @asset(\"sprites/flameicon.aseprite.json\")\n    private static readonly flameicon: Aseprite;\n\n    @asset(\"sprites/ending_cards.aseprite.json\")\n    private static readonly endingCards: Aseprite;\n\n    @asset(DIALOG_FONT)\n    private static readonly font: BitmapFont;\n\n    private menu!: MenuList;\n\n    private readonly animationDuration = 3;\n\n    private readonly titleBasePosition = {\n        x: this.game.width / 2 - TitleScene.logoImage.width / 2,\n        y: 60\n    };\n\n    private readonly titleLayer1Position = { x: 0, y: 70 };\n    private readonly titleLayer2Position = { x: 0, y: 163 };\n    private readonly titleLayer3Position = { x: 0, y: -125 };\n\n    private readonly menuBasePosition = {\n        x: this.game.width / 2,\n        y: 180,\n        gap: 15,\n    };\n\n    public override get urlFragment(): string {\n        return \"#title\";\n    }\n\n    public override cleanup(): void {\n        this.rootNode.clear();\n    }\n\n    public override setup(): void {\n        this.zIndex = 1;\n        this.inTransition = new FadeTransition();\n        this.outTransition = new CurtainTransition({ easing: easeInSine });\n\n        // The sky background layer\n        new AsepriteNode({\n            id: \"titleLayer3\",\n            aseprite: TitleScene.titleLayer3,\n            tag: \"idle\",\n            x: this.titleLayer3Position.x,\n            y: this.titleLayer3Position.y,\n            anchor: Direction.TOP_LEFT\n        }).animate({\n            animator: (node, value) => node.setY(this.titleLayer3Position.y + (1 - value) * 100),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The background layer with the sea animated to move in from the bottom\n        new AsepriteNode({\n            id: \"titleLayer2\",\n            aseprite: TitleScene.titleLayer2,\n            tag: \"idle\",\n            x: this.titleLayer2Position.x,\n            y: this.titleLayer2Position.y,\n            anchor: Direction.TOP_LEFT\n        }).animate({\n            animator: (node, value) => node.setY(this.titleLayer2Position.y + (1 - value) * 200),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The two floating islands in the background animated to moving in from the bottom\n        new SceneNode().appendChild(\n            new AsepriteNode({\n                id: \"titleIsland1\",\n                aseprite: TitleScene.titleIsland1,\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: 90,\n                y: 168\n            })\n        ).appendChild(\n            new AsepriteNode({\n                id: \"titleIsland2\",\n                aseprite: TitleScene.titleIsland2,\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: 323,\n                y: 178\n            })\n        ).animate({\n            animator: (node, value) => node.setY((1 - value) * 250),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The girl standing on the ground animated to move in from the bottom\n        new AsepriteNode({\n            id: \"person\",\n            aseprite: TitleScene.person,\n            tag: \"idle\",\n            x: 22,\n            y: 155,\n            anchor: Direction.TOP_LEFT\n        }).animate({\n            animator: (node, value) => node.setY(155 + (1 - value) * 330),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The ground layer animated to move in from the bottom\n        new AsepriteNode({\n            id: \"titleLayer1\",\n            aseprite: TitleScene.titleLayer1,\n            tag: \"idle\",\n            x: this.titleLayer1Position.x,\n            y: this.titleLayer1Position.y,\n            anchor: Direction.TOP_LEFT\n        }).animate({\n            animator: (node, value) => node.setY(this.titleLayer1Position.y + (1 - value) * 300),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        // The title text with flame icon fading in and moving to the top\n        new SceneNode({\n            opacity: 0,\n            x: this.titleBasePosition.x,\n            y: this.titleBasePosition.y\n        }).appendChild(\n            new AsepriteNode({\n                id: \"flameicon\",\n                aseprite: TitleScene.flameicon,\n                tag: \"idle\",\n                anchor: Direction.TOP_LEFT,\n                x: 147,\n                y: -10\n            })\n        ).appendChild(\n            new ImageNode({\n                id: \"logoImage\",\n                image: TitleScene.logoImage,\n                anchor: Direction.TOP_LEFT\n            })\n        ).animate({\n            animator: (node, value) => node.setY(this.titleBasePosition.y - 10 + 150 * (1 - value)),\n            duration: this.animationDuration,\n            easing: easeOutQuad\n        }).animate({\n            animator: (node, value) => node.setOpacity(value),\n            delay: this.animationDuration / 2,\n            duration: this.animationDuration / 2,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        this.menu = new MenuList({\n            id: \"menu\",\n            opacity: 0,\n            align: MenuAlignment.CENTER\n        }).animate({\n            animator: (node, value) => node.setOpacity(value),\n            delay: 2.5,\n            duration: 0.5,\n            easing: easeOutQuad\n        }).appendTo(this.rootNode);\n\n        if (GlobalState.getHasBeatenGame()) {\n            new SceneNode({\n                opacity: 0,\n                x: 118,\n                y: 108,\n            })\n            .appendChild(this.addEndingCard(0, QuestKey.A))\n            .appendChild(this.addEndingCard(1, QuestKey.B))\n            .appendChild(this.addEndingCard(2, QuestKey.C))\n            .appendChild(this.addEndingCard(3, QuestKey.D))\n            .appendChild(this.addEndingCard(4, QuestKey.E))\n            .animate({\n                animator: (node, value) => node.setOpacity(value),\n                delay: 2.5,\n                duration: 0.5,\n                easing: easeOutQuad\n            }).appendTo(this.rootNode);\n        }\n\n        Object.values(MenuItemKey).forEach((key, index) => {\n            if (MenuLabels[key].electronOnly !== true || (isElectron() || window.opener != null)) {\n                this.menu.addItems(\n                    new MenuItem(\n                        key,\n                        MenuLabels[key].label,\n                        TitleScene.font,\n                        \"white\",\n                        this.menuBasePosition.x, this.menuBasePosition.y + this.menuBasePosition.gap * index\n                    )\n                );\n            }\n        });\n    }\n\n    public animationIsDone(): boolean {\n        return !this.rootNode.hasAnimations();\n    }\n\n    public finishAnimation(): void {\n        this.rootNode.finishAnimations();\n    }\n\n    public addEndingCard(index: number, key: QuestKey): AsepriteNode {\n        let tag = \"\";\n        switch (key) {\n            case QuestKey.A: tag = \"a_\"; break;\n            case QuestKey.B: tag = \"b_\"; break;\n            case QuestKey.C: tag = \"c_\"; break;\n            case QuestKey.D: tag = \"d_\"; break;\n            case QuestKey.E: tag = \"e_\"; break;\n        }\n\n        const isAchieved = GlobalState.getAchievedEndings().includes(key);\n        tag += isAchieved ? \"on\" : \"off\";\n\n        return new AsepriteNode({\n            id: `endingCard_${key}`,\n            aseprite: TitleScene.endingCards,\n            tag,\n            anchor: Direction.TOP_LEFT,\n            x: index * 40 + (index * 10),\n            y: 0\n        });\n    }\n\n    public async handleMenuAction(buttonId: string): Promise<void> {\n        switch (buttonId) {\n            case MenuItemKey.START:\n                // this.stopMusicTrack();\n                await this.game.scenes.pushScene(CharacterSelectionScene);\n                // this.game.scenes.setScene(GameScene);\n                break;\n            case MenuItemKey.CONTROLS:\n                await this.game.scenes.pushScene(ControlsScene);\n                break;\n            case MenuItemKey.OPTIONS:\n                await this.game.scenes.pushScene(OptionsScene);\n                break;\n            case MenuItemKey.CREDITS:\n                this.stopMusicTrack();\n                await this.game.scenes.pushScene(CreditsScene);\n                break;\n            case MenuItemKey.EXIT:\n                window.close();\n                break;\n        }\n    }\n\n    public override activate(): void {\n        this.input.onButtonDown.connect(this.handleButtonDown, this);\n        this.menu.onActivated.connect(this.handleMenuAction, this);\n        this.playMusicTrack();\n    }\n\n    public override deactivate(): void {\n        this.input.onButtonDown.disconnect(this.handleButtonDown, this);\n        this.menu.onActivated.disconnect(this.handleMenuAction, this);\n    }\n\n    private handleButtonDown(event: ControllerEvent): void {\n        if (this.animationIsDone()) {\n            if (event.isConfirm) {\n                this.menu.executeAction();\n            } else if (event.isMenuUp) {\n                this.menu.prev();\n            } else if (event.isMenuDown) {\n                this.menu.next();\n            }\n        } else {\n            if (event.isConfirm) {\n                this.finishAnimation();\n            }\n        }\n\n    }\n\n    private stopMusicTrack(): void {\n        TitleScene.music.stop();\n    }\n\n    private playMusicTrack(): void {\n        TitleScene.music.setLoop(true);\n        TitleScene.music.setVolume(0.30);\n        TitleScene.music.play();\n    }\n}\n","import { type SteamworksApi as ISteamworksApi } from \"../../shared/SteamworksApi\";\n\nexport type SteamworksApi = ISteamworksApi;\nexport namespace SteamworksApi {\n    export const getInstance = (): ISteamworksApi | null => window.steamworks ?? null;\n}\n","import { Transition, type TransitionOptions } from \"../Transition\";\n\nexport type CurtainDirection = \"horizontal\" | \"vertical\";\n\nexport interface CurtainTransitionOptions extends TransitionOptions {\n    direction?: CurtainDirection;\n}\n\nexport class CurtainTransition extends Transition {\n    private readonly direction: CurtainDirection;\n\n    public constructor({ direction = \"horizontal\", ...options }: CurtainTransitionOptions) {\n        super(options);\n\n        this.direction = direction;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, draw: () => void, width: number, height: number): void {\n        const value = this.valueOf();\n        if (this.direction === \"horizontal\") {\n            // Draw left half\n            ctx.save();\n            ctx.translate(Math.round(-width * value / 2), 0);\n            ctx.beginPath();\n            ctx.rect(0, 0, Math.round(width / 2), height);\n            ctx.clip();\n            draw();\n            ctx.restore();\n\n            // Draw right half\n            ctx.save();\n            ctx.translate(Math.round(width * value / 2), 0);\n            ctx.beginPath();\n            ctx.rect(Math.round(width / 2), 0, Math.round(width), height);\n            ctx.clip();\n            draw();\n            ctx.restore();\n        } else if (this.direction === \"vertical\") {\n            // Draw upper half\n            ctx.save();\n            ctx.translate(0, Math.round(-height * value / 2));\n            ctx.beginPath();\n            ctx.rect(0, 0, width, Math.round(height / 2));\n            ctx.clip();\n            draw();\n            ctx.restore();\n\n            // Draw lower half\n            ctx.save();\n            ctx.translate(0, Math.round(height * value / 2));\n            ctx.beginPath();\n            ctx.rect(0, Math.round(height / 2), width, Math.round(height / 2));\n            ctx.clip();\n            draw();\n            ctx.restore();\n        }\n    }\n}\n","import { Transition } from \"../Transition\";\n\nexport class FadeTransition extends Transition {\n    public draw(ctx: CanvasRenderingContext2D, draw: () => void): void {\n        ctx.globalAlpha = 1 - this.valueOf();\n        draw();\n    }\n}\n","import { Transition, type TransitionOptions } from \"../Transition\";\n\nexport type SlideDirection = \"top\" | \"left\" | \"bottom\" | \"right\";\n\nexport interface SlideTransitionOptions extends TransitionOptions {\n    direction?: SlideDirection;\n}\n\nexport class SlideTransition extends Transition {\n    private readonly direction: SlideDirection;\n\n    public constructor({ direction = \"top\", ...options }: SlideTransitionOptions = {}) {\n        super(options);\n        this.direction = direction;\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, draw: () => void, width: number, height: number): void {\n        const value = this.valueOf();\n        if (this.direction === \"top\") {\n            ctx.translate(0, -height * value);\n        } else if (this.direction === \"bottom\") {\n            ctx.translate(0, height * value);\n        } else if (this.direction === \"left\") {\n            ctx.translate(-width * value, 0);\n        } else if (this.direction === \"right\") {\n            ctx.translate(width * value, 0);\n        }\n\n        draw();\n    }\n}\n","import { METER_PER_PIXEL, SOUND_INTENSITY_MULTIPLIER } from \"../shared/constants\";\nimport { type Bounds } from \"./Entity\";\nimport { type GameObjectInfo } from \"./MapInfo\";\n\nexport function rnd(minOrMax = 1, max?: number): number {\n    if (max != null) {\n        return minOrMax + Math.random() * (max - minOrMax);\n    } else {\n        return Math.random() * minOrMax;\n    }\n}\n\nexport function rndInt(minOrMax: number, max?: number): number {\n    if (max != null) {\n        return Math.floor(minOrMax + Math.random() * (max - minOrMax));\n    } else {\n        return Math.floor(Math.random() * minOrMax);\n    }\n}\n\nexport function rndItem<T>(array: T[]): T {\n    const index = Math.floor(Math.random() * array.length);\n\n    return array[index];\n}\n\nexport function timedRnd(dt: number, averageDelay: number): number {\n    let count = 0;\n    let chance = dt - Math.random() * averageDelay;\n\n    while (chance > 0) {\n        count++;\n        chance -= Math.random() * averageDelay;\n    }\n\n    return count;\n}\n\nexport function clamp(v: number, min: number, max: number): number {\n    return v < min ? min : v > max ? max : v;\n}\n\nexport function orientPow(v: number, exp: number): number {\n    if (v < 0) {\n        return -((-v) ** exp);\n    } else {\n        return v ** exp;\n    }\n}\n\nconst timeDelta = Date.now() - performance.now();\n\nexport function now(): number {\n    return performance.now() + timeDelta;\n}\n\nexport function shiftValue(v: number, trg: number, inc: number): number {\n    if (v === trg) {\n        return trg;\n    }\n\n    if (v < trg) {\n        v += inc;\n        if (v >= trg) {\n            return trg;\n        }\n    } else {\n        v -= inc;\n        if (v <= trg) {\n            return trg;\n        }\n    }\n\n    return v;\n}\n\nexport async function sleep(ms = 0): Promise<void> {\n    await new Promise((resolve) => {\n        setTimeout(resolve, ms);\n    });\n}\n\n/**\n * Inplace array shuffling.\n * @param array The array.\n * @return The same array. But shuffled.\n */\nexport function shuffle<T>(array: T[]): T[] {\n    for (let i = 1; i < array.length; i++) {\n        const j = Math.floor(Math.random() * (i + 1));\n\n        if (i !== j) {\n            const tmp = array[i];\n            array[i] = array[j];\n            array[j] = tmp;\n        }\n    }\n\n    return array;\n}\n\nexport function boundsFromMapObject(o: GameObjectInfo, margin = 0): Bounds {\n    const width = o.width + (margin * 2);\n    const height = o.height + (margin * 2);\n    const x = o.x - margin;\n    const y = o.y + margin;\n\n    return { x, y, width, height };\n}\n\n/**\n * Checks if the app is currently running inside of an Electron shell instance.\n *\n * @returns `true` if running inside an Electron shell, `false` otherwise.\n */\n// TODO Migrate to userAgentData once the typings are in place.\nexport function isElectron(userAgent: string = navigator.userAgent): boolean {\n    return !!userAgent.match(/\\belectron\\b/i);\n}\n\n/**\n * Figures out if development mode is enabled or not.\n */\nexport function isDev(): boolean {\n\n    let devMode = false;\n\n    // Legacy behavior.\n    if (window.location.port === \"8000\") {\n        devMode = true;\n    }\n\n    if (window.location.search !== \"\") {\n        return window.location.search.substring(1).split(\"&\").find(key => {\n            if (key.toLowerCase().startsWith(\"dev\")) {\n                devMode = key.length === 3 || key.toLowerCase().endsWith(\"=true\");\n            }\n        }) != null;\n    }\n\n    return devMode;\n}\n\n/**\n * Calculates the volume of a sound in regards to a distance and some additional properties.\n * @param distance  - the distance of the audio source to the audio listener (px)\n * @param intensity - Defines how \"loud\" the sound is or in other terms, how far it can be heard. Defaults to 1.\n * @param maxVolume - Defines the maximum volume of the sound (when distance is 0).\n *                    The sound will never be louder than this. Defaults to 1.\n */\nexport function calculateVolume(\n    distance: number, maxVolume: number = 1, intensity: number = 1\n): number {\n    return Math.max(\n        0,\n        maxVolume - ((distance * METER_PER_PIXEL) / (SOUND_INTENSITY_MULTIPLIER * intensity))\n    );\n}\n\n/** Factor to convert radians to degrees. */\nconst RAD_TO_DEG = 180 / Math.PI;\n\n/**\n * Converts degrees to radians.\n *\n * @param degrees - The value in degrees to convert to radians.\n * @return The given value converted to radians.\n */\nexport function radians(degrees: number): number {\n    return degrees / RAD_TO_DEG;\n}\n\n/**\n * Converts radians to degrees.\n *\n * @param radians - The value in radians to convert to degrees.\n * @return The given value converted to degrees.\n */\nexport function degrees(radians: number): number {\n    return radians * RAD_TO_DEG;\n}\n\n/**\n * Normalizes an angle in radians so it is between 0 (inclusive) and 2*PI (exclusive).\n *\n * @param angle - The angle to normalize.\n * @return The normalized angle.\n */\nexport function normalizeRadians(angle: number): number {\n    const pi2 = Math.PI * 2;\n    return ((angle % pi2) + pi2) % pi2;\n}\n\n/**\n * Normalizes an angle in degrees so it is between 0 (inclusive) and 360 (exclusive).\n *\n * @param degrees - The angle to normalize.\n * @return The normalized angle.\n */\nexport function normalizeDegrees(degrees: number): number {\n    return ((degrees % 360) + 360) % 360;\n}\n\nexport function roundRect(\n    ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number, r: number,\n    up = false, tipOffset = 0\n): CanvasRenderingContext2D {\n    const halfWidth = w / 2;\n    const halfHeight = h / 2;\n    const middlePos = x + halfWidth;\n    const rightPos = x + w;\n    const bottomPos = y + h;\n\n    if (w < 2 * r) { r = halfWidth; }\n    if (h < 2 * r) { r = halfHeight; }\n\n    ctx.beginPath();\n    ctx.moveTo(x + r, y);\n\n    if (up) {\n        ctx.lineTo(middlePos - 4 + tipOffset, y);\n        ctx.lineTo(middlePos + tipOffset, y - 4);\n        ctx.lineTo(middlePos + 4 + tipOffset, y);\n    }\n\n    ctx.arcTo(rightPos, y, rightPos, bottomPos, r);\n    ctx.arcTo(rightPos, bottomPos, x, bottomPos, r);\n\n    if (!up) {\n        ctx.lineTo(middlePos - 4 + tipOffset, bottomPos);\n        ctx.lineTo(middlePos + tipOffset, bottomPos + 4);\n        ctx.lineTo(middlePos + 4 + tipOffset, bottomPos);\n    }\n\n    ctx.arcTo(x, bottomPos, x, y, r);\n    ctx.arcTo(x, y, rightPos, y, r);\n    ctx.closePath();\n\n    return ctx;\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Game } from \"./Game\";\nimport { LoadingScene } from \"./scenes/LoadingScene\";\nimport { isElectron } from \"./util\";\n\nexport class FriendlyFire extends Game {\n    public constructor() {\n        super();\n    }\n}\n\nfunction presentUpdateAvailable(serviceWorker: ServiceWorker): void {\n    (document.getElementById(\"update-banner\") as HTMLDivElement).dataset.state = \"update-available\";\n    (document.querySelector(\"#update-banner .headline\") as HTMLDivElement).innerHTML = \"Update available\";\n    (document.querySelector(\"#update-banner .subhead\") as HTMLDivElement).innerHTML = \"Click here to update the app to the latest version\";\n    (document.getElementById(\"update-banner\") as HTMLDivElement).addEventListener(\"click\", (event) => {\n        serviceWorker.postMessage(\"SKIP_WAITING\");\n    });\n}\n\n/**\n * This promise must be fulfilled prior to the initialization of the application itself.\n */\nlet prelaunchTask: Promise<unknown> = Promise.resolve();\n\n//#region Service Worker Initialization\nif (!isElectron()) {\n\n    const body = document.getElementsByTagName(\"body\")[0];\n    const touchGamepadScript = document.createElement(\"script\");\n    touchGamepadScript.setAttribute(\"defer\", \"true\");\n    touchGamepadScript.setAttribute(\"src\", \"./touch-controls.js\");\n    body.appendChild(touchGamepadScript);\n\n    if (\"registerProtocolHandler\" in navigator && window.location.hostname === \"play.friendlyfiregame.com\") {\n        navigator.registerProtocolHandler(\"web+friendlyfiregame\", \"https://play.friendlyfiregame.com/?s=%s\");\n    }\n\n    if (process.env[\"MODE\"] === \"production\" && \"serviceWorker\" in navigator) {\n        prelaunchTask = navigator.serviceWorker.ready;\n        let isReloading = false;\n        window.addEventListener(\"load\", async () => {\n            try {\n                const registration = await navigator.serviceWorker.register(\"./service-worker.js\");\n                if (registration.waiting !== null) {\n                    presentUpdateAvailable(registration.waiting);\n                }\n\n                // We wait for an UpdateFoundEvent, which is fired anytime a new service worker is acquired\n                registration.addEventListener(\"updatefound\", function(updateFoundEvent) {\n                    // Ignore the event if this is our first service worker and thus not an update\n                    if (registration.active === null) {\n                        return;\n                    }\n\n                    // Listen for any state changes on the new service worker\n                    registration.installing?.addEventListener(\"statechange\", function(stateChangeEvent) {\n                        // Wait for the service worker to enter the installed state (aka waiting)\n                        if (this.state !== \"installed\") {\n                            return;\n                        }\n\n                        // Present the update available UI\n                        if (registration.waiting != null) {\n                            presentUpdateAvailable(registration.waiting);\n                        }\n                    });\n                });\n\n                // We wait for a ControllerEvent, which is fired when the document acquires a new service worker\n                navigator.serviceWorker.addEventListener(\"controllerchange\", async function(controllerChangeEvent) {\n\n                    // We delay our code until the new service worker is activated\n                    await this.ready;\n\n                    // Reload the window\n                    if (!isReloading) {\n                        isReloading = true;\n                        window.location.reload();\n                    }\n                });\n\n            } catch (e) {\n                console.error(\"Registration of service worker failed.\", e);\n            }\n        });\n    }\n}\n//#endregion\n\n(async () => {\n    await prelaunchTask;\n    const game = new FriendlyFire();\n    window.game = game;\n    void game.scenes.setScene(LoadingScene);\n    game.start();\n})().catch(console.error);\n"],"names":["BlendMode","Object","defineProperty","exports","value","Direction","Format","BlendMode_1","enumerable","get","Direction_1","Format_1","GridOrientation","WangSetType","TileRenderSize","ObjectAlignment","FillMode","isTilesetRef","isEmbeddedTileset","VerticalAlign","HorizontalAlign","PropertyType","StaggerIndex","StaggerAxis","RenderOrder","MapOrientation","Encoding","DrawOrder","decodeTileLayer","Compression","isUnencodedTileLayer","isTileLayer","isObjectGroup","isImageLayer","isGroup","isEncodedTileLayer","GridOrientation_1","AnyLayer_1","Compression_1","decodeTileLayer_1","DrawOrder_1","Encoding_1","MapOrientation_1","MapRenderOrder_1","MapRenderOrder","StaggerAxis_1","StaggerIndex_1","PropertyType_1","HorizontalAlign_1","VerticalAlign_1","AnyTileset_1","FillMode_1","ObjectAlignment_1","TileRenderSize_1","WangSetType_1","layer","type","encoding","CSV","base64_js_1","fzstd_1","pako_1","decoders","BASE64","toByteArray","decompressors","NONE","data","ZLIB","inflate","GZIP","ungzip","ZSTD","decompress","decode","compression","toArray","Array","from","Uint32Array","buffer","byteOffset","undefined","chunks","map","chunk","tileset","source","byteLength","b64","lens","getLens","validLen","placeHoldersLen","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","code","Error","indexOf","start","end","num","output","ab","ArrayBuffer","u8","u16","Uint16Array","i16","Int16Array","slc","v","s","e","prototype","slice","call","n","set","subarray","fill","cpw","t","copyWithin","ZstdErrorCode","InvalidData","WindowSizeTooLarge","InvalidBlockType","FSEAccuracyTooHigh","DistanceTooFarBack","UnexpectedEOF","ec","err","ind","msg","nt","captureStackTrace","rb","d","b","o","rzfh","dat","w","n3","flg","ss","cc","df","fcf","bt","db","di","fsb","fss","ws","wb","buf","y","l","i32","u","c","m","Math","min","msb","val","bits","rfse","mal","tpos","al","sz","probs","sym","re","ht","freq","dstate","nstate","bb1","syms","nbits","cbt","msk","msk1fb","msv","sval","rbt","sympos","sstep","smask","sf","ns","nb","dllt","dmlt","doct","b2bl","bl","llb","llbl","mlb","mlbl","dhu","out","hu","lb","eb","st","btr","pos","dhu4","sz1","sz2","sz3","rzb","_a","b0","btype","ebt","b3","lbt","lss","lcs","s4","spl","h","hud","wc","hb","hw","rc","ri","fdt","epos","st1","st2","btr1","btr2","fpos","byte","wes","wt","mb","ts","rem","hbuf","pv","rhu","scm","dts","md","rbuf","_b","mlt","oct","llt","spos","oubt","lst","ost","mst","llc","lbtr","mlc","mbtr","ofc","obtr","ofp","off","ml","ll","idx","stin","bs","cct","bufs","ol","chk","blk","Decompress","ondata","this","z","final","sub","ncs","adc","rest","Deflate","deflate","deflateRaw","gzip","Inflate","inflateRaw","constants","module","zlib_deflate","utils","strings","ZStream","toString","Z_NO_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","Z_DEFLATED","options","assign","level","method","chunkSize","windowBits","memLevel","strategy","opt","raw","ended","strm","avail_out","status","deflateInit2","header","deflateSetHeader","dictionary","dict","string2buf","deflateSetDictionary","_dict_set","input","deflator","result","flush_mode","_flush_mode","next_in","avail_in","next_out","onData","deflateEnd","onEnd","flattenChunks","zlib_inflate","GZheader","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","to","inflateInit2","inflateGetHeader","inflateSetDictionary","inflator","last_avail_out","state","wrap","inflateReset","next_out_utf8","utf8border","tail","utf8str","buf2string","inflateEnd","_has","obj","key","hasOwnProperty","sources","arguments","shift","TypeError","p","STR_APPLY_UIA_OK","String","fromCharCode","apply","__","_utf8len","q","str","TextEncoder","encode","c2","m_pos","str_len","buf_len","max","TextDecoder","utf16buf","c_len","buf2binstring","adler","s1","s2","Z_PARTIAL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_BINARY","Z_TEXT","Z_UNKNOWN","crcTable","table","k","makeTable","crc","_tr_init","_tr_stored_block","_tr_flush_block","_tr_tally","_tr_align","adler32","crc32","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","rank","f","zero","slide_hash","wsize","w_size","hash_size","head","prev","HASH","hash_shift","hash_mask","flush_pending","pending","pending_buf","pending_out","total_out","flush_block_only","last","block_start","strstart","put_byte","putShortMSB","read_buf","size","total_in","longest_match","cur_match","match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","_win","window","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","insert","ins_h","deflate_stored","flush","left","have","min_block","pending_buf_size","used","bi_valid","matches","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","sym_next","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","HEAP_SIZE","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","heap_len","heap_max","depth","sym_buf","lit_bufsize","sym_end","opt_len","static_len","bi_buf","deflateStateCheck","deflateResetKeep","data_type","deflateReset","ret","deflateInit","old_flush","level_flags","text","hcrc","extra","name","comment","time","os","beg","copy","gzhead_extra","bstate","deflate_huff","deflate_rle","dictLength","tmpDict","avail","next","deflateInfo","xflags","extra_len","done","BAD","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","dist","from_source","lencode","distcode","lenbits","distbits","top","dolen","mode","dodist","sane","inflate_fast","inflate_table","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","MEM","zswap32","InflateState","havedict","flags","check","total","wbits","offset","ncode","nlen","ndist","work","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","Int32Array","inflateReset2","lenfix","distfix","virgin","fixedtables","updatewindow","src","inflateInit","put","here_bits","here_op","here_val","last_bits","last_op","last_val","opts","order","inf_leave","dictid","inflateInfo","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","low","mask","root","curr","drop","huff","base","count","MAXBITS","offs","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES","_dist_code","_length_code","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","send_bits","send_code","tree","bi_reverse","res","gen_codes","next_code","init_block","LITERALS","END_BLOCK","bi_windup","smaller","_n2","_m2","pqdownheap","j","compress_block","ltree","dtree","lc","sx","build_tree","desc","stree","node","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","stored_len","LENGTH_CODES","L_CODES","tr_static_init","opt_lenb","static_lenb","max_blindex","block_mask","detect_data_type","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","APP_NAME","CACHE_NAME","GAME_CANVAS_WIDTH","GAME_CANVAS_HEIGHT","PIXEL_PER_METER","METER_PER_PIXEL","SOUND_INTENSITY_MULTIPLIER","GRAVITY","SHORT_JUMP_GRAVITY","DROWNING_VELOCITY","MAX_PLAYER_SPEED","MAX_PLAYER_RUNNING_SPEED","PLAYER_ACCELERATION","PLAYER_ACCELERATION_AIR","PLAYER_JUMP_HEIGHT","PLAYER_BOUNCE_HEIGHT","TERMINAL_VELOCITY","PLAYER_JUMP_TIMING_THRESHOLD","DOUBLE_JUMP_COLORS","PLAYER_HEIGHT","PLAYER_WIDTH","PLAYER_CARRY_HEIGHT","DIALOG_FONT","PETTING_ENDING_CUTSCENE_DURATION","PETTING_ENDING_FADE_DURATION","WINDOW_ENDING_CUTSCENE_DURATION","WINDOW_ENDING_FADE_DURATION","STEAM_APP_ID","entity","currentAnimation","tag","duration","finished","assignSprite","sprite","updateAnimation","config","scene","gameTime","dt","callback","getAnimationDurationByTag","play","direction","animationTime","loop","lastFrameTime","draw","renderer","addAseprite","x","RenderingLayer","ENTITIES","Aseprite","json","image","frameTags","frameTagDurations","fallbackTag","frames","values","reduce","frame","frameTag","meta","load","fetch","baseURL","URL","location","href","loadImage","width","sourceSize","height","calculateFrameIndex","now","Forward","delta","Reverse","PingPong","frameTime","frameIndex","getFrameIndex","drawFrame","ctx","index","drawImage","round","spriteSourceSize","getTaggedFrameIndex","drawTag","getLayer","layers","find","assets","Map","AssetRequest","target","propertyKey","resolve","asset","assetRequests","loadAsset","endsWith","BitmapFont","soundChannel","startsWith","SoundChannel","MUSIC","SFX","Sound","onProgress","request","loaded","pop","Promise","all","sourceImage","colors","charMap","charHeight","charWidths","compactablePrecursors","charMargin","canvas","document","createElement","colorMap","prepareColors","charStartPoints","charCount","charReverseMap","char","characters","characterMapping","charDef","widths","characterHeight","margin","keys","getRenderingContext","globalCompositeOperation","fillStyle","save","beginPath","rect","clip","fillRect","restore","getCharIndex","charIndex","drawCharacter","color","colorIndex","charX","charY","drawText","align","alpha","translate","DisplayManager","getInstance","getRenderMode","RenderMode","NATIVE","getTransform","transform","globalAlpha","measureText","precursorChar","currentChar","spaceReduction","includes","drawTextWithOutline","xPos","yPos","textColor","outlineColor","yOffset","xOffset","interpolationTime","barHeight","zoom","rotation","focuses","zoomingOut","currentBarTarget","currentBarHeight","isDev","console","log","addEventListener","handleKeyDown","bind","setBounds","bounds","getBounds","stopPropagation","preventDefault","repeat","displayManager","game","oldRenderMode","teleport","getBoundingClientRect","cx","clientX","cy","clientY","px","py","worldRect","getVisibleRect","tx","ty","player","getCurrentMapBounds","setVelocity","reset","setRenderMode","removeEventListener","handleKeyUp","cw","ch","isPointVisible","radius","visibleRect","setCinematicBar","getBaseCameraTarget","xTarget","yTarget","targetVisibleRect","overBounds","right","bottom","visibleCenterX","visibleCenterY","update","baseCamTarget","fire","isAngry","apocalypse","applyApocalypticShake","world","getWidth","getHeight","focus","updateAndApplyFocus","filter","dead","shiftValue","shakeSource","dx","dy","dis","sqrt","intensity","shake","playerConversation","rnd","isOnTarget","getFocusForce","a","force","applyTransform","scale","rotate","imageSmoothingEnabled","imageSmoothingQuality","unapplyTransform","focusOn","curve","valueCurves","cos","startTime","endTime","progress","reject","clamp","f1","currentSize","addCinematicBarsToRenderer","add","RenderingType","BLACK_BARS","drawBars","setTransform","PI","isZoomingOut","allDialogs","CharacterAsset","VoiceAsset","onStatesChanged","Signal","states","quests","QuestA","QuestB","QuestC","QuestD","QuestE","selectedCharacter","FEMALE","selectedVoice","isNewGamePlus","getQuest","ending","setNewGamePlus","toggleCharacterAsset","MALE","toggleVoiceAsset","begin","gameScene","forEach","QuestKey","A","trigger","QuestATrigger","JUST_ARRIVED","runAction","hasState","setStates","emit","removeState","splice","addState","action","npc","params","face","setMode","FaceModes","ANGRY","NEUTRAL","BORED","AMUSED","SAD","camera","forestPointer","pointsOfInterest","poi","mountainPointer","riverPointer","APOCALYPSE_STARTED","cubic","then","beginApocalypse","conversation","fireFuryEndTime","beginFriendshipEnding","exitPortal","activate","flameboy","nextState","TALKED_TO_FIRE","Conversation","setGlobal","setGateDisabled","removeMultiJump","removeGameObject","shiba","powerShiba","bird","shadowPresence","wing","mimic","stone","stoneDisciple","TALKED_TO_TREE","GOT_QUEST_FROM_FIRE","BEAT_GAME","finish","gameOver","B","C","caveman","enableRunning","enableDoubleJump","GOT_MULTIJUMP","enableMultiJump","enableFriendship","spawnSeed","TREE_DROPPED_WOOD","spawnWood","getHighestTriggerIndex","PLANTED_SEED","TALKED_TO_STONE","pickUp","enableRainDance","GOT_WOOD","TALKED_TO_FIRE_WITH_WOOD","setTimeout","startDance","beginPetEnding","beginWindowEnding","dialogName","targetNpc","seed","dialog","char1","targetNpc1","CharacterSounds","getSoundData","lowPitchJump","lowPitchDrown","lowPitchLand","lowPitchThrow","highPitchJump","highPitchDrown","highPitchLand","highPitchThrow","getRandomCharacterSound","voice","rndItem","playRandomCharacterSound","stopCharacterSound","randomSound","stop","ColorGradient","mapping","getCss","fromTable","items","floor","fromImage","img","pixels","getImageData","naturalWidth","naturalHeight","earlyActions","Set","stateIndex","endConversation","localVariables","skippedLines","line","ConversationLine","setState","getNextInteraction","npcLine","spoiledOptions","getNextLine","isNpc","goBack","option","setVariable","campaign","globalVariables","varname","getGlobals","resetGlobals","getVariable","steps","ignoreDisabled","condition","testCondition","self","split","some","evaluateFragment","substring","trim","parseFloat","hasEnded","full","visited","extractText","extractCondition","targetState","extractState","actions","extractActions","executeBeforeLine","isEarlyAction","execute","has","wasVisited","autoWrap","OPTION_MARKER","atPos","exclPos","search","minPos","wrapString","conditionString","stateChanges","charsPerLine","currentLength","lastSpace","Dance","bpm","warmupBeats","allowedMistakes","timeTolerance","withMusic","musicIndex","currentKey","currentDistanceToIdealTime","allKeys","mistakes","lastMistake","lastSuccess","performance","currentIndex","success","alphaCurve","wasSuccessful","hasStarted","getTimeSinceLastMistake","getTimeSinceLastSuccess","openTime","raindance_music","setVolume","treedance_music","setPosition","handleButtonDown","isPlayerDance1","keySuccess","nxt","keyFailure","replace","successSound","registerMistake","failSound","keyMissed","loseGame","prevIndex","updateMusic","resetMusic","abs","isPlaying","fade","fadeActiveBackgroundTrack","setBgmVolume","resetMusicVolumes","addDanceToRenderQueue","DANCE","UI","dance","controller","ControllerManager","controllerSprite","bar","textAlign","w2","xp","strokeStyle","indicator","sweetX","HTMLImageElement","DialoguePrompt","timeAlive","floatAmount","floatSpeed","floatOffsetY","sin","anchorX","anchorY","DEFAULT_RENDER_MODE","PIXEL_IMPERFECT","PREFERENCES_DISPLAY_RENDER_MODE","DisplayPreferencesStore","localStorage","getItem","renderMode","setItem","fullscreenPreferencesStore","onChange","setFullscreenEnabled","fullscreenEnabled","setEnabled","isFullscreenEnabled","isEnabled","FullscreenManager","entities","args","constructor","Entity","isTrigger","animator","Animator","distanceTo","distanceToPlayer","getClosestEntityInRange","range","sortedEntityDistances","getEntitiesInRange","sort","distance","entitiesInRange","gameObjects","gameObject","getClosestEntity","isCollidingWithTrigger","triggerName","collisions","getTriggerCollisions","findIndex","remove","EyeType","Face","owner","eyeType","offX","offY","setOffY","sprites","ASEPRITE","translation","position","animationTag","toggleDirection","setDirection","FireGfx","coneShaped","updateMs","returnColor","bottomLine","nextUpdate","age","context","getContext","imageData","decayData","init","Date","decay","row","decayRow","yrel","getDecay","xrel","stuffedXrel","smooth","pow","updateStep","render","fromRow","fromX","toCenter","toCenter1","midX","yThreshold","Infinity","yp","fromX1","fx","skew","orientPow","exponent","baseX","col","valueToColor","putImageData","gradient","oldValueToColor","v255","getImage","controllerManager","keyboard","Keyboard","gamepad","GamepadInput","scenes","Scenes","Assets","Campaign","characterSounds","backgroundColor","gameLoopCallback","gameLoop","gameLoopId","lastUpdateTime","mouseTimeout","getGameCanvas","connect","updateCanvas","SteamworksApi","AudioManager","desynchronized","style","body","appendChild","mouseMoved","async","event","altKey","lockingEnabled","navigator","lock","matchMedia","fullscreenElement","unlock","exitFullscreen","requestFullscreen","steamworks","audioManager","fullscreenManager","cursor","updateMouse","innerWidth","innerHeight","PIXEL_PERFECT","dpr","devicePixelRatio","imageRendering","currentUpdateTime","nextFrame","requestAnimationFrame","cancelAnimationFrame","GlobalStateKey","GlobalState","getParsedValueByKey","fallback","serialized","JSON","parse","error","setKeyValuePair","stringify","getHasBeatenGame","BEAT_GAME_ONCE","setHasBeatenGame","getAchievedEndings","ACHIEVED_ENDINGS","setAchievedEnding","questKey","achievedEndings","MapObjectType","getObjects","objects","flatMap","object","getGameObjectInfos","mapHeight","tileheight","properties","props","property","getEntities","ENTITY","getSounds","SOUND","getPointers","POINTER","getTriggerObjects","TRIGGER","getBoundObjects","BOUNDS","getGateObjects","GATE","MenuAlignment","MenuItem","id","label","font","enabled","focused","CENTER","selectorImage","SliderMenuItem","super","initialValue","minValue","maxValue","increment","rightActionCallback","leftActionCallback","getValue","setValue","increaseValue","decreaseValue","valueText","valueWidth","CheckboxMenuItem","actionCallback","toggleValue","SelectMenuItem","valueLabels","cycleValue","nextValue","previousValue","MenuList","SceneNode","LEFT","onActivated","onRightAction","onLeftAction","addItems","focusFirstItem","setItems","getFocusedItem","item","getFocusedItemIndex","unfocusAllItems","focusItem","findAndFocusNextItem","nextIndex","click","executeAction","sound","confirm","focusedButton","executeRightAction","executeLeftAction","MountainRiddle","attemptCount","failed","cleared","solution","getRandomizedSolution","random","isCorrectGate","checkGate","failRiddle","wasAttempted","registerAttempt","wrong","isFailed","resetRiddle","isCleared","clearRiddle","emitters","emitter","addEmittersToRenderingQueue","PARTICLE_EMITTER","renderingLayer","zIndex","addEmitter","dropEmitter","createEmitter","ParticleEmitter","toGenerator","Function","particles","offsetGenerator","velocityGenerator","velocity","colorGenerator","alphaGenerator","sizeGenerator","gravityGenerator","gravity","lifetimeGenerator","lifetime","angleGenerator","angle","angleSpeedGenerator","angleSpeed","breakFactor","blendMode","constant","sizeCurve","PARTICLES","updateMethod","clear","emitSingle","particle","Particle","vx","vy","imageOrColor","halfSize","originalLifetime","factor","ValueCurve","getExact","invert","append","otherCurve","relativeLength","mid","trapezeFunction","v1","linear","trapeze","autoMove","interaction","selectedOption","setSelectedOption","setBubblesContent","meet","minDis","startAutoMove","optionsTexts","speechBubble","setMessage","show","setOptions","sel","selectedOptionIndex","handleButton","isAbort","isPause","isConfirm","proceed","upDown","isMenuDown","isMenuUp","isCurrentlyWriting","preventUnwantedSelection","select","defaultFaceMode","hide","registerEndedConversation","QuestBTrigger","QuestCTrigger","QuestDTrigger","QuestETrigger","Quest","title","triggerIndices","triggers","isTriggered","untrigger","getTriggers","allTriggered","every","isFinished","D","E","LAYER_ORDER","DEBUG","FULLSCREEN_FX","TILEMAP_FOREGROUND","PLAYER","PLATFORMS","TILEMAP_MAP","TILEMAP_BACKGROUND","queue","reverse","FIRE","drawToCanvas","RAW","relativeToScreen","DRAW_IMAGE","RECT","lineColor","lineWidth","strokeRect","dimension","fillColor","SPEECH_BUBBLE","roundRect","up","offsetX","closePath","TEXT","currentTransition","inTransition","outTransition","usedLayers","hiddenLayers","backgroundStyle","rootNode","RootNode","updateRootNode","drawRootNode","resizeTo","urlFragment","showLayer","hideLayer","isLayerHidden","isLayerShown","getNodeById","getDescendantById","getBackgroundStyle","setBackgroundStyle","isActive","activeScene","setup","deactivate","cleanup","history","replaceState","sceneCache","WeakMap","sortedScenes","createScene","sceneClass","pushScene","updateSortedScenes","getPreviousScene","popScene","noTransition","setScene","newSceneClass","currentScene","outTransitionPromise","currentSceneIndex","newScene","Slot","onInit","slots","onDone","disconnect","slot","predicate","signal","mapper","SpeechBubble","messageLines","fontSize","lineHeight","messageVelocity","isVisible","content","longestLine","partnersBubble","lineHeightFactor","paddingTop","paddingBottom","paddingLeft","paddingRight","paddingHorizontal","paddingVertical","hasContent","message","determineMaxLineLength","sleep","updateContent","concat","posX","posY","relativeX","clipAmount","sign","bubbleXPos","bubbleYPos","textXPos","textYPos","isSelected","OPTION_BUBBLE_INDENTATION","lineLengths","easing","elapsed","promise","valueOf","Environment","validEnvironments","World","raining","rainSpawnPosition","rainEmitter","raindrop","foreground","rndInt","camX","camY","posXMultiplier","posYMultiplier","pettingCutscene","pettingCutsceneTime","windowCutscene","windowCutsceneTime","background","debugBackground","bgX","bgY","backgrounds","getEnvironment","collisionMap","AIR","collidesWith","ignoreObjects","ignore","isCollidableGameObject","environment","getEntityCollisions","sourceEntity","ignoreEntities","Particles","boundingBoxesCollide","triggerObject","triggerObjects","boundsFromMapObject","entityIsAvailableInNewGameState","newGamePlus","newGamePlusProp","getGateCollisions","gateObject","gateObjects","disabled","getCameraBounds","boundObjects","box1","box2","getObjectAt","collidesWithVerticalLine","collision","getGround","startRain","stopRain","isRaining","AudioContext","webkitAudioContext","audioContext","resume","onButtonDown","audioPreferencesStore","getAudioContext","createGain","destination","gain","music","sfx","musicGainNode","sfxGainNode","musicGain","MIN_GAIN_VALUE","MAX_GAIN_VALUE","sfxGain","Preferences","audio","PREFERENCES_MUSIC_GAIN_KEY","PREFERENCES_SFX_GAIN_KEY","MusicPreferencesStore","DEFAULT_GAIN_VALUE","Number","toFixed","SfxPreferencesStore","channel","gainNode","url","arrayBuffer","decodeAudioData","createBufferSource","setLoop","volume","SoundEmitter","maxVolume","vol","paused","calculateVolume","fromGameObjectInfo","gameObjectInfo","soundId","ambientSounds","WebFullscreenManager","fullscreen","currentFullscreenElement","documentElement","navigationUI","easeOutBounce","easeInBounce","BirdState","Bird","NPC","move","jumpHeight","waitTimer","WAITING_LEFT","jumpTimer","minAltitude","doubleJumpEmitter","setMaxVelocity","isWaiting","WAITING_RIGHT","jump","setVelocityY","jumpSound","canJump","updatePosition","newX","newY","pullOutOfGround","pullOutOfCeiling","pullOutOfWall","setVelocityX","pulled","getVelocityY","WATER","PLATFORM","getVelocityX","FLYING_LEFT","isReadyForConversation","triggerCollisions","hasActiveConversation","FLYING_RIGHT","accelerateX","decelerateX","Bone","PhysicsEntity","isCarried","isCarrying","carry","feed","Campfire","Caveman","Chicken","lookAtPlayer","getInteractionText","met","Cloud","canRain","setFloating","isRainCloud","timedRnd","ConversationProxy","generateConversation","prepareContent","addGameObject","lines","entry","PortalAnimationState","ExitPortal","animationState","OFF","nextAnimationState","FADEIN","IDLE","SHRINK_SIZE","Fire","FireState","angry","beingPutOut","growthTarget","growth","averageParticleDelay","averageSteamDelay","fireGfx","soundEmitter","fireAmbience","smokeEmitter","smokeImage","steamEmitter","steamImage","sparkEmitter","STANDARD","showDialoguePrompt","THROWN_WOOD_INTO_FIRE","BEAT_FIRE","isRendered","isBeingPutOut","BEING_PUT_OUT","isPutOut","PUT_OUT","drawFace","drawDialoguePrompt","thinkBubble","DISGUSTED","friendshipCutscene","getState","ShibaState","KILLING_FIRE","particleChance","steamParticleChance","dialoguePrompt","wood","startApocalypseMusic","thoughts","thought","delay","think","FlameBoyState","IDLE_DURATION","WALK_DURATION","FlameBoy","ScriptableNPC","VENDOR","idleTimer","walkTimer","autoMoveDirection","FLAMEBOY","WAITING_FOR_DIALOG","FLAMEBOY2","thrownStoneIntoWater","THROWN_STONE_INTO_WATER","waitingForWoodDialog","getAnimationTag","walkRandomly","MimicState","Mimic","SLEEPING","OPEN_UP","openingSound","MovingPlatform","startX","targetX","startY","targetY","greeting","lastEndedConversation","hasMet","isControllable","drawGreeting","updateGreeting","velocityX","velocityY","maxVelocityX","maxVelocityY","floating","ground","carryHeight","lastGroundPosition","isFloating","accelerate","accelerateY","decelerate","decelerateY","checkCollision","checkCollisionBox","env","isJumpDown","isPlayer","getGravity","groundColors","bounceColors","drownThoughts","drowningThoughts","Player","controllerSpriteMapRecords","ControllerSpriteMap","KEYBOARD","buttons","XBOX","PLAYSTATION","STADIA","lastHint","flying","playerSpriteMetadata","animation","moveLeft","moveRight","visible","running","jumpThresholdTimer","jumpDown","jumpKeyPressed","drowning","currentFailAnimation","carrying","canRun","jumpDisabled","canRainDance","doubleJump","multiJump","hasFriendship","usedJump","usedDoubleJump","showHints","isPettingDog","walkingSpeed","closestNPC","disableParticles","characterAsset","voiceAsset","dustEmitter","bounceEmitter","getControllable","setControllable","turnAround","destinationX","lastX","stopAutoMove","startPettingDog","stopPettingDog","silent","GOT_RUNNING_ABILITY","GotItemScene","Item","RUNNING","LEARNED_RAIN_DANCE","RAINDANCE","GOT_QUEST_FROM_TREE","DOUBLEJUMP","MULTIJUMP","disableMultiJump","FRIENDSHIP","removePowerUps","switchToReality","PATIENT","enterShadowCave","getDance","cancelDance","isPlayerMoveLeft","isPlayerMoveRight","isPlayerAction","cancelPatEnding","isPlayerRun","isPlayerEnterDoor","canEnterDoor","gate","enterGate","isPlayerInteract","Sign","Stone","StoneState","DEFAULT","PlayerConversation","readableTrigger","proxy","canDanceToMakeRain","MADE_RAIN","throw","isPlayerJump","isPlayerDrop","canThrowStoneIntoWater","Snowball","showBounds","bone","difficulty","targetGate","targetBgmId","bgm","enterSound","enterPortalSound","enterGateSound","fadeToBlack","FadeDirection","FADE_OUT","setActiveBgmTrack","exitSound","leaveGateSound","exitSleepTime","fadeInTime","exitFadeTime","FADE_IN","teleportTo","handleButtonUp","drawTooltip","buttonTag","ControllerAnimationTags","ACTION","measure","textPositionX","textPositionY","playerSprites","INTERACT","OPEN_DOOR","canThrowSeedIntoSoil","Seed","SOIL","debugCollisions","getReadableTrigger","respawn","getPlayerSpriteMetadata","metaDataJSON","resetJumps","isOutOfBounds","mapBounds","showHint","currentFrameIndex","carryOffsetFrames","isDrowning","wasFlying","prevVelocity","acceleration","walkingSound","closestEntity","ceil","BOUNCE","bounce","suc","bossPointer","wallIdentifier","targetWall","Wall","identifier","crumble","mountainRiddle","teleportY","globalConversationProps","setGlobalKey","setGlobalVal","enableConversationProps","setDialogEntity","setDialogValue","bouncingSound","GOT_SEED","Wood","GOT_STONE","SeedState","FREE","WoodState","Portal","WAITING","FADEOUT","GONE","PowerShibaState","PowerShiba","IN_CLOUDS","ON_MOUNTAIN","spawn","Radio","RiddleStone","floatingPosition","resetState","bury","seedPosition","getSpriteTag","PLANTED","GROWN","grow","SWIMMING","diffX","moveX","startDialog","AnimationTag","ShadowPresence","isNearPlayer","caveAmbience","INVISIBLE","checkPlayerDistance","Shiba","ON_TREE","flyingTime","saidFarewell","peeing","isBeingPetted","nextHeartParticle","heartEmitter","heartImage","FLYING_AWAY","GOING_TO_FIRE","shibaSpawnPos","startFriendshipMusic","putOutSound","FIRE_KILLED","startBeingPetted","stopBeingPetted","onTreeUpdateLogic","flyingAwayUpdateLogic","walkToFireLogic","Skull","arc","stroke","STONE","FLOATING","SOLID","dropInWater","StoneDisciple","STONEDISCIPLE","talkedToStoneDisciple","talkedToStoneDiscipleAgain","gotTeleported","SuperThrow","Tree","TREE","WallState","CRUMBLED","Window","Wing","isLeft","isRight","RIGHT","isTop","TOP","isBottom","BOTTOM","isHorizontal","isVertical","isEdge","isCorner","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","getX","getY","gameCanvas","createCanvas","contextId","createContext2D","Image","onload","onerror","AffineTransform","m11","m12","m21","m22","fromDOMMatrix","domMatrix","is2D","clone","toDOMMatrix","DOMMatrix","setComponents","setMatrix","matrix","isIdentity","mul","other","a11","a12","a21","a22","a31","a32","b11","b12","b21","b22","b31","b32","div","c11","c12","c21","c22","c31","c32","getDeterminant","m31","m32","translateX","getTranslationX","translateY","getTranslationY","setTranslation","createTranslation","sy","setScale","scaleX","getScaleX","hypot","scaleY","getScaleY","createScale","getRotation","acos","setRotation","createRotation","transformCanvas","setCanvasTransform","normal","center","getNormal","Vector2","normalize","getCenter","moveTo","lineTo","drawNormal","vertices","edges","normals","Line2","hasVertices","addVertex","vertex","edge","previousEdge","removeVertex","nextEdge","getVertexNormal","first","drawNormals","drawVertexNormals","setVector","vector","getSquareLength","getLength","getSquareDistance","getDistance","dot","negate","summand","subtrahend","arg","ControllerEvent","controllerFamily","eventType","intents","isMenuLeft","ControllerIntent","MENU_LEFT","isMenuRight","MENU_RIGHT","MENU_UP","MENU_DOWN","PLAYER_MOVE_LEFT","PLAYER_MOVE_RIGHT","PLAYER_JUMP","PLAYER_DROP","PLAYER_ENTER_DOOR","PLAYER_INTERACT","PLAYER_ACTION","PLAYER_RUN","PLAYER_DANCE_1","isPlayerDance2","PLAYER_DANCE_2","PAUSE","CONFIRM","ABORT","gamepadModel","ControllerFamily","GAMEPAD","ControllerEventType","currentGamepadStyleOverride","gamepadStyleOverride","oldGamepadStyle","currentGamepadStyle","onGamepadStyleChange","autoDetectGamepadStyle","autodetectGamepadStyle","initialControllerFamily","onButtonUp","onButtonPress","onControllerFamilyChange","DEFAULT_GAMEPAD_STYLE","currentControllerFamily","GamepadControllerEvent","toggleSelectedGamepadStyle","GamepadStyle","GamePadButtonId","StickAxisId","axisMapping","LEFT_LEFT_RIGHT","button1","D_PAD_LEFT","button2","D_PAD_RIGHT","LEFT_UP_DOWN","D_PAD_UP","D_PAD_DOWN","intentMappings","BUTTON_1","BUTTON_2","BUTTON_3","BUTTON_4","SHOULDER_TOP_LEFT","SHOULDER_TOP_RIGHT","START","GamepadButtonWrapper","wrapped","pressed","setPressed","oldPressed","DOWN","UP","GamepadAxisWrapper","threshold","newValue","oldValue","emulatedButtonId","GamepadWrapper","GamepadModel","fromString","axes","getGamepads","button","axis","delete","typemap","SNES","productAndVendorMatcher","vendorId","productId","exec","productAndVendorMatch","groups","parseInt","DEFAULT_GAMEPAD_MODEL","UNKNOWN","preventDefaultKeyCodes","keyToIntentMappings","onKeyDown","onKeyUp","onKeyPress","handleKeyPress","ctrlKey","metaKey","PRESS","isPressed","AudioPreferencesStore","AsepriteNode","aseprite","getAseprite","setAseprite","invalidate","getTag","setTag","ControlTooltipNode","control","childAnchor","gap","icon","anchor","appendTo","TextNode","updateLayout","updateControllerData","iconWidth","setX","ImageNode","ProgressBarNode","borderStyle","progressStyle","setProgress","getProgress","expose","updateAll","drawAll","PostDrawHints","opacity","parent","nextSibling","previousSibling","firstChild","lastChild","boundsPolygon","Polygon2","transformation","sceneTransformation","animations","getId","setId","setY","moveBy","setWidth","invalidateBounds","setHeight","getOpacity","setOpacity","getEffectiveOpacity","getAnchor","setAnchor","getChildAnchor","setChildAnchor","getTransformation","transformer","getScene","forEachChild","getParent","getNextSibling","getPreviousSibling","getFirstChild","getLastChild","hasChildNodes","oldParent","removeChild","oldLastChild","prependChild","insertBefore","newNode","refNode","oldPrevious","replaceChild","oldNode","prependTo","thisArg","forEachDescendant","findChild","findDescendant","someChildren","getChildren","children","updateBoundsPolygon","getBoundsPolygon","animate","animationArgs","SceneNodeAnimation","finishAnimations","child","hasAnimations","log2","setLayer","updateAnimations","numAnimations","postUpdate","updateChildren","postDraw","drawChildren","CONTINUE_DRAWING","sceneNode","timeIndex","updateSize","getText","setText","getFont","setFont","getColor","setColor","getOutlineColor","setOutlineColor","AmbientSoundId","BgmId","MenuItemKey","CharacterSelectionScene","Scene","menu","handleMenuAction","buttonId","CHARACTER","updateSelection","VOICE","voices","TitleScene","GameScene","START_PLUS","variant1","variant2","voice1","voice2","character","SlideTransition","easeOutCubic","panel","panelImage","headlineFont","menuItemX","characterMenuItemY","charSelectionTextX","voiceMenuItemY","voiceSelectionTextX","BACK","ControlsScene","controls","gamepadStyle","gamepadSelection","gamepadControls","keyboardKeys","CreditsScene","starPositions","lineSpacing","targetMusic","getCorrectBackgroundTrack","FadeTransition","backgroundImageSpace","spaceship","spaceshipsmall","backgroundImage","stars","leaf","overlayImage","createCreditsNode","standardFont","appInfo","gitCommitHash","totalCrawlHeight","credits","addTitle","addParagraph","addCredit","titleText","versionText","version","marginBottom","names","creditsFont","EndScene","subtitleDelay","inputDelay","logo","easeOutQuad","boom","gotoCreditsScene","STREAM","ambientStream","WIND","ambientWind","backgroundTracks","active","OVERWORLD","bgm1","baseVolume","CAVE","bgmCave","INFERNO","bgm2","RIDDLE","bgmRiddle","RADIO","bgmRadio","WINGS","bgmWings","AWAKE","bgmAwake","ECSTASY","bgmEcstasy","SHADOWGATE","bgmShadowgate","petEndingTexts","enter","windowEndingTexts","soundEmitters","pettingEndingTriggered","windowEndingTriggered","apocalypseFactor","fireEffects","frameCounter","framesPerSecond","fpsInterval","fadeToBlackEndTime","fadeToBlackStartTime","fadeToBlackFactor","fadeToBlackDirection","Renderer","mapInfo","MapInfo","getPlayerStartingPos","createEntity","getGameObject","Camera","setInterval","initNewGamePlusState","playBackgroundTrack","loadApocalypse","spawns","defaultSpawn","newGamePlusSpawn","clearInterval","gateId","getBackgroundTrack","track","inverse","fadeToBackgroundTrack","muteMusic","pause","PauseScene","swell","updateFriendshipEndingCutscene","updatePettingEndingCutscene","updateWindowEndingCutscene","addAllDebugBoundsToRenderingQueue","drawFade","drawApocalypseOverlay","addSingleDebugBoundsToRenderingQueue","updateApocalypse","fireEmitter","fadeTime","enterTime","canCancelPatEnding","playerTargetPos","bossPosition","cloudPositions","cloud","togglePause","titles","subtitles","easeOutExpo","easeInExpo","subtitle","itemImages","LoadingScene","progressBar","loadAssets","updateProgress","OptionsScene","FULLSCREEN","RENDER_MODE","menuItemY","handleRenderModeChange","SFX_SLIDER","handleAudioSliderChange","MUSIC_SLIDER","toggleFullscreen","RESUME","CONTROLS","OPTIONS","EXIT","MenuLabels","CREDITS","electronOnly","animationDuration","titleBasePosition","logoImage","titleLayer1Position","titleLayer2Position","titleLayer3Position","menuBasePosition","CurtainTransition","easeInSine","titleLayer3","titleLayer2","titleIsland1","titleIsland2","person","titleLayer1","flameicon","addEndingCard","isElectron","opener","animationIsDone","finishAnimation","endingCards","stopMusicTrack","close","playMusicTrack","Transition","minOrMax","array","averageDelay","chance","exp","timeDelta","trg","inc","ms","userAgent","devMode","port","toLowerCase","RAD_TO_DEG","degrees","radians","pi2","r","tipOffset","halfWidth","middlePos","rightPos","bottomPos","arcTo","extendStatics","setPrototypeOf","__proto__","__extends","create","__assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","_","kind","descriptor","access","addInitializer","unshift","__runInitializers","useValue","__propKey","__setFunctionName","prefix","description","configurable","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","fulfilled","step","rejected","__generator","g","sent","trys","ops","verb","Symbol","iterator","__createBinding","k2","__esModule","writable","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","jl","__spreadArray","pack","__await","__asyncGenerator","asyncIterator","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__setModuleDefault","__importStar","mod","__importDefault","default","__classPrivateFieldGet","receiver","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","dispose","asyncDispose","stack","_SuppressedError","SuppressedError","suppressed","__disposeResources","fail","hasError","rec","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","prop","toStringTag","FriendlyFire","Game","presentUpdateAvailable","serviceWorker","getElementById","dataset","querySelector","innerHTML","postMessage","prelaunchTask","getElementsByTagName","touchGamepadScript","setAttribute","hostname","registerProtocolHandler","ready","isReloading","registration","register","waiting","updateFoundEvent","installing","stateChangeEvent","controllerChangeEvent","reload","catch"],"sourceRoot":""}